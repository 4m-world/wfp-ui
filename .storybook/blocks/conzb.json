{
  "storyStore": {
    "_error": null,
    "_channel": {
      "isAsync": false,
      "sender": "44c9e0ebe7cdb",
      "events": {
        "setCurrentStory": [null],
        "updateStoryArgs": [null],
        "resetStoryArgs": [null],
        "updateGlobals": [null],
        "currentStoryWasSet": [null, null],
        "storyArgsUpdated": [null],
        "globalsUpdated": [null],
        "forceReRender": [null],
        "storybook/docs/snippet-rendered": [null]
      },
      "data": {},
      "transport": { "config": { "page": "preview" }, "buffer": [] }
    },
    "_configuring": false,
    "_globals": {},
    "_globalMetadata": {
      "parameters": {
        "docs": {
          "inlineStories": true,
          "iframeHeight": 100,
          "theme": {
            "base": "light",
            "colorPrimary": "#FF4785",
            "colorSecondary": "#1EA7FD",
            "appBg": "#F6F9FC",
            "appContentBg": "#FFFFFF",
            "appBorderColor": "rgba(0,0,0,.1)",
            "appBorderRadius": 4,
            "fontBase": "\"Open Sans\", sans-serif",
            "fontCode": "monospace",
            "textColor": "#031c2d",
            "textInverseColor": "#FFFFFF",
            "barTextColor": "#999999",
            "barSelectedColor": "#1EA7FD",
            "barBg": "#FFFFFF",
            "inputBg": "#FFFFFF",
            "inputBorder": "rgba(0,0,0,.1)",
            "inputTextColor": "#333333",
            "inputBorderRadius": 4,
            "headerCommon": { "color": "red" }
          }
        },
        "viewMode": "docs",
        "controls": { "expanded": true },
        "previewTabs": {
          "storybook/docs/panel": { "index": -1, "title": "Documentation" },
          "canvas": { "title": "Code" }
        }
      },
      "decorators": [null]
    },
    "_kinds": {
      "Components/BannerNavigation": {
        "order": 0,
        "parameters": {
          "framework": "react",
          "subcomponents": {},
          "fileName": "./src/components/BannerNavigation/BannerNavigation.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Components/Blockquote": {
        "order": 1,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/Blockquote/Blockquote.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Components/Breadcrumb": {
        "order": 2,
        "parameters": {
          "framework": "react",
          "subcomponents": {},
          "fileName": "./src/components/Breadcrumb/Breadcrumb.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Components/Button": {
        "order": 3,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/Button/Button.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Components/Card": {
        "order": 4,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/Card/Card.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Forms/Checkbox": {
        "order": 5,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/Checkbox/Checkbox.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Components/ContentSwitcher": {
        "order": 6,
        "parameters": {
          "framework": "react",
          "subcomponents": {},
          "fileName": "./src/components/ContentSwitcher/ContentSwitcher.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Components/Credits": {
        "order": 7,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/Credits/Credits.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Components/DatePicker": {
        "order": 8,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/DatePicker/DatePicker.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Components/Footer": {
        "order": 9,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/Footer/Footer.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Forms/Form": {
        "order": 10,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/Form/Form.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Forms/FormGroup": {
        "order": 11,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/FormGroup/FormGroup.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Forms/FormHint": {
        "order": 12,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/FormHint/FormHint.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Forms/FormLabel": {
        "order": 13,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/FormLabel/FormLabel.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Forms/FormWizard": {
        "order": 14,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/FormWizard/FormWizard.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Components/Icon": {
        "order": 15,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/Icon/Icon.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Components/InfoBar": {
        "order": 16,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/InfoBar/InfoBar.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Components/InlineLoading": {
        "order": 17,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/InlineLoading/InlineLoading.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Forms/InputGroup": {
        "order": 18,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/InputGroup/InputGroup.stories.js",
          "componentSubtitle": "Component"
        },
        "decorators": []
      },
      "Components/Link": {
        "order": 19,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/Link/Link.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Components/List": {
        "order": 20,
        "parameters": {
          "framework": "react",
          "subcomponents": {},
          "fileName": "./src/components/List/List.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Components/Loading": {
        "order": 21,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/Loading/Loading.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Components/MainNavigation": {
        "order": 22,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/MainNavigation/MainNavigation.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Components/Modal": {
        "order": 23,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/Modal/Modal.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Components/ModalWrapper": {
        "order": 24,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/ModalWrapper/ModalWrapper.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Components/Module": {
        "order": 25,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/Module/Module.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Components/Notification": {
        "order": 26,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/Notification/Notification.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Forms/NumberInput": {
        "order": 27,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/NumberInput/NumberInput.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Components/Pagination": {
        "order": 28,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/Pagination/Pagination.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Components/RadioButton": {
        "order": 29,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/RadioButton/RadioButton.stories.js",
          "componentSubtitle": "RadioButton",
          "status": "released"
        },
        "decorators": []
      },
      "Forms/FileUploader (react-dropzone)": {
        "order": 30,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/ReactDropzone/ReactDropzone.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Forms/ReactSelect": {
        "order": 31,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/ReactSelect/ReactSelect.stories.js",
          "componentSubtitle": "Component",
          "status": "released",
          "introText": "Description for components",
          "code": false,
          "html": false
        },
        "decorators": []
      },
      "Components/ReadMore": {
        "order": 32,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/ReadMore/ReadMore.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Components/Search": {
        "order": 33,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/Search/Search.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Components/SecondaryNavigation": {
        "order": 34,
        "parameters": {
          "framework": "react",
          "subcomponents": {},
          "fileName": "./src/components/SecondaryNavigation/SecondaryNavigation.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Forms/Select": {
        "order": 35,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/Select/Select.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Components/StepNavigation": {
        "order": 36,
        "parameters": {
          "framework": "react",
          "subcomponents": {},
          "fileName": "./src/components/StepNavigation/StepNavigation.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Components/Story": {
        "order": 37,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/Story/Story.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Components/SubNavigation": {
        "order": 38,
        "parameters": {
          "framework": "react",
          "subcomponents": {},
          "fileName": "./src/components/SubNavigation/SubNavigation.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Components/Table": {
        "order": 39,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/Table/Table.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Components/Tabs": {
        "order": 40,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/Tabs/Tabs.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Components/Tag": {
        "order": 41,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/Tag/Tag.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Components/Text": {
        "order": 42,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/Text/Text.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Forms/TextArea": {
        "order": 43,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/TextArea/TextArea.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Forms/TextInput": {
        "order": 44,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/TextInput/TextInput.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Forms/Toggle": {
        "order": 45,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/Toggle/Toggle.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Components/Tooltip": {
        "order": 46,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/Tooltip/Tooltip.stories.js",
          "status": "released"
        },
        "decorators": []
      },
      "Components/Unit": {
        "order": 47,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/Unit/Unit.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Components/User": {
        "order": 48,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/User/User.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Components/Value": {
        "order": 49,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/Value/Value.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Components/Wrapper": {
        "order": 50,
        "parameters": {
          "framework": "react",
          "fileName": "./src/components/Wrapper/Wrapper.stories.js",
          "componentSubtitle": "Component",
          "status": "released"
        },
        "decorators": []
      },
      "Examples/Application page": {
        "order": 51,
        "parameters": {
          "framework": "react",
          "fileName": "./src/documentation/ApplicationPage/ApplicationPage.stories.js",
          "componentSubtitle": "Example"
        },
        "decorators": []
      },
      "Documentation/Browser outdated warning": {
        "order": 52,
        "parameters": {
          "framework": "react",
          "fileName": "./src/documentation/BrowserWarning/BrowserWarning.stories.js",
          "componentSubtitle": "Example"
        },
        "decorators": []
      },
      "Documentation/Capitalization": {
        "order": 53,
        "parameters": {
          "framework": "react",
          "fileName": "./src/documentation/Capitalization/Capitalization.stories.mdx",
          "docs": {}
        },
        "decorators": []
      },
      "Documentation/Colours": {
        "order": 54,
        "parameters": {
          "framework": "react",
          "fileName": "./src/documentation/Colours/Colour.stories.mdx",
          "docs": {}
        },
        "decorators": []
      },
      "Examples/Complex Form": {
        "order": 55,
        "parameters": {
          "framework": "react",
          "fileName": "./src/documentation/ComplexForm/ComplexForm.stories.mdx",
          "docs": {}
        },
        "decorators": []
      },
      "Documentation/Credits": {
        "order": 56,
        "parameters": {
          "framework": "react",
          "fileName": "./src/documentation/Credits/Credits.stories.mdx",
          "docs": {}
        },
        "decorators": []
      },
      "Documentations/Charts": {
        "order": 57,
        "parameters": {
          "framework": "react",
          "fileName": "./src/documentation/DataVisualization/Charts.stories.mdx",
          "docs": {}
        },
        "decorators": []
      },
      "Components/Chart": {
        "order": 58,
        "parameters": {
          "framework": "react",
          "fileName": "./src/documentation/DataVisualization/MixBarChart.stories.js",
          "componentSubtitle": "Component"
        },
        "decorators": []
      },
      "Documentation/Email template": {
        "order": 59,
        "parameters": {
          "framework": "react",
          "fileName": "./src/documentation/Email/Email.stories.mdx",
          "docs": {}
        },
        "decorators": []
      },
      "Documentation/Favicons": {
        "order": 60,
        "parameters": {
          "framework": "react",
          "fileName": "./src/documentation/Favicons/Favicons.stories.mdx",
          "docs": {}
        },
        "decorators": []
      },
      "Documentation/Intro": {
        "order": 61,
        "parameters": {
          "framework": "react",
          "fileName": "./src/documentation/Intro/Intro.stories.mdx",
          "fullPage": true,
          "docs": {}
        },
        "decorators": []
      },
      "Examples/Login": {
        "order": 62,
        "parameters": {
          "framework": "react",
          "fileName": "./src/documentation/LoginPage/LoginPage.stories.js",
          "componentSubtitle": "Example",
          "status": "legacy",
          "introText": "Login page for legacy applications not using WFPs single sign-on"
        },
        "decorators": []
      },
      "Documentation/Logo": {
        "order": 63,
        "parameters": {
          "framework": "react",
          "fileName": "./src/documentation/Logos/Logos.stories.mdx",
          "docs": {}
        },
        "decorators": []
      },
      "Documentation/Naming convention": {
        "order": 64,
        "parameters": {
          "framework": "react",
          "fileName": "./src/documentation/Naming/Naming.stories.mdx",
          "docs": {}
        },
        "decorators": []
      },
      "Documentation/Page Speed": {
        "order": 65,
        "parameters": {
          "framework": "react",
          "fileName": "./src/documentation/PageSpeed.stories.mdx",
          "componentSubtitle": "Component",
          "docs": {}
        },
        "decorators": []
      },
      "Getting started/Getting started/Designers": {
        "order": 66,
        "parameters": {
          "framework": "react",
          "fileName": "./src/documentation/Usage/ResourcesDesigners.stories.mdx",
          "docs": {}
        },
        "decorators": []
      },
      "Getting started/Getting started/Recommended tools": {
        "order": 67,
        "parameters": {
          "framework": "react",
          "fileName": "./src/documentation/Usage/ToolRecommendations.stories.mdx",
          "docs": {}
        },
        "decorators": []
      },
      "Getting started/Getting started/Usage for Developers": {
        "order": 68,
        "parameters": {
          "framework": "react",
          "fileName": "./src/documentation/Usage/UsageDevelopers.stories.mdx",
          "docs": {}
        },
        "decorators": []
      }
    },
    "_stories": {
      "components-bannernavigation--regular-navigation": {
        "id": "components-bannernavigation--regular-navigation",
        "kind": "Components/BannerNavigation",
        "name": "Regular Navigation",
        "story": "Regular Navigation",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": {
            "source": "(args) => (\n  <BannerNavigationWithContent {...args} />\n)"
          },
          "__id": "components-bannernavigation--regular-navigation",
          "args": {},
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": true, "name": "other", "value": "node" },
              "required": true,
              "description": "The content usually consisting out of `BannerNavigationItem`",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The CSS class name to be placed on the wrapping element.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "pageWidth": {
              "control": {
                "type": "radio",
                "options": ["xs", "sm", "md", "lg", "full"]
              },
              "name": "pageWidth",
              "type": {
                "required": false,
                "name": "enum",
                "value": ["xs", "sm", "md", "lg", "full"]
              },
              "required": false,
              "description": "The width of the `Wrapper` component",
              "defaultValue": "md",
              "sbType": {
                "name": "enum",
                "value": ["xs", "sm", "md", "lg", "full"]
              },
              "table": {
                "type": { "summary": "'xs' | 'sm' | 'md' | 'lg' | 'full'" },
                "defaultValue": { "summary": "'md'" }
              }
            }
          },
          "__isArgsStory": true
        },
        "args": { "pageWidth": "md" },
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": true, "name": "other", "value": "node" },
            "required": true,
            "description": "The content usually consisting out of `BannerNavigationItem`",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The CSS class name to be placed on the wrapping element.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "pageWidth": {
            "control": {
              "type": "radio",
              "options": ["xs", "sm", "md", "lg", "full"]
            },
            "name": "pageWidth",
            "type": {
              "required": false,
              "name": "enum",
              "value": ["xs", "sm", "md", "lg", "full"]
            },
            "required": false,
            "description": "The width of the `Wrapper` component",
            "defaultValue": "md",
            "sbType": {
              "name": "enum",
              "value": ["xs", "sm", "md", "lg", "full"]
            },
            "table": {
              "type": { "summary": "'xs' | 'sm' | 'md' | 'lg' | 'full'" },
              "defaultValue": { "summary": "'md'" }
            }
          }
        },
        "initialArgs": { "pageWidth": "md" }
      },
      "components-bannernavigation--custom-content": {
        "id": "components-bannernavigation--custom-content",
        "kind": "Components/BannerNavigation",
        "name": "Custom Content",
        "story": "Custom Content",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\nYou can customize the content by using `BannerNavigation`.\n"
          },
          "storySource": {
            "source": "(args) => (\n  <BannerNavigation {...args}>\n    <BannerNavigationItem>\n      <Link href=\"#\" target=\"_blank\">\n        Link 1\n      </Link>\n    </BannerNavigationItem>\n    <BannerNavigationItem>\n      <Link href=\"#\" target=\"_blank\">\n        Link 2\n      </Link>\n    </BannerNavigationItem>\n    <BannerNavigationItem>\n      <Link href=\"#\" target=\"_blank\">\n        Link 3\n      </Link>\n    </BannerNavigationItem>\n    <BannerNavigationItem>\n      <Link href=\"#\" target=\"_blank\">\n        Link 4\n      </Link>\n    </BannerNavigationItem>\n    <BannerNavigationItem>\n      <Search\n        id=\"search-2\"\n        labelText=\"Search\"\n        kind=\"banner\"\n        placeHolderText=\"Search\"\n        onChange={action('onChange')}\n      />\n    </BannerNavigationItem>\n  </BannerNavigation>\n)"
          },
          "__id": "components-bannernavigation--custom-content",
          "args": {},
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": true, "name": "other", "value": "node" },
              "required": true,
              "description": "The content usually consisting out of `BannerNavigationItem`",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The CSS class name to be placed on the wrapping element.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "pageWidth": {
              "control": {
                "type": "radio",
                "options": ["xs", "sm", "md", "lg", "full"]
              },
              "name": "pageWidth",
              "type": {
                "required": false,
                "name": "enum",
                "value": ["xs", "sm", "md", "lg", "full"]
              },
              "required": false,
              "description": "The width of the `Wrapper` component",
              "defaultValue": "md",
              "sbType": {
                "name": "enum",
                "value": ["xs", "sm", "md", "lg", "full"]
              },
              "table": {
                "type": { "summary": "'xs' | 'sm' | 'md' | 'lg' | 'full'" },
                "defaultValue": { "summary": "'md'" }
              }
            }
          },
          "__isArgsStory": true
        },
        "args": { "pageWidth": "md" },
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": true, "name": "other", "value": "node" },
            "required": true,
            "description": "The content usually consisting out of `BannerNavigationItem`",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The CSS class name to be placed on the wrapping element.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "pageWidth": {
            "control": {
              "type": "radio",
              "options": ["xs", "sm", "md", "lg", "full"]
            },
            "name": "pageWidth",
            "type": {
              "required": false,
              "name": "enum",
              "value": ["xs", "sm", "md", "lg", "full"]
            },
            "required": false,
            "description": "The width of the `Wrapper` component",
            "defaultValue": "md",
            "sbType": {
              "name": "enum",
              "value": ["xs", "sm", "md", "lg", "full"]
            },
            "table": {
              "type": { "summary": "'xs' | 'sm' | 'md' | 'lg' | 'full'" },
              "defaultValue": { "summary": "'md'" }
            }
          }
        },
        "initialArgs": { "pageWidth": "md" }
      },
      "components-blockquote--default": {
        "id": "components-blockquote--default",
        "kind": "Components/Blockquote",
        "name": "Default",
        "story": "Default",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": { "source": "(args) => <Blockquote {...args} />" },
          "__id": "components-blockquote--default",
          "args": {
            "children": "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy\n  eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam\n  voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet\n  clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit\n  amet."
          },
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "children",
              "required": false,
              "description": "Specify a className of the inner Blockquote content",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify a className of your `Blockquote`",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "code": {
              "control": { "type": "boolean" },
              "name": "code",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Show content formated as code",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "light": {
              "control": { "type": "boolean" },
              "name": "light",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Display light version of Blockquote",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "toggleable": {
              "control": { "type": "boolean" },
              "name": "toggleable",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Show options to show and hide the Blockquote when title is clicked",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "title": {
              "control": { "type": "object" },
              "name": "title",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Show title for Blockquote",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "kind": {
              "control": {
                "type": "select",
                "options": ["info", "warning", "error", "success"]
              },
              "name": "kind",
              "type": {
                "required": false,
                "raw": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]",
                "name": "other",
                "value": "custom"
              },
              "required": false,
              "description": "Specify the type of your Blockquote Options are `light` `code` `error` `warning` `info`",
              "defaultValue": null,
              "sbType": {
                "raw": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]",
                "name": "other",
                "value": "custom"
              },
              "table": {
                "type": {
                  "summary": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]"
                },
                "defaultValue": null
              }
            },
            "withIcon": {
              "control": { "type": "boolean" },
              "name": "withIcon",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify if an Icon should be displayed",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "icon": {
              "control": { "type": "object" },
              "name": "icon",
              "type": {
                "required": false,
                "name": "union",
                "value": [
                  { "name": "other", "value": "node" },
                  { "name": "object" }
                ]
              },
              "required": false,
              "description": "Specify a custom icon. Can be either a `Icon` object or React component",
              "defaultValue": null,
              "sbType": {
                "name": "union",
                "value": [
                  { "name": "other", "value": "node" },
                  { "name": "object" }
                ]
              },
              "table": {
                "type": { "summary": "node | object" },
                "defaultValue": null
              }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "children": "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy\n  eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam\n  voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet\n  clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit\n  amet."
        },
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "children",
            "required": false,
            "description": "Specify a className of the inner Blockquote content",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify a className of your `Blockquote`",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "code": {
            "control": { "type": "boolean" },
            "name": "code",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Show content formated as code",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "light": {
            "control": { "type": "boolean" },
            "name": "light",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Display light version of Blockquote",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "toggleable": {
            "control": { "type": "boolean" },
            "name": "toggleable",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Show options to show and hide the Blockquote when title is clicked",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "title": {
            "control": { "type": "object" },
            "name": "title",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Show title for Blockquote",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "kind": {
            "control": {
              "type": "select",
              "options": ["info", "warning", "error", "success"]
            },
            "name": "kind",
            "type": {
              "required": false,
              "raw": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]",
              "name": "other",
              "value": "custom"
            },
            "required": false,
            "description": "Specify the type of your Blockquote Options are `light` `code` `error` `warning` `info`",
            "defaultValue": null,
            "sbType": {
              "raw": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]",
              "name": "other",
              "value": "custom"
            },
            "table": {
              "type": {
                "summary": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]"
              },
              "defaultValue": null
            }
          },
          "withIcon": {
            "control": { "type": "boolean" },
            "name": "withIcon",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify if an Icon should be displayed",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "icon": {
            "control": { "type": "object" },
            "name": "icon",
            "type": {
              "required": false,
              "name": "union",
              "value": [
                { "name": "other", "value": "node" },
                { "name": "object" }
              ]
            },
            "required": false,
            "description": "Specify a custom icon. Can be either a `Icon` object or React component",
            "defaultValue": null,
            "sbType": {
              "name": "union",
              "value": [
                { "name": "other", "value": "node" },
                { "name": "object" }
              ]
            },
            "table": {
              "type": { "summary": "node | object" },
              "defaultValue": null
            }
          }
        },
        "initialArgs": {
          "children": "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy\n  eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam\n  voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet\n  clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit\n  amet."
        }
      },
      "components-blockquote--light": {
        "id": "components-blockquote--light",
        "kind": "Components/Blockquote",
        "name": "Light",
        "story": "Light",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "Use `light` property to display light version of blockquote"
          },
          "storySource": { "source": "(args) => <Blockquote {...args} />" },
          "__id": "components-blockquote--light",
          "args": {
            "children": "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy\n  eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam\n  voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet\n  clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit\n  amet.",
            "light": true,
            "title": "Title"
          },
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "children",
              "required": false,
              "description": "Specify a className of the inner Blockquote content",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "light": {
              "control": { "type": "boolean" },
              "type": { "name": "boolean", "required": false },
              "name": "light",
              "required": false,
              "description": "Display light version of Blockquote",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "title": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "title",
              "required": false,
              "description": "Show title for Blockquote",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify a className of your `Blockquote`",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "code": {
              "control": { "type": "boolean" },
              "name": "code",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Show content formated as code",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "toggleable": {
              "control": { "type": "boolean" },
              "name": "toggleable",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Show options to show and hide the Blockquote when title is clicked",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "kind": {
              "control": { "type": "object" },
              "name": "kind",
              "type": {
                "required": false,
                "raw": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]",
                "name": "other",
                "value": "custom"
              },
              "required": false,
              "description": "Specify the type of your Blockquote Options are `light` `code` `error` `warning` `info`",
              "defaultValue": null,
              "sbType": {
                "raw": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]",
                "name": "other",
                "value": "custom"
              },
              "table": {
                "type": {
                  "summary": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]"
                },
                "defaultValue": null
              }
            },
            "withIcon": {
              "control": { "type": "boolean" },
              "name": "withIcon",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify if an Icon should be displayed",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "icon": {
              "control": { "type": "object" },
              "name": "icon",
              "type": {
                "required": false,
                "name": "union",
                "value": [
                  { "name": "other", "value": "node" },
                  { "name": "object" }
                ]
              },
              "required": false,
              "description": "Specify a custom icon. Can be either a `Icon` object or React component",
              "defaultValue": null,
              "sbType": {
                "name": "union",
                "value": [
                  { "name": "other", "value": "node" },
                  { "name": "object" }
                ]
              },
              "table": {
                "type": { "summary": "node | object" },
                "defaultValue": null
              }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "children": "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy\n  eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam\n  voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet\n  clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit\n  amet.",
          "light": true,
          "title": "Title"
        },
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "children",
            "required": false,
            "description": "Specify a className of the inner Blockquote content",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "light": {
            "control": { "type": "boolean" },
            "type": { "name": "boolean", "required": false },
            "name": "light",
            "required": false,
            "description": "Display light version of Blockquote",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "title": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "title",
            "required": false,
            "description": "Show title for Blockquote",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify a className of your `Blockquote`",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "code": {
            "control": { "type": "boolean" },
            "name": "code",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Show content formated as code",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "toggleable": {
            "control": { "type": "boolean" },
            "name": "toggleable",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Show options to show and hide the Blockquote when title is clicked",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "kind": {
            "control": { "type": "object" },
            "name": "kind",
            "type": {
              "required": false,
              "raw": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]",
              "name": "other",
              "value": "custom"
            },
            "required": false,
            "description": "Specify the type of your Blockquote Options are `light` `code` `error` `warning` `info`",
            "defaultValue": null,
            "sbType": {
              "raw": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]",
              "name": "other",
              "value": "custom"
            },
            "table": {
              "type": {
                "summary": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]"
              },
              "defaultValue": null
            }
          },
          "withIcon": {
            "control": { "type": "boolean" },
            "name": "withIcon",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify if an Icon should be displayed",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "icon": {
            "control": { "type": "object" },
            "name": "icon",
            "type": {
              "required": false,
              "name": "union",
              "value": [
                { "name": "other", "value": "node" },
                { "name": "object" }
              ]
            },
            "required": false,
            "description": "Specify a custom icon. Can be either a `Icon` object or React component",
            "defaultValue": null,
            "sbType": {
              "name": "union",
              "value": [
                { "name": "other", "value": "node" },
                { "name": "object" }
              ]
            },
            "table": {
              "type": { "summary": "node | object" },
              "defaultValue": null
            }
          }
        },
        "initialArgs": {
          "children": "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy\n  eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam\n  voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet\n  clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit\n  amet.",
          "light": true,
          "title": "Title"
        }
      },
      "components-blockquote--warning": {
        "id": "components-blockquote--warning",
        "kind": "Components/Blockquote",
        "name": "Warning",
        "story": "Warning",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "Use `warning` for showing a warning to draw attention to a non-blocking information"
          },
          "storySource": { "source": "(args) => <Blockquote {...args} />" },
          "__id": "components-blockquote--warning",
          "args": {
            "children": "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy\n  eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam\n  voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet\n  clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit\n  amet.",
            "withIcon": true,
            "kind": "warning"
          },
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "children",
              "required": false,
              "description": "Specify a className of the inner Blockquote content",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "withIcon": {
              "control": { "type": "boolean" },
              "type": { "name": "boolean", "required": false },
              "name": "withIcon",
              "required": false,
              "description": "Specify if an Icon should be displayed",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "kind": {
              "control": { "type": "object" },
              "type": {
                "name": "other",
                "required": false,
                "raw": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]",
                "value": "custom"
              },
              "name": "kind",
              "required": false,
              "description": "Specify the type of your Blockquote Options are `light` `code` `error` `warning` `info`",
              "defaultValue": null,
              "sbType": {
                "raw": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]",
                "name": "other",
                "value": "custom"
              },
              "table": {
                "type": {
                  "summary": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]"
                },
                "defaultValue": null
              }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify a className of your `Blockquote`",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "code": {
              "control": { "type": "boolean" },
              "name": "code",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Show content formated as code",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "light": {
              "control": { "type": "boolean" },
              "name": "light",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Display light version of Blockquote",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "toggleable": {
              "control": { "type": "boolean" },
              "name": "toggleable",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Show options to show and hide the Blockquote when title is clicked",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "title": {
              "control": { "type": "object" },
              "name": "title",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Show title for Blockquote",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "icon": {
              "control": { "type": "object" },
              "name": "icon",
              "type": {
                "required": false,
                "name": "union",
                "value": [
                  { "name": "other", "value": "node" },
                  { "name": "object" }
                ]
              },
              "required": false,
              "description": "Specify a custom icon. Can be either a `Icon` object or React component",
              "defaultValue": null,
              "sbType": {
                "name": "union",
                "value": [
                  { "name": "other", "value": "node" },
                  { "name": "object" }
                ]
              },
              "table": {
                "type": { "summary": "node | object" },
                "defaultValue": null
              }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "children": "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy\n  eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam\n  voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet\n  clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit\n  amet.",
          "withIcon": true,
          "kind": "warning"
        },
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "children",
            "required": false,
            "description": "Specify a className of the inner Blockquote content",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "withIcon": {
            "control": { "type": "boolean" },
            "type": { "name": "boolean", "required": false },
            "name": "withIcon",
            "required": false,
            "description": "Specify if an Icon should be displayed",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "kind": {
            "control": { "type": "object" },
            "type": {
              "name": "other",
              "required": false,
              "raw": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]",
              "value": "custom"
            },
            "name": "kind",
            "required": false,
            "description": "Specify the type of your Blockquote Options are `light` `code` `error` `warning` `info`",
            "defaultValue": null,
            "sbType": {
              "raw": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]",
              "name": "other",
              "value": "custom"
            },
            "table": {
              "type": {
                "summary": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]"
              },
              "defaultValue": null
            }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify a className of your `Blockquote`",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "code": {
            "control": { "type": "boolean" },
            "name": "code",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Show content formated as code",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "light": {
            "control": { "type": "boolean" },
            "name": "light",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Display light version of Blockquote",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "toggleable": {
            "control": { "type": "boolean" },
            "name": "toggleable",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Show options to show and hide the Blockquote when title is clicked",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "title": {
            "control": { "type": "object" },
            "name": "title",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Show title for Blockquote",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "icon": {
            "control": { "type": "object" },
            "name": "icon",
            "type": {
              "required": false,
              "name": "union",
              "value": [
                { "name": "other", "value": "node" },
                { "name": "object" }
              ]
            },
            "required": false,
            "description": "Specify a custom icon. Can be either a `Icon` object or React component",
            "defaultValue": null,
            "sbType": {
              "name": "union",
              "value": [
                { "name": "other", "value": "node" },
                { "name": "object" }
              ]
            },
            "table": {
              "type": { "summary": "node | object" },
              "defaultValue": null
            }
          }
        },
        "initialArgs": {
          "children": "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy\n  eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam\n  voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet\n  clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit\n  amet.",
          "withIcon": true,
          "kind": "warning"
        }
      },
      "components-blockquote--error": {
        "id": "components-blockquote--error",
        "kind": "Components/Blockquote",
        "name": "Error",
        "story": "Error",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "Use `error` for showing a error message usually if a form fails to submit"
          },
          "storySource": { "source": "(args) => <Blockquote {...args} />" },
          "__id": "components-blockquote--error",
          "args": {
            "children": "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy\n  eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam\n  voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet\n  clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit\n  amet.",
            "withIcon": true,
            "kind": "error"
          },
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "children",
              "required": false,
              "description": "Specify a className of the inner Blockquote content",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "withIcon": {
              "control": { "type": "boolean" },
              "type": { "name": "boolean", "required": false },
              "name": "withIcon",
              "required": false,
              "description": "Specify if an Icon should be displayed",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "kind": {
              "control": { "type": "object" },
              "type": {
                "name": "other",
                "required": false,
                "raw": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]",
                "value": "custom"
              },
              "name": "kind",
              "required": false,
              "description": "Specify the type of your Blockquote Options are `light` `code` `error` `warning` `info`",
              "defaultValue": null,
              "sbType": {
                "raw": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]",
                "name": "other",
                "value": "custom"
              },
              "table": {
                "type": {
                  "summary": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]"
                },
                "defaultValue": null
              }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify a className of your `Blockquote`",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "code": {
              "control": { "type": "boolean" },
              "name": "code",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Show content formated as code",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "light": {
              "control": { "type": "boolean" },
              "name": "light",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Display light version of Blockquote",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "toggleable": {
              "control": { "type": "boolean" },
              "name": "toggleable",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Show options to show and hide the Blockquote when title is clicked",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "title": {
              "control": { "type": "object" },
              "name": "title",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Show title for Blockquote",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "icon": {
              "control": { "type": "object" },
              "name": "icon",
              "type": {
                "required": false,
                "name": "union",
                "value": [
                  { "name": "other", "value": "node" },
                  { "name": "object" }
                ]
              },
              "required": false,
              "description": "Specify a custom icon. Can be either a `Icon` object or React component",
              "defaultValue": null,
              "sbType": {
                "name": "union",
                "value": [
                  { "name": "other", "value": "node" },
                  { "name": "object" }
                ]
              },
              "table": {
                "type": { "summary": "node | object" },
                "defaultValue": null
              }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "children": "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy\n  eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam\n  voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet\n  clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit\n  amet.",
          "withIcon": true,
          "kind": "error"
        },
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "children",
            "required": false,
            "description": "Specify a className of the inner Blockquote content",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "withIcon": {
            "control": { "type": "boolean" },
            "type": { "name": "boolean", "required": false },
            "name": "withIcon",
            "required": false,
            "description": "Specify if an Icon should be displayed",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "kind": {
            "control": { "type": "object" },
            "type": {
              "name": "other",
              "required": false,
              "raw": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]",
              "value": "custom"
            },
            "name": "kind",
            "required": false,
            "description": "Specify the type of your Blockquote Options are `light` `code` `error` `warning` `info`",
            "defaultValue": null,
            "sbType": {
              "raw": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]",
              "name": "other",
              "value": "custom"
            },
            "table": {
              "type": {
                "summary": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]"
              },
              "defaultValue": null
            }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify a className of your `Blockquote`",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "code": {
            "control": { "type": "boolean" },
            "name": "code",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Show content formated as code",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "light": {
            "control": { "type": "boolean" },
            "name": "light",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Display light version of Blockquote",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "toggleable": {
            "control": { "type": "boolean" },
            "name": "toggleable",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Show options to show and hide the Blockquote when title is clicked",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "title": {
            "control": { "type": "object" },
            "name": "title",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Show title for Blockquote",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "icon": {
            "control": { "type": "object" },
            "name": "icon",
            "type": {
              "required": false,
              "name": "union",
              "value": [
                { "name": "other", "value": "node" },
                { "name": "object" }
              ]
            },
            "required": false,
            "description": "Specify a custom icon. Can be either a `Icon` object or React component",
            "defaultValue": null,
            "sbType": {
              "name": "union",
              "value": [
                { "name": "other", "value": "node" },
                { "name": "object" }
              ]
            },
            "table": {
              "type": { "summary": "node | object" },
              "defaultValue": null
            }
          }
        },
        "initialArgs": {
          "children": "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy\n  eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam\n  voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet\n  clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit\n  amet.",
          "withIcon": true,
          "kind": "error"
        }
      },
      "components-blockquote--success": {
        "id": "components-blockquote--success",
        "kind": "Components/Blockquote",
        "name": "Success",
        "story": "Success",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "Use `success` for showing a successful message like after submitting a form"
          },
          "storySource": { "source": "(args) => <Blockquote {...args} />" },
          "__id": "components-blockquote--success",
          "args": {
            "children": "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy\n  eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam\n  voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet\n  clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit\n  amet.",
            "withIcon": true,
            "kind": "success"
          },
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "children",
              "required": false,
              "description": "Specify a className of the inner Blockquote content",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "withIcon": {
              "control": { "type": "boolean" },
              "type": { "name": "boolean", "required": false },
              "name": "withIcon",
              "required": false,
              "description": "Specify if an Icon should be displayed",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "kind": {
              "control": { "type": "object" },
              "type": {
                "name": "other",
                "required": false,
                "raw": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]",
                "value": "custom"
              },
              "name": "kind",
              "required": false,
              "description": "Specify the type of your Blockquote Options are `light` `code` `error` `warning` `info`",
              "defaultValue": null,
              "sbType": {
                "raw": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]",
                "name": "other",
                "value": "custom"
              },
              "table": {
                "type": {
                  "summary": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]"
                },
                "defaultValue": null
              }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify a className of your `Blockquote`",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "code": {
              "control": { "type": "boolean" },
              "name": "code",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Show content formated as code",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "light": {
              "control": { "type": "boolean" },
              "name": "light",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Display light version of Blockquote",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "toggleable": {
              "control": { "type": "boolean" },
              "name": "toggleable",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Show options to show and hide the Blockquote when title is clicked",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "title": {
              "control": { "type": "object" },
              "name": "title",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Show title for Blockquote",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "icon": {
              "control": { "type": "object" },
              "name": "icon",
              "type": {
                "required": false,
                "name": "union",
                "value": [
                  { "name": "other", "value": "node" },
                  { "name": "object" }
                ]
              },
              "required": false,
              "description": "Specify a custom icon. Can be either a `Icon` object or React component",
              "defaultValue": null,
              "sbType": {
                "name": "union",
                "value": [
                  { "name": "other", "value": "node" },
                  { "name": "object" }
                ]
              },
              "table": {
                "type": { "summary": "node | object" },
                "defaultValue": null
              }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "children": "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy\n  eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam\n  voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet\n  clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit\n  amet.",
          "withIcon": true,
          "kind": "success"
        },
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "children",
            "required": false,
            "description": "Specify a className of the inner Blockquote content",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "withIcon": {
            "control": { "type": "boolean" },
            "type": { "name": "boolean", "required": false },
            "name": "withIcon",
            "required": false,
            "description": "Specify if an Icon should be displayed",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "kind": {
            "control": { "type": "object" },
            "type": {
              "name": "other",
              "required": false,
              "raw": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]",
              "value": "custom"
            },
            "name": "kind",
            "required": false,
            "description": "Specify the type of your Blockquote Options are `light` `code` `error` `warning` `info`",
            "defaultValue": null,
            "sbType": {
              "raw": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]",
              "name": "other",
              "value": "custom"
            },
            "table": {
              "type": {
                "summary": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]"
              },
              "defaultValue": null
            }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify a className of your `Blockquote`",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "code": {
            "control": { "type": "boolean" },
            "name": "code",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Show content formated as code",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "light": {
            "control": { "type": "boolean" },
            "name": "light",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Display light version of Blockquote",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "toggleable": {
            "control": { "type": "boolean" },
            "name": "toggleable",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Show options to show and hide the Blockquote when title is clicked",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "title": {
            "control": { "type": "object" },
            "name": "title",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Show title for Blockquote",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "icon": {
            "control": { "type": "object" },
            "name": "icon",
            "type": {
              "required": false,
              "name": "union",
              "value": [
                { "name": "other", "value": "node" },
                { "name": "object" }
              ]
            },
            "required": false,
            "description": "Specify a custom icon. Can be either a `Icon` object or React component",
            "defaultValue": null,
            "sbType": {
              "name": "union",
              "value": [
                { "name": "other", "value": "node" },
                { "name": "object" }
              ]
            },
            "table": {
              "type": { "summary": "node | object" },
              "defaultValue": null
            }
          }
        },
        "initialArgs": {
          "children": "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy\n  eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam\n  voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet\n  clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit\n  amet.",
          "withIcon": true,
          "kind": "success"
        }
      },
      "components-blockquote--custom-icon": {
        "id": "components-blockquote--custom-icon",
        "kind": "Components/Blockquote",
        "name": "Custom Icon",
        "story": "Custom Icon",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "Use `icon` to add custom icon to message"
          },
          "storySource": { "source": "(args) => <Blockquote {...args} />" },
          "__id": "components-blockquote--custom-icon",
          "args": {
            "children": "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy\n  eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam\n  voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet\n  clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit\n  amet.",
            "icon": {
              "key": null,
              "ref": null,
              "props": {
                "icon": {
                  "id": "icon--add--outline",
                  "name": "icon--add--outline",
                  "tags": "icon--add--outline",
                  "styles": "",
                  "viewBox": "0 0 16 16",
                  "width": "16",
                  "height": "16",
                  "svgData": {
                    "circles": "",
                    "ellipses": "",
                    "paths": [
                      {
                        "d": "M8 14.5c3.6 0 6.5-2.9 6.5-6.5S11.6 1.5 8 1.5 1.5 4.4 1.5 8s2.9 6.5 6.5 6.5zM8 16c-4.4 0-8-3.6-8-8s3.6-8 8-8 8 3.6 8 8-3.6 8-8 8z"
                      },
                      { "d": "M7 7V4h2v3h3v2H9v3H7V9H4V7h3z" }
                    ],
                    "polygons": "",
                    "polylines": "",
                    "rects": ""
                  }
                },
                "height": 50,
                "width": 50,
                "fillRule": "evenodd",
                "role": "img",
                "description": "Provide a description that will be used as the title"
              },
              "_owner": null,
              "_store": {}
            }
          },
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "children",
              "required": false,
              "description": "Specify a className of the inner Blockquote content",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "icon": {
              "control": { "type": "object" },
              "type": {
                "name": "union",
                "value": [
                  { "name": "other", "value": "node" },
                  { "name": "object" }
                ],
                "required": false
              },
              "name": "icon",
              "required": false,
              "description": "Specify a custom icon. Can be either a `Icon` object or React component",
              "defaultValue": null,
              "sbType": {
                "name": "union",
                "value": [
                  { "name": "other", "value": "node" },
                  { "name": "object" }
                ]
              },
              "table": {
                "type": { "summary": "node | object" },
                "defaultValue": null
              }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify a className of your `Blockquote`",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "code": {
              "control": { "type": "boolean" },
              "name": "code",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Show content formated as code",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "light": {
              "control": { "type": "boolean" },
              "name": "light",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Display light version of Blockquote",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "toggleable": {
              "control": { "type": "boolean" },
              "name": "toggleable",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Show options to show and hide the Blockquote when title is clicked",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "title": {
              "control": { "type": "object" },
              "name": "title",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Show title for Blockquote",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "kind": {
              "control": { "type": "object" },
              "name": "kind",
              "type": {
                "required": false,
                "raw": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]",
                "name": "other",
                "value": "custom"
              },
              "required": false,
              "description": "Specify the type of your Blockquote Options are `light` `code` `error` `warning` `info`",
              "defaultValue": null,
              "sbType": {
                "raw": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]",
                "name": "other",
                "value": "custom"
              },
              "table": {
                "type": {
                  "summary": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]"
                },
                "defaultValue": null
              }
            },
            "withIcon": {
              "control": { "type": "boolean" },
              "name": "withIcon",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify if an Icon should be displayed",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "children": "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy\n  eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam\n  voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet\n  clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit\n  amet.",
          "icon": {
            "key": null,
            "ref": null,
            "props": {
              "icon": {
                "id": "icon--add--outline",
                "name": "icon--add--outline",
                "tags": "icon--add--outline",
                "styles": "",
                "viewBox": "0 0 16 16",
                "width": "16",
                "height": "16",
                "svgData": {
                  "circles": "",
                  "ellipses": "",
                  "paths": [
                    {
                      "d": "M8 14.5c3.6 0 6.5-2.9 6.5-6.5S11.6 1.5 8 1.5 1.5 4.4 1.5 8s2.9 6.5 6.5 6.5zM8 16c-4.4 0-8-3.6-8-8s3.6-8 8-8 8 3.6 8 8-3.6 8-8 8z"
                    },
                    { "d": "M7 7V4h2v3h3v2H9v3H7V9H4V7h3z" }
                  ],
                  "polygons": "",
                  "polylines": "",
                  "rects": ""
                }
              },
              "height": 50,
              "width": 50,
              "fillRule": "evenodd",
              "role": "img",
              "description": "Provide a description that will be used as the title"
            },
            "_owner": null,
            "_store": {}
          }
        },
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "children",
            "required": false,
            "description": "Specify a className of the inner Blockquote content",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "icon": {
            "control": { "type": "object" },
            "type": {
              "name": "union",
              "value": [
                { "name": "other", "value": "node" },
                { "name": "object" }
              ],
              "required": false
            },
            "name": "icon",
            "required": false,
            "description": "Specify a custom icon. Can be either a `Icon` object or React component",
            "defaultValue": null,
            "sbType": {
              "name": "union",
              "value": [
                { "name": "other", "value": "node" },
                { "name": "object" }
              ]
            },
            "table": {
              "type": { "summary": "node | object" },
              "defaultValue": null
            }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify a className of your `Blockquote`",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "code": {
            "control": { "type": "boolean" },
            "name": "code",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Show content formated as code",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "light": {
            "control": { "type": "boolean" },
            "name": "light",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Display light version of Blockquote",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "toggleable": {
            "control": { "type": "boolean" },
            "name": "toggleable",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Show options to show and hide the Blockquote when title is clicked",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "title": {
            "control": { "type": "object" },
            "name": "title",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Show title for Blockquote",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "kind": {
            "control": { "type": "object" },
            "name": "kind",
            "type": {
              "required": false,
              "raw": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]",
              "name": "other",
              "value": "custom"
            },
            "required": false,
            "description": "Specify the type of your Blockquote Options are `light` `code` `error` `warning` `info`",
            "defaultValue": null,
            "sbType": {
              "raw": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]",
              "name": "other",
              "value": "custom"
            },
            "table": {
              "type": {
                "summary": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]"
              },
              "defaultValue": null
            }
          },
          "withIcon": {
            "control": { "type": "boolean" },
            "name": "withIcon",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify if an Icon should be displayed",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          }
        },
        "initialArgs": {
          "children": "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy\n  eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam\n  voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet\n  clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit\n  amet.",
          "icon": {
            "key": null,
            "ref": null,
            "props": {
              "icon": {
                "id": "icon--add--outline",
                "name": "icon--add--outline",
                "tags": "icon--add--outline",
                "styles": "",
                "viewBox": "0 0 16 16",
                "width": "16",
                "height": "16",
                "svgData": {
                  "circles": "",
                  "ellipses": "",
                  "paths": [
                    {
                      "d": "M8 14.5c3.6 0 6.5-2.9 6.5-6.5S11.6 1.5 8 1.5 1.5 4.4 1.5 8s2.9 6.5 6.5 6.5zM8 16c-4.4 0-8-3.6-8-8s3.6-8 8-8 8 3.6 8 8-3.6 8-8 8z"
                    },
                    { "d": "M7 7V4h2v3h3v2H9v3H7V9H4V7h3z" }
                  ],
                  "polygons": "",
                  "polylines": "",
                  "rects": ""
                }
              },
              "height": 50,
              "width": 50,
              "fillRule": "evenodd",
              "role": "img",
              "description": "Provide a description that will be used as the title"
            },
            "_owner": null,
            "_store": {}
          }
        }
      },
      "components-blockquote--togglable": {
        "id": "components-blockquote--togglable",
        "kind": "Components/Blockquote",
        "name": "Togglable",
        "story": "Togglable",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "Use `toogleable` property to show and hide blockquote when title is clicked"
          },
          "storySource": { "source": "(args) => <Blockquote {...args} />" },
          "__id": "components-blockquote--togglable",
          "args": {
            "children": "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy\n  eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam\n  voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet\n  clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit\n  amet.",
            "title": "Togglable title",
            "toggleable": true
          },
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "children",
              "required": false,
              "description": "Specify a className of the inner Blockquote content",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "title": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "title",
              "required": false,
              "description": "Show title for Blockquote",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "toggleable": {
              "control": { "type": "boolean" },
              "type": { "name": "boolean", "required": false },
              "name": "toggleable",
              "required": false,
              "description": "Show options to show and hide the Blockquote when title is clicked",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify a className of your `Blockquote`",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "code": {
              "control": { "type": "boolean" },
              "name": "code",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Show content formated as code",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "light": {
              "control": { "type": "boolean" },
              "name": "light",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Display light version of Blockquote",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "kind": {
              "control": { "type": "object" },
              "name": "kind",
              "type": {
                "required": false,
                "raw": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]",
                "name": "other",
                "value": "custom"
              },
              "required": false,
              "description": "Specify the type of your Blockquote Options are `light` `code` `error` `warning` `info`",
              "defaultValue": null,
              "sbType": {
                "raw": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]",
                "name": "other",
                "value": "custom"
              },
              "table": {
                "type": {
                  "summary": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]"
                },
                "defaultValue": null
              }
            },
            "withIcon": {
              "control": { "type": "boolean" },
              "name": "withIcon",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify if an Icon should be displayed",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "icon": {
              "control": { "type": "object" },
              "name": "icon",
              "type": {
                "required": false,
                "name": "union",
                "value": [
                  { "name": "other", "value": "node" },
                  { "name": "object" }
                ]
              },
              "required": false,
              "description": "Specify a custom icon. Can be either a `Icon` object or React component",
              "defaultValue": null,
              "sbType": {
                "name": "union",
                "value": [
                  { "name": "other", "value": "node" },
                  { "name": "object" }
                ]
              },
              "table": {
                "type": { "summary": "node | object" },
                "defaultValue": null
              }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "children": "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy\n  eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam\n  voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet\n  clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit\n  amet.",
          "title": "Togglable title",
          "toggleable": true
        },
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "children",
            "required": false,
            "description": "Specify a className of the inner Blockquote content",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "title": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "title",
            "required": false,
            "description": "Show title for Blockquote",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "toggleable": {
            "control": { "type": "boolean" },
            "type": { "name": "boolean", "required": false },
            "name": "toggleable",
            "required": false,
            "description": "Show options to show and hide the Blockquote when title is clicked",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify a className of your `Blockquote`",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "code": {
            "control": { "type": "boolean" },
            "name": "code",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Show content formated as code",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "light": {
            "control": { "type": "boolean" },
            "name": "light",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Display light version of Blockquote",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "kind": {
            "control": { "type": "object" },
            "name": "kind",
            "type": {
              "required": false,
              "raw": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]",
              "name": "other",
              "value": "custom"
            },
            "required": false,
            "description": "Specify the type of your Blockquote Options are `light` `code` `error` `warning` `info`",
            "defaultValue": null,
            "sbType": {
              "raw": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]",
              "name": "other",
              "value": "custom"
            },
            "table": {
              "type": {
                "summary": "PropTypes.oneOf[('info', 'warning', 'error', 'success')]"
              },
              "defaultValue": null
            }
          },
          "withIcon": {
            "control": { "type": "boolean" },
            "name": "withIcon",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify if an Icon should be displayed",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "icon": {
            "control": { "type": "object" },
            "name": "icon",
            "type": {
              "required": false,
              "name": "union",
              "value": [
                { "name": "other", "value": "node" },
                { "name": "object" }
              ]
            },
            "required": false,
            "description": "Specify a custom icon. Can be either a `Icon` object or React component",
            "defaultValue": null,
            "sbType": {
              "name": "union",
              "value": [
                { "name": "other", "value": "node" },
                { "name": "object" }
              ]
            },
            "table": {
              "type": { "summary": "node | object" },
              "defaultValue": null
            }
          }
        },
        "initialArgs": {
          "children": "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy\n  eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam\n  voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet\n  clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit\n  amet.",
          "title": "Togglable title",
          "toggleable": true
        }
      },
      "components-breadcrumb--breadcrumb-regular": {
        "id": "components-breadcrumb--breadcrumb-regular",
        "kind": "Components/Breadcrumb",
        "name": "Breadcrumb Regular",
        "story": "Breadcrumb Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": {
            "source": "(args) => (\n  <Breadcrumb {...args}>\n    <BreadcrumbItem>\n      <a href=\"/#\">\n        <BreadcrumbHome />\n      </a>\n    </BreadcrumbItem>\n    <BreadcrumbItem href=\"#\">Breadcrumb 2</BreadcrumbItem>\n    <BreadcrumbItem disableLink>Breadcrumb 3</BreadcrumbItem>\n  </Breadcrumb>\n)"
          },
          "__id": "components-breadcrumb--breadcrumb-regular",
          "args": {},
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Pass in the BreadcrumbItem's for your Breadcrumb",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify an optional className to be applied to the container node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {},
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Pass in the BreadcrumbItem's for your Breadcrumb",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify an optional className to be applied to the container node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          }
        },
        "initialArgs": {}
      },
      "components-button--button-regular": {
        "id": "components-button--button-regular",
        "kind": "Components/Button",
        "name": "Button Regular",
        "story": "Button Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": { "source": "(args) => <Button {...args} />" },
          "__id": "components-button--button-regular",
          "args": { "children": "Button", "href": "#" },
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "children",
              "required": false,
              "description": "Specify the content of your Button",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "href": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": false },
              "name": "href",
              "required": false,
              "description": "Optionally specify an href for your Button to become an <a> element",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify an optional className to be added to your Button",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "disabled": {
              "control": { "type": "boolean" },
              "name": "disabled",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the Button should be disabled, or not",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "small": {
              "control": { "type": "boolean" },
              "name": "small",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the Button should be a small variant",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "kind": {
              "control": {
                "type": "select",
                "options": [
                  "primary",
                  "secondary",
                  "accent",
                  "danger",
                  "ghost",
                  "inverse--primary",
                  "inverse",
                  "danger--primary",
                  "tertiary",
                  "navigation"
                ]
              },
              "name": "kind",
              "type": {
                "required": false,
                "name": "enum",
                "value": [
                  "primary",
                  "secondary",
                  "accent",
                  "danger",
                  "ghost",
                  "inverse--primary",
                  "inverse",
                  "danger--primary",
                  "tertiary",
                  "navigation"
                ]
              },
              "required": false,
              "description": "Specify the kind of Button you want to create",
              "defaultValue": "primary",
              "sbType": {
                "name": "enum",
                "value": [
                  "primary",
                  "secondary",
                  "accent",
                  "danger",
                  "ghost",
                  "inverse--primary",
                  "inverse",
                  "danger--primary",
                  "tertiary",
                  "navigation"
                ]
              },
              "table": {
                "type": {
                  "summary": "'primary' | 'secondary' | 'accent' | 'danger' | 'ghost' | 'inverse--primary' | 'inverse' | 'danger--primary' | 'tertiary' | 'navigation'"
                },
                "defaultValue": { "summary": "'primary'" }
              }
            },
            "tabIndex": {
              "control": { "type": "number" },
              "name": "tabIndex",
              "type": { "required": false, "name": "number" },
              "required": false,
              "description": "Optional prop to specify the tabIndex of the Button",
              "defaultValue": 0,
              "sbType": { "name": "number" },
              "table": {
                "type": { "summary": "number" },
                "defaultValue": { "summary": "0" }
              }
            },
            "type": {
              "control": {
                "type": "radio",
                "options": ["button", "reset", "submit"]
              },
              "name": "type",
              "type": {
                "required": false,
                "name": "enum",
                "value": ["button", "reset", "submit"]
              },
              "required": false,
              "description": "Optional prop to specify the type of the Button",
              "defaultValue": "button",
              "sbType": {
                "name": "enum",
                "value": ["button", "reset", "submit"]
              },
              "table": {
                "type": { "summary": "'button' | 'reset' | 'submit'" },
                "defaultValue": { "summary": "'button'" }
              }
            },
            "role": {
              "control": { "type": "text" },
              "name": "role",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Optional prop to specify the role of the Button",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "icon": {
              "control": { "type": "object" },
              "name": "icon",
              "type": {
                "required": false,
                "name": "object",
                "value": {
                  "width": { "name": "string" },
                  "height": { "name": "string" },
                  "viewBox": { "name": "string" },
                  "svgData": { "name": "object" }
                }
              },
              "required": false,
              "description": "Specify an `icon` to include in the Button through an object representing the SVG data of the icon, similar to the `Icon` component",
              "defaultValue": null,
              "sbType": {
                "name": "object",
                "value": {
                  "width": { "name": "string" },
                  "height": { "name": "string" },
                  "viewBox": { "name": "string" },
                  "svgData": { "name": "object" }
                }
              },
              "table": {
                "type": {
                  "summary": "{    width: string,    height: string,    viewBox: string,    svgData: object }"
                },
                "defaultValue": null
              }
            },
            "iconDescription": {
              "control": { "type": "object" },
              "name": "iconDescription",
              "type": {
                "required": false,
                "raw": "(props) => {\n  if (props.icon && !props.iconDescription) {\n    return new Error(\n      'icon property specified without also providing an iconDescription property.'\n    );\n  }\n  return undefined;\n}",
                "name": "other",
                "value": "custom"
              },
              "required": false,
              "description": "If specifying the `icon` prop, provide a description for that icon that can\nbe read by screen readers",
              "defaultValue": "Provide icon description if icon is used",
              "sbType": {
                "raw": "(props) => {\n  if (props.icon && !props.iconDescription) {\n    return new Error(\n      'icon property specified without also providing an iconDescription property.'\n    );\n  }\n  return undefined;\n}",
                "name": "other",
                "value": "custom"
              },
              "table": {
                "type": {
                  "summary": "func",
                  "detail": "(props) => {\n  if (props.icon && !props.iconDescription) {\n    return new Error(\n      'icon property specified without also providing an iconDescription property.'\n    );\n  }\n  return undefined;\n}"
                },
                "defaultValue": {
                  "summary": "'Provide icon description if icon is used'"
                }
              }
            },
            "iconReverse": {
              "control": { "type": "boolean" },
              "name": "iconReverse",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Optionally specify an href for your Button to become an <a> element",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "kind": "primary",
          "type": "button",
          "iconDescription": "Provide icon description if icon is used",
          "children": "Button",
          "href": "#"
        },
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "children",
            "required": false,
            "description": "Specify the content of your Button",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "href": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": false },
            "name": "href",
            "required": false,
            "description": "Optionally specify an href for your Button to become an <a> element",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify an optional className to be added to your Button",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "disabled": {
            "control": { "type": "boolean" },
            "name": "disabled",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the Button should be disabled, or not",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "small": {
            "control": { "type": "boolean" },
            "name": "small",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the Button should be a small variant",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "kind": {
            "control": {
              "type": "select",
              "options": [
                "primary",
                "secondary",
                "accent",
                "danger",
                "ghost",
                "inverse--primary",
                "inverse",
                "danger--primary",
                "tertiary",
                "navigation"
              ]
            },
            "name": "kind",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "primary",
                "secondary",
                "accent",
                "danger",
                "ghost",
                "inverse--primary",
                "inverse",
                "danger--primary",
                "tertiary",
                "navigation"
              ]
            },
            "required": false,
            "description": "Specify the kind of Button you want to create",
            "defaultValue": "primary",
            "sbType": {
              "name": "enum",
              "value": [
                "primary",
                "secondary",
                "accent",
                "danger",
                "ghost",
                "inverse--primary",
                "inverse",
                "danger--primary",
                "tertiary",
                "navigation"
              ]
            },
            "table": {
              "type": {
                "summary": "'primary' | 'secondary' | 'accent' | 'danger' | 'ghost' | 'inverse--primary' | 'inverse' | 'danger--primary' | 'tertiary' | 'navigation'"
              },
              "defaultValue": { "summary": "'primary'" }
            }
          },
          "tabIndex": {
            "control": { "type": "number" },
            "name": "tabIndex",
            "type": { "required": false, "name": "number" },
            "required": false,
            "description": "Optional prop to specify the tabIndex of the Button",
            "defaultValue": 0,
            "sbType": { "name": "number" },
            "table": {
              "type": { "summary": "number" },
              "defaultValue": { "summary": "0" }
            }
          },
          "type": {
            "control": {
              "type": "radio",
              "options": ["button", "reset", "submit"]
            },
            "name": "type",
            "type": {
              "required": false,
              "name": "enum",
              "value": ["button", "reset", "submit"]
            },
            "required": false,
            "description": "Optional prop to specify the type of the Button",
            "defaultValue": "button",
            "sbType": {
              "name": "enum",
              "value": ["button", "reset", "submit"]
            },
            "table": {
              "type": { "summary": "'button' | 'reset' | 'submit'" },
              "defaultValue": { "summary": "'button'" }
            }
          },
          "role": {
            "control": { "type": "text" },
            "name": "role",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Optional prop to specify the role of the Button",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "icon": {
            "control": { "type": "object" },
            "name": "icon",
            "type": {
              "required": false,
              "name": "object",
              "value": {
                "width": { "name": "string" },
                "height": { "name": "string" },
                "viewBox": { "name": "string" },
                "svgData": { "name": "object" }
              }
            },
            "required": false,
            "description": "Specify an `icon` to include in the Button through an object representing the SVG data of the icon, similar to the `Icon` component",
            "defaultValue": null,
            "sbType": {
              "name": "object",
              "value": {
                "width": { "name": "string" },
                "height": { "name": "string" },
                "viewBox": { "name": "string" },
                "svgData": { "name": "object" }
              }
            },
            "table": {
              "type": {
                "summary": "{    width: string,    height: string,    viewBox: string,    svgData: object }"
              },
              "defaultValue": null
            }
          },
          "iconDescription": {
            "control": { "type": "object" },
            "name": "iconDescription",
            "type": {
              "required": false,
              "raw": "(props) => {\n  if (props.icon && !props.iconDescription) {\n    return new Error(\n      'icon property specified without also providing an iconDescription property.'\n    );\n  }\n  return undefined;\n}",
              "name": "other",
              "value": "custom"
            },
            "required": false,
            "description": "If specifying the `icon` prop, provide a description for that icon that can\nbe read by screen readers",
            "defaultValue": "Provide icon description if icon is used",
            "sbType": {
              "raw": "(props) => {\n  if (props.icon && !props.iconDescription) {\n    return new Error(\n      'icon property specified without also providing an iconDescription property.'\n    );\n  }\n  return undefined;\n}",
              "name": "other",
              "value": "custom"
            },
            "table": {
              "type": {
                "summary": "func",
                "detail": "(props) => {\n  if (props.icon && !props.iconDescription) {\n    return new Error(\n      'icon property specified without also providing an iconDescription property.'\n    );\n  }\n  return undefined;\n}"
              },
              "defaultValue": {
                "summary": "'Provide icon description if icon is used'"
              }
            }
          },
          "iconReverse": {
            "control": { "type": "boolean" },
            "name": "iconReverse",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Optionally specify an href for your Button to become an <a> element",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          }
        },
        "initialArgs": {
          "kind": "primary",
          "type": "button",
          "iconDescription": "Provide icon description if icon is used",
          "children": "Button",
          "href": "#"
        }
      },
      "components-button--button-kind": {
        "id": "components-button--button-kind",
        "kind": "Components/Button",
        "name": "Button kinds",
        "story": "Button kinds",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "markdown": "hello",
          "docs": {
            "storyDescription": "\nBy changing the `kind` prop you can use different styles of the button.\n\n| kind   |  Description  |\n|----------|-------------|\n| `primary` | the principle call to action on the page |\n| `secondary` | secondary actions on each page   |\n| `tertiary` | simple actions on the page |\n| `accent` | very important actions and only once or twice on each page |\n| `tertiary` | simple actions on the page |\n| `danger` | a negative action (such as Delete) on the page |\n| `danger--primary` | a negative principle call to action (such as Delete) on the page |\n| `ghost` | in places where a regular button would draw too much attention and look similar to links |\n| `inverse--primary` | should be used on dark backgrounds |\n| `inverse` | should be used on dark backgrounds |\n| `navigation`| should be only used in the main navigation |\n"
          },
          "storySource": {
            "source": "(args) => (\n  <>\n    {buttonKinds.map((e) => (\n      <div\n        style={{\n          display: 'inline-block',\n          background: e === 'inverse' || e === 'inverse--primary' ? '#ccc' : '',\n          padding: '0.3rem',\n        }}>\n        <Button {...args} kind={e}>\n          {e}\n        </Button>\n      </div>\n    ))}\n  </>\n)"
          },
          "__id": "components-button--button-kind",
          "args": { "children": "Button", "href": "#" },
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "children",
              "required": false,
              "description": "Specify the content of your Button",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "href": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": false },
              "name": "href",
              "required": false,
              "description": "Optionally specify an href for your Button to become an <a> element",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify an optional className to be added to your Button",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "disabled": {
              "control": { "type": "boolean" },
              "name": "disabled",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the Button should be disabled, or not",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "small": {
              "control": { "type": "boolean" },
              "name": "small",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the Button should be a small variant",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "kind": {
              "control": {
                "type": "select",
                "options": [
                  "primary",
                  "secondary",
                  "accent",
                  "danger",
                  "ghost",
                  "inverse--primary",
                  "inverse",
                  "danger--primary",
                  "tertiary",
                  "navigation"
                ]
              },
              "name": "kind",
              "type": {
                "required": false,
                "name": "enum",
                "value": [
                  "primary",
                  "secondary",
                  "accent",
                  "danger",
                  "ghost",
                  "inverse--primary",
                  "inverse",
                  "danger--primary",
                  "tertiary",
                  "navigation"
                ]
              },
              "required": false,
              "description": "Specify the kind of Button you want to create",
              "defaultValue": "primary",
              "sbType": {
                "name": "enum",
                "value": [
                  "primary",
                  "secondary",
                  "accent",
                  "danger",
                  "ghost",
                  "inverse--primary",
                  "inverse",
                  "danger--primary",
                  "tertiary",
                  "navigation"
                ]
              },
              "table": {
                "type": {
                  "summary": "'primary' | 'secondary' | 'accent' | 'danger' | 'ghost' | 'inverse--primary' | 'inverse' | 'danger--primary' | 'tertiary' | 'navigation'"
                },
                "defaultValue": { "summary": "'primary'" }
              }
            },
            "tabIndex": {
              "control": { "type": "number" },
              "name": "tabIndex",
              "type": { "required": false, "name": "number" },
              "required": false,
              "description": "Optional prop to specify the tabIndex of the Button",
              "defaultValue": 0,
              "sbType": { "name": "number" },
              "table": {
                "type": { "summary": "number" },
                "defaultValue": { "summary": "0" }
              }
            },
            "type": {
              "control": {
                "type": "radio",
                "options": ["button", "reset", "submit"]
              },
              "name": "type",
              "type": {
                "required": false,
                "name": "enum",
                "value": ["button", "reset", "submit"]
              },
              "required": false,
              "description": "Optional prop to specify the type of the Button",
              "defaultValue": "button",
              "sbType": {
                "name": "enum",
                "value": ["button", "reset", "submit"]
              },
              "table": {
                "type": { "summary": "'button' | 'reset' | 'submit'" },
                "defaultValue": { "summary": "'button'" }
              }
            },
            "role": {
              "control": { "type": "text" },
              "name": "role",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Optional prop to specify the role of the Button",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "icon": {
              "control": { "type": "object" },
              "name": "icon",
              "type": {
                "required": false,
                "name": "object",
                "value": {
                  "width": { "name": "string" },
                  "height": { "name": "string" },
                  "viewBox": { "name": "string" },
                  "svgData": { "name": "object" }
                }
              },
              "required": false,
              "description": "Specify an `icon` to include in the Button through an object representing the SVG data of the icon, similar to the `Icon` component",
              "defaultValue": null,
              "sbType": {
                "name": "object",
                "value": {
                  "width": { "name": "string" },
                  "height": { "name": "string" },
                  "viewBox": { "name": "string" },
                  "svgData": { "name": "object" }
                }
              },
              "table": {
                "type": {
                  "summary": "{    width: string,    height: string,    viewBox: string,    svgData: object }"
                },
                "defaultValue": null
              }
            },
            "iconDescription": {
              "control": { "type": "object" },
              "name": "iconDescription",
              "type": {
                "required": false,
                "raw": "(props) => {\n  if (props.icon && !props.iconDescription) {\n    return new Error(\n      'icon property specified without also providing an iconDescription property.'\n    );\n  }\n  return undefined;\n}",
                "name": "other",
                "value": "custom"
              },
              "required": false,
              "description": "If specifying the `icon` prop, provide a description for that icon that can\nbe read by screen readers",
              "defaultValue": "Provide icon description if icon is used",
              "sbType": {
                "raw": "(props) => {\n  if (props.icon && !props.iconDescription) {\n    return new Error(\n      'icon property specified without also providing an iconDescription property.'\n    );\n  }\n  return undefined;\n}",
                "name": "other",
                "value": "custom"
              },
              "table": {
                "type": {
                  "summary": "func",
                  "detail": "(props) => {\n  if (props.icon && !props.iconDescription) {\n    return new Error(\n      'icon property specified without also providing an iconDescription property.'\n    );\n  }\n  return undefined;\n}"
                },
                "defaultValue": {
                  "summary": "'Provide icon description if icon is used'"
                }
              }
            },
            "iconReverse": {
              "control": { "type": "boolean" },
              "name": "iconReverse",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Optionally specify an href for your Button to become an <a> element",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "kind": "primary",
          "type": "button",
          "iconDescription": "Provide icon description if icon is used",
          "children": "Button",
          "href": "#"
        },
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "children",
            "required": false,
            "description": "Specify the content of your Button",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "href": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": false },
            "name": "href",
            "required": false,
            "description": "Optionally specify an href for your Button to become an <a> element",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify an optional className to be added to your Button",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "disabled": {
            "control": { "type": "boolean" },
            "name": "disabled",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the Button should be disabled, or not",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "small": {
            "control": { "type": "boolean" },
            "name": "small",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the Button should be a small variant",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "kind": {
            "control": {
              "type": "select",
              "options": [
                "primary",
                "secondary",
                "accent",
                "danger",
                "ghost",
                "inverse--primary",
                "inverse",
                "danger--primary",
                "tertiary",
                "navigation"
              ]
            },
            "name": "kind",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "primary",
                "secondary",
                "accent",
                "danger",
                "ghost",
                "inverse--primary",
                "inverse",
                "danger--primary",
                "tertiary",
                "navigation"
              ]
            },
            "required": false,
            "description": "Specify the kind of Button you want to create",
            "defaultValue": "primary",
            "sbType": {
              "name": "enum",
              "value": [
                "primary",
                "secondary",
                "accent",
                "danger",
                "ghost",
                "inverse--primary",
                "inverse",
                "danger--primary",
                "tertiary",
                "navigation"
              ]
            },
            "table": {
              "type": {
                "summary": "'primary' | 'secondary' | 'accent' | 'danger' | 'ghost' | 'inverse--primary' | 'inverse' | 'danger--primary' | 'tertiary' | 'navigation'"
              },
              "defaultValue": { "summary": "'primary'" }
            }
          },
          "tabIndex": {
            "control": { "type": "number" },
            "name": "tabIndex",
            "type": { "required": false, "name": "number" },
            "required": false,
            "description": "Optional prop to specify the tabIndex of the Button",
            "defaultValue": 0,
            "sbType": { "name": "number" },
            "table": {
              "type": { "summary": "number" },
              "defaultValue": { "summary": "0" }
            }
          },
          "type": {
            "control": {
              "type": "radio",
              "options": ["button", "reset", "submit"]
            },
            "name": "type",
            "type": {
              "required": false,
              "name": "enum",
              "value": ["button", "reset", "submit"]
            },
            "required": false,
            "description": "Optional prop to specify the type of the Button",
            "defaultValue": "button",
            "sbType": {
              "name": "enum",
              "value": ["button", "reset", "submit"]
            },
            "table": {
              "type": { "summary": "'button' | 'reset' | 'submit'" },
              "defaultValue": { "summary": "'button'" }
            }
          },
          "role": {
            "control": { "type": "text" },
            "name": "role",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Optional prop to specify the role of the Button",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "icon": {
            "control": { "type": "object" },
            "name": "icon",
            "type": {
              "required": false,
              "name": "object",
              "value": {
                "width": { "name": "string" },
                "height": { "name": "string" },
                "viewBox": { "name": "string" },
                "svgData": { "name": "object" }
              }
            },
            "required": false,
            "description": "Specify an `icon` to include in the Button through an object representing the SVG data of the icon, similar to the `Icon` component",
            "defaultValue": null,
            "sbType": {
              "name": "object",
              "value": {
                "width": { "name": "string" },
                "height": { "name": "string" },
                "viewBox": { "name": "string" },
                "svgData": { "name": "object" }
              }
            },
            "table": {
              "type": {
                "summary": "{    width: string,    height: string,    viewBox: string,    svgData: object }"
              },
              "defaultValue": null
            }
          },
          "iconDescription": {
            "control": { "type": "object" },
            "name": "iconDescription",
            "type": {
              "required": false,
              "raw": "(props) => {\n  if (props.icon && !props.iconDescription) {\n    return new Error(\n      'icon property specified without also providing an iconDescription property.'\n    );\n  }\n  return undefined;\n}",
              "name": "other",
              "value": "custom"
            },
            "required": false,
            "description": "If specifying the `icon` prop, provide a description for that icon that can\nbe read by screen readers",
            "defaultValue": "Provide icon description if icon is used",
            "sbType": {
              "raw": "(props) => {\n  if (props.icon && !props.iconDescription) {\n    return new Error(\n      'icon property specified without also providing an iconDescription property.'\n    );\n  }\n  return undefined;\n}",
              "name": "other",
              "value": "custom"
            },
            "table": {
              "type": {
                "summary": "func",
                "detail": "(props) => {\n  if (props.icon && !props.iconDescription) {\n    return new Error(\n      'icon property specified without also providing an iconDescription property.'\n    );\n  }\n  return undefined;\n}"
              },
              "defaultValue": {
                "summary": "'Provide icon description if icon is used'"
              }
            }
          },
          "iconReverse": {
            "control": { "type": "boolean" },
            "name": "iconReverse",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Optionally specify an href for your Button to become an <a> element",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          }
        },
        "initialArgs": {
          "kind": "primary",
          "type": "button",
          "iconDescription": "Provide icon description if icon is used",
          "children": "Button",
          "href": "#"
        }
      },
      "components-button--button-icon": {
        "id": "components-button--button-icon",
        "kind": "Components/Button",
        "name": "Button with icon",
        "story": "Button with icon",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\nWhen words are not enough, icons can be used in buttons to better communicate what the button does. Icons should be\nalways paired with text whenever possible.\n\n\nUse the `icon` and `iconDescription` prop to add an Icon to the Button. Refer to the [Icon](?selectedKind=Icon) documentation for usage.\n\nTo show the Icon on the left side use the `iconReverse` prop.\n\nUsing an Button with only an Icon while not beeing recommended can be achieved by leaving the Button text blank.\n"
          },
          "storySource": {
            "source": "(args) => (\n  <>\n    <Button {...args} icon={iconAddGlyph}>\n      Button with icon\n    </Button>\n    {''} <Button {...args} icon={iconAddGlyph} kind=\"tertiary\"></Button>{' '}\n    <Button {...args} icon={iconAddGlyph} iconReverse kind=\"tertiary\">\n      With iconReverse\n    </Button>\n  </>\n)"
          },
          "__id": "components-button--button-icon",
          "args": {},
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Specify the content of your Button",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify an optional className to be added to your Button",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "disabled": {
              "control": { "type": "boolean" },
              "name": "disabled",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the Button should be disabled, or not",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "small": {
              "control": { "type": "boolean" },
              "name": "small",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the Button should be a small variant",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "kind": {
              "control": {
                "type": "select",
                "options": [
                  "primary",
                  "secondary",
                  "accent",
                  "danger",
                  "ghost",
                  "inverse--primary",
                  "inverse",
                  "danger--primary",
                  "tertiary",
                  "navigation"
                ]
              },
              "name": "kind",
              "type": {
                "required": false,
                "name": "enum",
                "value": [
                  "primary",
                  "secondary",
                  "accent",
                  "danger",
                  "ghost",
                  "inverse--primary",
                  "inverse",
                  "danger--primary",
                  "tertiary",
                  "navigation"
                ]
              },
              "required": false,
              "description": "Specify the kind of Button you want to create",
              "defaultValue": "primary",
              "sbType": {
                "name": "enum",
                "value": [
                  "primary",
                  "secondary",
                  "accent",
                  "danger",
                  "ghost",
                  "inverse--primary",
                  "inverse",
                  "danger--primary",
                  "tertiary",
                  "navigation"
                ]
              },
              "table": {
                "type": {
                  "summary": "'primary' | 'secondary' | 'accent' | 'danger' | 'ghost' | 'inverse--primary' | 'inverse' | 'danger--primary' | 'tertiary' | 'navigation'"
                },
                "defaultValue": { "summary": "'primary'" }
              }
            },
            "href": {
              "control": { "type": "text" },
              "name": "href",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Optionally specify an href for your Button to become an <a> element",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "tabIndex": {
              "control": { "type": "number" },
              "name": "tabIndex",
              "type": { "required": false, "name": "number" },
              "required": false,
              "description": "Optional prop to specify the tabIndex of the Button",
              "defaultValue": 0,
              "sbType": { "name": "number" },
              "table": {
                "type": { "summary": "number" },
                "defaultValue": { "summary": "0" }
              }
            },
            "type": {
              "control": {
                "type": "radio",
                "options": ["button", "reset", "submit"]
              },
              "name": "type",
              "type": {
                "required": false,
                "name": "enum",
                "value": ["button", "reset", "submit"]
              },
              "required": false,
              "description": "Optional prop to specify the type of the Button",
              "defaultValue": "button",
              "sbType": {
                "name": "enum",
                "value": ["button", "reset", "submit"]
              },
              "table": {
                "type": { "summary": "'button' | 'reset' | 'submit'" },
                "defaultValue": { "summary": "'button'" }
              }
            },
            "role": {
              "control": { "type": "text" },
              "name": "role",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Optional prop to specify the role of the Button",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "icon": {
              "control": { "type": "object" },
              "name": "icon",
              "type": {
                "required": false,
                "name": "object",
                "value": {
                  "width": { "name": "string" },
                  "height": { "name": "string" },
                  "viewBox": { "name": "string" },
                  "svgData": { "name": "object" }
                }
              },
              "required": false,
              "description": "Specify an `icon` to include in the Button through an object representing the SVG data of the icon, similar to the `Icon` component",
              "defaultValue": null,
              "sbType": {
                "name": "object",
                "value": {
                  "width": { "name": "string" },
                  "height": { "name": "string" },
                  "viewBox": { "name": "string" },
                  "svgData": { "name": "object" }
                }
              },
              "table": {
                "type": {
                  "summary": "{    width: string,    height: string,    viewBox: string,    svgData: object }"
                },
                "defaultValue": null
              }
            },
            "iconDescription": {
              "control": { "type": "object" },
              "name": "iconDescription",
              "type": {
                "required": false,
                "raw": "(props) => {\n  if (props.icon && !props.iconDescription) {\n    return new Error(\n      'icon property specified without also providing an iconDescription property.'\n    );\n  }\n  return undefined;\n}",
                "name": "other",
                "value": "custom"
              },
              "required": false,
              "description": "If specifying the `icon` prop, provide a description for that icon that can\nbe read by screen readers",
              "defaultValue": "Provide icon description if icon is used",
              "sbType": {
                "raw": "(props) => {\n  if (props.icon && !props.iconDescription) {\n    return new Error(\n      'icon property specified without also providing an iconDescription property.'\n    );\n  }\n  return undefined;\n}",
                "name": "other",
                "value": "custom"
              },
              "table": {
                "type": {
                  "summary": "func",
                  "detail": "(props) => {\n  if (props.icon && !props.iconDescription) {\n    return new Error(\n      'icon property specified without also providing an iconDescription property.'\n    );\n  }\n  return undefined;\n}"
                },
                "defaultValue": {
                  "summary": "'Provide icon description if icon is used'"
                }
              }
            },
            "iconReverse": {
              "control": { "type": "boolean" },
              "name": "iconReverse",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Optionally specify an href for your Button to become an <a> element",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "kind": "primary",
          "type": "button",
          "iconDescription": "Provide icon description if icon is used"
        },
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Specify the content of your Button",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify an optional className to be added to your Button",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "disabled": {
            "control": { "type": "boolean" },
            "name": "disabled",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the Button should be disabled, or not",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "small": {
            "control": { "type": "boolean" },
            "name": "small",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the Button should be a small variant",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "kind": {
            "control": {
              "type": "select",
              "options": [
                "primary",
                "secondary",
                "accent",
                "danger",
                "ghost",
                "inverse--primary",
                "inverse",
                "danger--primary",
                "tertiary",
                "navigation"
              ]
            },
            "name": "kind",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "primary",
                "secondary",
                "accent",
                "danger",
                "ghost",
                "inverse--primary",
                "inverse",
                "danger--primary",
                "tertiary",
                "navigation"
              ]
            },
            "required": false,
            "description": "Specify the kind of Button you want to create",
            "defaultValue": "primary",
            "sbType": {
              "name": "enum",
              "value": [
                "primary",
                "secondary",
                "accent",
                "danger",
                "ghost",
                "inverse--primary",
                "inverse",
                "danger--primary",
                "tertiary",
                "navigation"
              ]
            },
            "table": {
              "type": {
                "summary": "'primary' | 'secondary' | 'accent' | 'danger' | 'ghost' | 'inverse--primary' | 'inverse' | 'danger--primary' | 'tertiary' | 'navigation'"
              },
              "defaultValue": { "summary": "'primary'" }
            }
          },
          "href": {
            "control": { "type": "text" },
            "name": "href",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Optionally specify an href for your Button to become an <a> element",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "tabIndex": {
            "control": { "type": "number" },
            "name": "tabIndex",
            "type": { "required": false, "name": "number" },
            "required": false,
            "description": "Optional prop to specify the tabIndex of the Button",
            "defaultValue": 0,
            "sbType": { "name": "number" },
            "table": {
              "type": { "summary": "number" },
              "defaultValue": { "summary": "0" }
            }
          },
          "type": {
            "control": {
              "type": "radio",
              "options": ["button", "reset", "submit"]
            },
            "name": "type",
            "type": {
              "required": false,
              "name": "enum",
              "value": ["button", "reset", "submit"]
            },
            "required": false,
            "description": "Optional prop to specify the type of the Button",
            "defaultValue": "button",
            "sbType": {
              "name": "enum",
              "value": ["button", "reset", "submit"]
            },
            "table": {
              "type": { "summary": "'button' | 'reset' | 'submit'" },
              "defaultValue": { "summary": "'button'" }
            }
          },
          "role": {
            "control": { "type": "text" },
            "name": "role",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Optional prop to specify the role of the Button",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "icon": {
            "control": { "type": "object" },
            "name": "icon",
            "type": {
              "required": false,
              "name": "object",
              "value": {
                "width": { "name": "string" },
                "height": { "name": "string" },
                "viewBox": { "name": "string" },
                "svgData": { "name": "object" }
              }
            },
            "required": false,
            "description": "Specify an `icon` to include in the Button through an object representing the SVG data of the icon, similar to the `Icon` component",
            "defaultValue": null,
            "sbType": {
              "name": "object",
              "value": {
                "width": { "name": "string" },
                "height": { "name": "string" },
                "viewBox": { "name": "string" },
                "svgData": { "name": "object" }
              }
            },
            "table": {
              "type": {
                "summary": "{    width: string,    height: string,    viewBox: string,    svgData: object }"
              },
              "defaultValue": null
            }
          },
          "iconDescription": {
            "control": { "type": "object" },
            "name": "iconDescription",
            "type": {
              "required": false,
              "raw": "(props) => {\n  if (props.icon && !props.iconDescription) {\n    return new Error(\n      'icon property specified without also providing an iconDescription property.'\n    );\n  }\n  return undefined;\n}",
              "name": "other",
              "value": "custom"
            },
            "required": false,
            "description": "If specifying the `icon` prop, provide a description for that icon that can\nbe read by screen readers",
            "defaultValue": "Provide icon description if icon is used",
            "sbType": {
              "raw": "(props) => {\n  if (props.icon && !props.iconDescription) {\n    return new Error(\n      'icon property specified without also providing an iconDescription property.'\n    );\n  }\n  return undefined;\n}",
              "name": "other",
              "value": "custom"
            },
            "table": {
              "type": {
                "summary": "func",
                "detail": "(props) => {\n  if (props.icon && !props.iconDescription) {\n    return new Error(\n      'icon property specified without also providing an iconDescription property.'\n    );\n  }\n  return undefined;\n}"
              },
              "defaultValue": {
                "summary": "'Provide icon description if icon is used'"
              }
            }
          },
          "iconReverse": {
            "control": { "type": "boolean" },
            "name": "iconReverse",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Optionally specify an href for your Button to become an <a> element",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          }
        },
        "initialArgs": {
          "kind": "primary",
          "type": "button",
          "iconDescription": "Provide icon description if icon is used"
        }
      },
      "components-button--small": {
        "id": "components-button--small",
        "kind": "Components/Button",
        "name": "small Button",
        "story": "small Button",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\nSmall buttons may be used when there is not enough space for a\nregular sized button. This issue is most found in tables. Small button should have three words\nor less.\n"
          },
          "storySource": {
            "source": "(args) => (\n  <>\n    <Button small>Small button</Button>{' '}\n    <Button {...args} icon={iconAddGlyph} kind=\"tertiary\" small>\n      With icon\n    </Button>{' '}\n  </>\n)"
          },
          "__id": "components-button--small",
          "args": {},
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Specify the content of your Button",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify an optional className to be added to your Button",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "disabled": {
              "control": { "type": "boolean" },
              "name": "disabled",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the Button should be disabled, or not",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "small": {
              "control": { "type": "boolean" },
              "name": "small",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the Button should be a small variant",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "kind": {
              "control": {
                "type": "select",
                "options": [
                  "primary",
                  "secondary",
                  "accent",
                  "danger",
                  "ghost",
                  "inverse--primary",
                  "inverse",
                  "danger--primary",
                  "tertiary",
                  "navigation"
                ]
              },
              "name": "kind",
              "type": {
                "required": false,
                "name": "enum",
                "value": [
                  "primary",
                  "secondary",
                  "accent",
                  "danger",
                  "ghost",
                  "inverse--primary",
                  "inverse",
                  "danger--primary",
                  "tertiary",
                  "navigation"
                ]
              },
              "required": false,
              "description": "Specify the kind of Button you want to create",
              "defaultValue": "primary",
              "sbType": {
                "name": "enum",
                "value": [
                  "primary",
                  "secondary",
                  "accent",
                  "danger",
                  "ghost",
                  "inverse--primary",
                  "inverse",
                  "danger--primary",
                  "tertiary",
                  "navigation"
                ]
              },
              "table": {
                "type": {
                  "summary": "'primary' | 'secondary' | 'accent' | 'danger' | 'ghost' | 'inverse--primary' | 'inverse' | 'danger--primary' | 'tertiary' | 'navigation'"
                },
                "defaultValue": { "summary": "'primary'" }
              }
            },
            "href": {
              "control": { "type": "text" },
              "name": "href",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Optionally specify an href for your Button to become an <a> element",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "tabIndex": {
              "control": { "type": "number" },
              "name": "tabIndex",
              "type": { "required": false, "name": "number" },
              "required": false,
              "description": "Optional prop to specify the tabIndex of the Button",
              "defaultValue": 0,
              "sbType": { "name": "number" },
              "table": {
                "type": { "summary": "number" },
                "defaultValue": { "summary": "0" }
              }
            },
            "type": {
              "control": {
                "type": "radio",
                "options": ["button", "reset", "submit"]
              },
              "name": "type",
              "type": {
                "required": false,
                "name": "enum",
                "value": ["button", "reset", "submit"]
              },
              "required": false,
              "description": "Optional prop to specify the type of the Button",
              "defaultValue": "button",
              "sbType": {
                "name": "enum",
                "value": ["button", "reset", "submit"]
              },
              "table": {
                "type": { "summary": "'button' | 'reset' | 'submit'" },
                "defaultValue": { "summary": "'button'" }
              }
            },
            "role": {
              "control": { "type": "text" },
              "name": "role",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Optional prop to specify the role of the Button",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "icon": {
              "control": { "type": "object" },
              "name": "icon",
              "type": {
                "required": false,
                "name": "object",
                "value": {
                  "width": { "name": "string" },
                  "height": { "name": "string" },
                  "viewBox": { "name": "string" },
                  "svgData": { "name": "object" }
                }
              },
              "required": false,
              "description": "Specify an `icon` to include in the Button through an object representing the SVG data of the icon, similar to the `Icon` component",
              "defaultValue": null,
              "sbType": {
                "name": "object",
                "value": {
                  "width": { "name": "string" },
                  "height": { "name": "string" },
                  "viewBox": { "name": "string" },
                  "svgData": { "name": "object" }
                }
              },
              "table": {
                "type": {
                  "summary": "{    width: string,    height: string,    viewBox: string,    svgData: object }"
                },
                "defaultValue": null
              }
            },
            "iconDescription": {
              "control": { "type": "object" },
              "name": "iconDescription",
              "type": {
                "required": false,
                "raw": "(props) => {\n  if (props.icon && !props.iconDescription) {\n    return new Error(\n      'icon property specified without also providing an iconDescription property.'\n    );\n  }\n  return undefined;\n}",
                "name": "other",
                "value": "custom"
              },
              "required": false,
              "description": "If specifying the `icon` prop, provide a description for that icon that can\nbe read by screen readers",
              "defaultValue": "Provide icon description if icon is used",
              "sbType": {
                "raw": "(props) => {\n  if (props.icon && !props.iconDescription) {\n    return new Error(\n      'icon property specified without also providing an iconDescription property.'\n    );\n  }\n  return undefined;\n}",
                "name": "other",
                "value": "custom"
              },
              "table": {
                "type": {
                  "summary": "func",
                  "detail": "(props) => {\n  if (props.icon && !props.iconDescription) {\n    return new Error(\n      'icon property specified without also providing an iconDescription property.'\n    );\n  }\n  return undefined;\n}"
                },
                "defaultValue": {
                  "summary": "'Provide icon description if icon is used'"
                }
              }
            },
            "iconReverse": {
              "control": { "type": "boolean" },
              "name": "iconReverse",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Optionally specify an href for your Button to become an <a> element",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "kind": "primary",
          "type": "button",
          "iconDescription": "Provide icon description if icon is used"
        },
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Specify the content of your Button",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify an optional className to be added to your Button",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "disabled": {
            "control": { "type": "boolean" },
            "name": "disabled",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the Button should be disabled, or not",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "small": {
            "control": { "type": "boolean" },
            "name": "small",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the Button should be a small variant",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "kind": {
            "control": {
              "type": "select",
              "options": [
                "primary",
                "secondary",
                "accent",
                "danger",
                "ghost",
                "inverse--primary",
                "inverse",
                "danger--primary",
                "tertiary",
                "navigation"
              ]
            },
            "name": "kind",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "primary",
                "secondary",
                "accent",
                "danger",
                "ghost",
                "inverse--primary",
                "inverse",
                "danger--primary",
                "tertiary",
                "navigation"
              ]
            },
            "required": false,
            "description": "Specify the kind of Button you want to create",
            "defaultValue": "primary",
            "sbType": {
              "name": "enum",
              "value": [
                "primary",
                "secondary",
                "accent",
                "danger",
                "ghost",
                "inverse--primary",
                "inverse",
                "danger--primary",
                "tertiary",
                "navigation"
              ]
            },
            "table": {
              "type": {
                "summary": "'primary' | 'secondary' | 'accent' | 'danger' | 'ghost' | 'inverse--primary' | 'inverse' | 'danger--primary' | 'tertiary' | 'navigation'"
              },
              "defaultValue": { "summary": "'primary'" }
            }
          },
          "href": {
            "control": { "type": "text" },
            "name": "href",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Optionally specify an href for your Button to become an <a> element",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "tabIndex": {
            "control": { "type": "number" },
            "name": "tabIndex",
            "type": { "required": false, "name": "number" },
            "required": false,
            "description": "Optional prop to specify the tabIndex of the Button",
            "defaultValue": 0,
            "sbType": { "name": "number" },
            "table": {
              "type": { "summary": "number" },
              "defaultValue": { "summary": "0" }
            }
          },
          "type": {
            "control": {
              "type": "radio",
              "options": ["button", "reset", "submit"]
            },
            "name": "type",
            "type": {
              "required": false,
              "name": "enum",
              "value": ["button", "reset", "submit"]
            },
            "required": false,
            "description": "Optional prop to specify the type of the Button",
            "defaultValue": "button",
            "sbType": {
              "name": "enum",
              "value": ["button", "reset", "submit"]
            },
            "table": {
              "type": { "summary": "'button' | 'reset' | 'submit'" },
              "defaultValue": { "summary": "'button'" }
            }
          },
          "role": {
            "control": { "type": "text" },
            "name": "role",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Optional prop to specify the role of the Button",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "icon": {
            "control": { "type": "object" },
            "name": "icon",
            "type": {
              "required": false,
              "name": "object",
              "value": {
                "width": { "name": "string" },
                "height": { "name": "string" },
                "viewBox": { "name": "string" },
                "svgData": { "name": "object" }
              }
            },
            "required": false,
            "description": "Specify an `icon` to include in the Button through an object representing the SVG data of the icon, similar to the `Icon` component",
            "defaultValue": null,
            "sbType": {
              "name": "object",
              "value": {
                "width": { "name": "string" },
                "height": { "name": "string" },
                "viewBox": { "name": "string" },
                "svgData": { "name": "object" }
              }
            },
            "table": {
              "type": {
                "summary": "{    width: string,    height: string,    viewBox: string,    svgData: object }"
              },
              "defaultValue": null
            }
          },
          "iconDescription": {
            "control": { "type": "object" },
            "name": "iconDescription",
            "type": {
              "required": false,
              "raw": "(props) => {\n  if (props.icon && !props.iconDescription) {\n    return new Error(\n      'icon property specified without also providing an iconDescription property.'\n    );\n  }\n  return undefined;\n}",
              "name": "other",
              "value": "custom"
            },
            "required": false,
            "description": "If specifying the `icon` prop, provide a description for that icon that can\nbe read by screen readers",
            "defaultValue": "Provide icon description if icon is used",
            "sbType": {
              "raw": "(props) => {\n  if (props.icon && !props.iconDescription) {\n    return new Error(\n      'icon property specified without also providing an iconDescription property.'\n    );\n  }\n  return undefined;\n}",
              "name": "other",
              "value": "custom"
            },
            "table": {
              "type": {
                "summary": "func",
                "detail": "(props) => {\n  if (props.icon && !props.iconDescription) {\n    return new Error(\n      'icon property specified without also providing an iconDescription property.'\n    );\n  }\n  return undefined;\n}"
              },
              "defaultValue": {
                "summary": "'Provide icon description if icon is used'"
              }
            }
          },
          "iconReverse": {
            "control": { "type": "boolean" },
            "name": "iconReverse",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Optionally specify an href for your Button to become an <a> element",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          }
        },
        "initialArgs": {
          "kind": "primary",
          "type": "button",
          "iconDescription": "Provide icon description if icon is used"
        }
      },
      "components-card--regular": {
        "id": "components-card--regular",
        "kind": "Components/Card",
        "name": "Regular",
        "story": "Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": { "source": "(args) => <Card {...args} />" },
          "__id": "components-card--regular",
          "args": {
            "href": "#",
            "image": "http://www1.wfp.org/sites/default/files/images/yemen-hero-min.jpg",
            "subTitle": "Food security and climate change analyses, adaptation planning, and good practices in food security adaptation programming.",
            "title": "The Climate Adaption Mangement and Innovation Initiative",
            "kind": "landscape"
          },
          "argTypes": {
            "href": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": false },
              "name": "href",
              "required": false,
              "description": "The links target",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "image": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": false },
              "name": "image",
              "required": false,
              "description": "An optimized photograph",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "subTitle": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "subTitle",
              "required": false,
              "description": "A short sentence to explain the content of the node (max 180 characters)",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "title": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "title",
              "required": false,
              "description": "A search-friendly title (ideally 50 characters, max 100)",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "kind": {
              "control": {
                "type": "select",
                "options": [
                  "landscape",
                  "landscape-light",
                  "emergencies",
                  "split",
                  "hero",
                  "splash",
                  "splash-image",
                  "splash-compact",
                  "related"
                ]
              },
              "type": {
                "name": "enum",
                "required": true,
                "value": [
                  "landscape",
                  "landscape-light",
                  "emergencies",
                  "split",
                  "hero",
                  "splash",
                  "splash-image",
                  "splash-compact",
                  "related"
                ]
              },
              "name": "kind",
              "required": true,
              "description": "Kind of Card",
              "defaultValue": null,
              "sbType": {
                "name": "enum",
                "value": [
                  "landscape",
                  "landscape-light",
                  "emergencies",
                  "split",
                  "hero",
                  "splash",
                  "splash-image",
                  "splash-compact",
                  "related"
                ]
              },
              "table": {
                "type": {
                  "summary": "'landscape' | 'landscape-light' | 'emergencies' | 'split' | 'hero' | 'splash' | 'splash-image' | 'splash-compact' | 'related'"
                },
                "defaultValue": null
              }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Additional className which will be added",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "isExternal": {
              "control": { "type": "boolean" },
              "name": "isExternal",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "External link flag",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "isLink": {
              "control": { "type": "boolean" },
              "name": "isLink",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Render the Card as link",
              "defaultValue": true,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "true" }
              }
            },
            "metadata": {
              "control": { "type": "text" },
              "name": "metadata",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Additional metadatas",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "more": {
              "control": { "type": "object" },
              "name": "more",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Additional more content",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "url": {
              "control": { "type": "text" },
              "name": "url",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The URL where the content uploaded is located.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "isLink": true,
          "href": "#",
          "image": "http://www1.wfp.org/sites/default/files/images/yemen-hero-min.jpg",
          "subTitle": "Food security and climate change analyses, adaptation planning, and good practices in food security adaptation programming.",
          "title": "The Climate Adaption Mangement and Innovation Initiative",
          "kind": "landscape"
        },
        "argTypes": {
          "href": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": false },
            "name": "href",
            "required": false,
            "description": "The links target",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "image": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": false },
            "name": "image",
            "required": false,
            "description": "An optimized photograph",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "subTitle": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "subTitle",
            "required": false,
            "description": "A short sentence to explain the content of the node (max 180 characters)",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "title": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "title",
            "required": false,
            "description": "A search-friendly title (ideally 50 characters, max 100)",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "kind": {
            "control": {
              "type": "select",
              "options": [
                "landscape",
                "landscape-light",
                "emergencies",
                "split",
                "hero",
                "splash",
                "splash-image",
                "splash-compact",
                "related"
              ]
            },
            "type": {
              "name": "enum",
              "required": true,
              "value": [
                "landscape",
                "landscape-light",
                "emergencies",
                "split",
                "hero",
                "splash",
                "splash-image",
                "splash-compact",
                "related"
              ]
            },
            "name": "kind",
            "required": true,
            "description": "Kind of Card",
            "defaultValue": null,
            "sbType": {
              "name": "enum",
              "value": [
                "landscape",
                "landscape-light",
                "emergencies",
                "split",
                "hero",
                "splash",
                "splash-image",
                "splash-compact",
                "related"
              ]
            },
            "table": {
              "type": {
                "summary": "'landscape' | 'landscape-light' | 'emergencies' | 'split' | 'hero' | 'splash' | 'splash-image' | 'splash-compact' | 'related'"
              },
              "defaultValue": null
            }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Additional className which will be added",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "isExternal": {
            "control": { "type": "boolean" },
            "name": "isExternal",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "External link flag",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "isLink": {
            "control": { "type": "boolean" },
            "name": "isLink",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Render the Card as link",
            "defaultValue": true,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "true" }
            }
          },
          "metadata": {
            "control": { "type": "text" },
            "name": "metadata",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Additional metadatas",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "more": {
            "control": { "type": "object" },
            "name": "more",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Additional more content",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "url": {
            "control": { "type": "text" },
            "name": "url",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The URL where the content uploaded is located.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          }
        },
        "initialArgs": {
          "isLink": true,
          "href": "#",
          "image": "http://www1.wfp.org/sites/default/files/images/yemen-hero-min.jpg",
          "subTitle": "Food security and climate change analyses, adaptation planning, and good practices in food security adaptation programming.",
          "title": "The Climate Adaption Mangement and Innovation Initiative",
          "kind": "landscape"
        }
      },
      "components-card--card-kinds": {
        "id": "components-card--card-kinds",
        "kind": "Components/Card",
        "name": "Card kinds",
        "story": "Card kinds",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "markdown": "hello",
          "docs": {
            "storyDescription": "\nBy changing the `kind` prop you can use different styles of the card.\n\n| kind   |  Description  |\n|----------|-------------|\n| `landscape` | A card designed to highlight a link using a landscape photograph and a title with metadata above.|\n| `landscape-light` | A card designed to highlight a link using a landscape photograph and  white-background section below with a title and a subtitle.   |\n| `split` | A card of the same dimension of the landscape photo card, but split in half. One half features a landscape photograph, the other half is a white-background section with a title and a subtitle. |\n| `hero` | Hero block with title and a background image. It can feature an optional subtitle. |\n| `splash` | Page middle content section. |\n| `splash-image` | Page middle content section with background image. |\n| `splash-compact` | A card content section without space around title and subtitle. |\n| `related` | A card designed with landscape photograph and a title with metadata on right side. |\n\n\n"
          },
          "storySource": { "source": "(args) => <></>" },
          "__id": "components-card--card-kinds",
          "args": {},
          "argTypes": {
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Additional className which will be added",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "href": {
              "control": { "type": "text" },
              "name": "href",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The links target",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "image": {
              "control": { "type": "text" },
              "name": "image",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "An optimized photograph",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "isExternal": {
              "control": { "type": "boolean" },
              "name": "isExternal",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "External link flag",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "isLink": {
              "control": { "type": "boolean" },
              "name": "isLink",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Render the Card as link",
              "defaultValue": true,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "true" }
              }
            },
            "subTitle": {
              "control": { "type": "object" },
              "name": "subTitle",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "A short sentence to explain the content of the node (max 180 characters)",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "title": {
              "control": { "type": "object" },
              "name": "title",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "A search-friendly title (ideally 50 characters, max 100)",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "metadata": {
              "control": { "type": "text" },
              "name": "metadata",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Additional metadatas",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "more": {
              "control": { "type": "object" },
              "name": "more",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Additional more content",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "kind": {
              "control": {
                "type": "select",
                "options": [
                  "landscape",
                  "landscape-light",
                  "emergencies",
                  "split",
                  "hero",
                  "splash",
                  "splash-image",
                  "splash-compact",
                  "related"
                ]
              },
              "name": "kind",
              "type": {
                "required": true,
                "name": "enum",
                "value": [
                  "landscape",
                  "landscape-light",
                  "emergencies",
                  "split",
                  "hero",
                  "splash",
                  "splash-image",
                  "splash-compact",
                  "related"
                ]
              },
              "required": true,
              "description": "Kind of Card",
              "defaultValue": null,
              "sbType": {
                "name": "enum",
                "value": [
                  "landscape",
                  "landscape-light",
                  "emergencies",
                  "split",
                  "hero",
                  "splash",
                  "splash-image",
                  "splash-compact",
                  "related"
                ]
              },
              "table": {
                "type": {
                  "summary": "'landscape' | 'landscape-light' | 'emergencies' | 'split' | 'hero' | 'splash' | 'splash-image' | 'splash-compact' | 'related'"
                },
                "defaultValue": null
              }
            },
            "url": {
              "control": { "type": "text" },
              "name": "url",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The URL where the content uploaded is located.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": { "isLink": true },
        "argTypes": {
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Additional className which will be added",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "href": {
            "control": { "type": "text" },
            "name": "href",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The links target",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "image": {
            "control": { "type": "text" },
            "name": "image",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "An optimized photograph",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "isExternal": {
            "control": { "type": "boolean" },
            "name": "isExternal",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "External link flag",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "isLink": {
            "control": { "type": "boolean" },
            "name": "isLink",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Render the Card as link",
            "defaultValue": true,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "true" }
            }
          },
          "subTitle": {
            "control": { "type": "object" },
            "name": "subTitle",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "A short sentence to explain the content of the node (max 180 characters)",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "title": {
            "control": { "type": "object" },
            "name": "title",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "A search-friendly title (ideally 50 characters, max 100)",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "metadata": {
            "control": { "type": "text" },
            "name": "metadata",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Additional metadatas",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "more": {
            "control": { "type": "object" },
            "name": "more",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Additional more content",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "kind": {
            "control": {
              "type": "select",
              "options": [
                "landscape",
                "landscape-light",
                "emergencies",
                "split",
                "hero",
                "splash",
                "splash-image",
                "splash-compact",
                "related"
              ]
            },
            "name": "kind",
            "type": {
              "required": true,
              "name": "enum",
              "value": [
                "landscape",
                "landscape-light",
                "emergencies",
                "split",
                "hero",
                "splash",
                "splash-image",
                "splash-compact",
                "related"
              ]
            },
            "required": true,
            "description": "Kind of Card",
            "defaultValue": null,
            "sbType": {
              "name": "enum",
              "value": [
                "landscape",
                "landscape-light",
                "emergencies",
                "split",
                "hero",
                "splash",
                "splash-image",
                "splash-compact",
                "related"
              ]
            },
            "table": {
              "type": {
                "summary": "'landscape' | 'landscape-light' | 'emergencies' | 'split' | 'hero' | 'splash' | 'splash-image' | 'splash-compact' | 'related'"
              },
              "defaultValue": null
            }
          },
          "url": {
            "control": { "type": "text" },
            "name": "url",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The URL where the content uploaded is located.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          }
        },
        "initialArgs": { "isLink": true }
      },
      "components-card--landscape": {
        "id": "components-card--landscape",
        "kind": "Components/Card",
        "name": "Landscape",
        "story": "Landscape",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "A card designed to highlight a link using a landscape photograph and a title with metadata above."
          },
          "storySource": { "source": "(args) => <Card {...args} />" },
          "__id": "components-card--landscape",
          "args": {
            "href": "#",
            "image": "http://www1.wfp.org/sites/default/files/images/yemen-hero-min.jpg",
            "subTitle": "Food security and climate change analyses, adaptation planning, and good practices in food security adaptation programming.",
            "title": "The Climate Adaption Mangement and Innovation Initiative",
            "kind": "landscape"
          },
          "argTypes": {
            "href": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": false },
              "name": "href",
              "required": false,
              "description": "The links target",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "image": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": false },
              "name": "image",
              "required": false,
              "description": "An optimized photograph",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "subTitle": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "subTitle",
              "required": false,
              "description": "A short sentence to explain the content of the node (max 180 characters)",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "title": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "title",
              "required": false,
              "description": "A search-friendly title (ideally 50 characters, max 100)",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "kind": {
              "control": {
                "type": "select",
                "options": [
                  "landscape",
                  "landscape-light",
                  "emergencies",
                  "split",
                  "hero",
                  "splash",
                  "splash-image",
                  "splash-compact",
                  "related"
                ]
              },
              "type": {
                "name": "enum",
                "required": true,
                "value": [
                  "landscape",
                  "landscape-light",
                  "emergencies",
                  "split",
                  "hero",
                  "splash",
                  "splash-image",
                  "splash-compact",
                  "related"
                ]
              },
              "name": "kind",
              "required": true,
              "description": "Kind of Card",
              "defaultValue": null,
              "sbType": {
                "name": "enum",
                "value": [
                  "landscape",
                  "landscape-light",
                  "emergencies",
                  "split",
                  "hero",
                  "splash",
                  "splash-image",
                  "splash-compact",
                  "related"
                ]
              },
              "table": {
                "type": {
                  "summary": "'landscape' | 'landscape-light' | 'emergencies' | 'split' | 'hero' | 'splash' | 'splash-image' | 'splash-compact' | 'related'"
                },
                "defaultValue": null
              }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Additional className which will be added",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "isExternal": {
              "control": { "type": "boolean" },
              "name": "isExternal",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "External link flag",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "isLink": {
              "control": { "type": "boolean" },
              "name": "isLink",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Render the Card as link",
              "defaultValue": true,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "true" }
              }
            },
            "metadata": {
              "control": { "type": "text" },
              "name": "metadata",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Additional metadatas",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "more": {
              "control": { "type": "object" },
              "name": "more",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Additional more content",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "url": {
              "control": { "type": "text" },
              "name": "url",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The URL where the content uploaded is located.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "isLink": true,
          "href": "#",
          "image": "http://www1.wfp.org/sites/default/files/images/yemen-hero-min.jpg",
          "subTitle": "Food security and climate change analyses, adaptation planning, and good practices in food security adaptation programming.",
          "title": "The Climate Adaption Mangement and Innovation Initiative",
          "kind": "landscape"
        },
        "argTypes": {
          "href": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": false },
            "name": "href",
            "required": false,
            "description": "The links target",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "image": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": false },
            "name": "image",
            "required": false,
            "description": "An optimized photograph",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "subTitle": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "subTitle",
            "required": false,
            "description": "A short sentence to explain the content of the node (max 180 characters)",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "title": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "title",
            "required": false,
            "description": "A search-friendly title (ideally 50 characters, max 100)",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "kind": {
            "control": {
              "type": "select",
              "options": [
                "landscape",
                "landscape-light",
                "emergencies",
                "split",
                "hero",
                "splash",
                "splash-image",
                "splash-compact",
                "related"
              ]
            },
            "type": {
              "name": "enum",
              "required": true,
              "value": [
                "landscape",
                "landscape-light",
                "emergencies",
                "split",
                "hero",
                "splash",
                "splash-image",
                "splash-compact",
                "related"
              ]
            },
            "name": "kind",
            "required": true,
            "description": "Kind of Card",
            "defaultValue": null,
            "sbType": {
              "name": "enum",
              "value": [
                "landscape",
                "landscape-light",
                "emergencies",
                "split",
                "hero",
                "splash",
                "splash-image",
                "splash-compact",
                "related"
              ]
            },
            "table": {
              "type": {
                "summary": "'landscape' | 'landscape-light' | 'emergencies' | 'split' | 'hero' | 'splash' | 'splash-image' | 'splash-compact' | 'related'"
              },
              "defaultValue": null
            }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Additional className which will be added",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "isExternal": {
            "control": { "type": "boolean" },
            "name": "isExternal",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "External link flag",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "isLink": {
            "control": { "type": "boolean" },
            "name": "isLink",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Render the Card as link",
            "defaultValue": true,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "true" }
            }
          },
          "metadata": {
            "control": { "type": "text" },
            "name": "metadata",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Additional metadatas",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "more": {
            "control": { "type": "object" },
            "name": "more",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Additional more content",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "url": {
            "control": { "type": "text" },
            "name": "url",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The URL where the content uploaded is located.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          }
        },
        "initialArgs": {
          "isLink": true,
          "href": "#",
          "image": "http://www1.wfp.org/sites/default/files/images/yemen-hero-min.jpg",
          "subTitle": "Food security and climate change analyses, adaptation planning, and good practices in food security adaptation programming.",
          "title": "The Climate Adaption Mangement and Innovation Initiative",
          "kind": "landscape"
        }
      },
      "components-card--landscape-light": {
        "id": "components-card--landscape-light",
        "kind": "Components/Card",
        "name": "Landscape Light",
        "story": "Landscape Light",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "A card designed to highlight a link using a landscape photograph and  white-background section below with a title and a subtitle."
          },
          "storySource": { "source": "(args) => <Card {...args} />" },
          "__id": "components-card--landscape-light",
          "args": {
            "href": "#",
            "image": "http://www1.wfp.org/sites/default/files/images/yemen-hero-min.jpg",
            "subTitle": "Food security and climate change analyses, adaptation planning, and good practices in food security adaptation programming.",
            "title": "The Climate Adaption Mangement and Innovation Initiative",
            "kind": "landscape-light"
          },
          "argTypes": {
            "href": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": false },
              "name": "href",
              "required": false,
              "description": "The links target",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "image": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": false },
              "name": "image",
              "required": false,
              "description": "An optimized photograph",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "subTitle": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "subTitle",
              "required": false,
              "description": "A short sentence to explain the content of the node (max 180 characters)",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "title": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "title",
              "required": false,
              "description": "A search-friendly title (ideally 50 characters, max 100)",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "kind": {
              "control": {
                "type": "select",
                "options": [
                  "landscape",
                  "landscape-light",
                  "emergencies",
                  "split",
                  "hero",
                  "splash",
                  "splash-image",
                  "splash-compact",
                  "related"
                ]
              },
              "type": {
                "name": "enum",
                "required": true,
                "value": [
                  "landscape",
                  "landscape-light",
                  "emergencies",
                  "split",
                  "hero",
                  "splash",
                  "splash-image",
                  "splash-compact",
                  "related"
                ]
              },
              "name": "kind",
              "required": true,
              "description": "Kind of Card",
              "defaultValue": null,
              "sbType": {
                "name": "enum",
                "value": [
                  "landscape",
                  "landscape-light",
                  "emergencies",
                  "split",
                  "hero",
                  "splash",
                  "splash-image",
                  "splash-compact",
                  "related"
                ]
              },
              "table": {
                "type": {
                  "summary": "'landscape' | 'landscape-light' | 'emergencies' | 'split' | 'hero' | 'splash' | 'splash-image' | 'splash-compact' | 'related'"
                },
                "defaultValue": null
              }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Additional className which will be added",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "isExternal": {
              "control": { "type": "boolean" },
              "name": "isExternal",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "External link flag",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "isLink": {
              "control": { "type": "boolean" },
              "name": "isLink",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Render the Card as link",
              "defaultValue": true,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "true" }
              }
            },
            "metadata": {
              "control": { "type": "text" },
              "name": "metadata",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Additional metadatas",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "more": {
              "control": { "type": "object" },
              "name": "more",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Additional more content",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "url": {
              "control": { "type": "text" },
              "name": "url",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The URL where the content uploaded is located.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "isLink": true,
          "href": "#",
          "image": "http://www1.wfp.org/sites/default/files/images/yemen-hero-min.jpg",
          "subTitle": "Food security and climate change analyses, adaptation planning, and good practices in food security adaptation programming.",
          "title": "The Climate Adaption Mangement and Innovation Initiative",
          "kind": "landscape-light"
        },
        "argTypes": {
          "href": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": false },
            "name": "href",
            "required": false,
            "description": "The links target",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "image": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": false },
            "name": "image",
            "required": false,
            "description": "An optimized photograph",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "subTitle": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "subTitle",
            "required": false,
            "description": "A short sentence to explain the content of the node (max 180 characters)",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "title": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "title",
            "required": false,
            "description": "A search-friendly title (ideally 50 characters, max 100)",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "kind": {
            "control": {
              "type": "select",
              "options": [
                "landscape",
                "landscape-light",
                "emergencies",
                "split",
                "hero",
                "splash",
                "splash-image",
                "splash-compact",
                "related"
              ]
            },
            "type": {
              "name": "enum",
              "required": true,
              "value": [
                "landscape",
                "landscape-light",
                "emergencies",
                "split",
                "hero",
                "splash",
                "splash-image",
                "splash-compact",
                "related"
              ]
            },
            "name": "kind",
            "required": true,
            "description": "Kind of Card",
            "defaultValue": null,
            "sbType": {
              "name": "enum",
              "value": [
                "landscape",
                "landscape-light",
                "emergencies",
                "split",
                "hero",
                "splash",
                "splash-image",
                "splash-compact",
                "related"
              ]
            },
            "table": {
              "type": {
                "summary": "'landscape' | 'landscape-light' | 'emergencies' | 'split' | 'hero' | 'splash' | 'splash-image' | 'splash-compact' | 'related'"
              },
              "defaultValue": null
            }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Additional className which will be added",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "isExternal": {
            "control": { "type": "boolean" },
            "name": "isExternal",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "External link flag",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "isLink": {
            "control": { "type": "boolean" },
            "name": "isLink",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Render the Card as link",
            "defaultValue": true,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "true" }
            }
          },
          "metadata": {
            "control": { "type": "text" },
            "name": "metadata",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Additional metadatas",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "more": {
            "control": { "type": "object" },
            "name": "more",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Additional more content",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "url": {
            "control": { "type": "text" },
            "name": "url",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The URL where the content uploaded is located.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          }
        },
        "initialArgs": {
          "isLink": true,
          "href": "#",
          "image": "http://www1.wfp.org/sites/default/files/images/yemen-hero-min.jpg",
          "subTitle": "Food security and climate change analyses, adaptation planning, and good practices in food security adaptation programming.",
          "title": "The Climate Adaption Mangement and Innovation Initiative",
          "kind": "landscape-light"
        }
      },
      "components-card--split": {
        "id": "components-card--split",
        "kind": "Components/Card",
        "name": "Split",
        "story": "Split",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "A card of the same dimension of the landscape photo card, but split in half. One half features a landscape photograph, the other half is a white-background section with a title and a subtitle."
          },
          "storySource": { "source": "(args) => <Card {...args} />" },
          "__id": "components-card--split",
          "args": {
            "href": "#",
            "image": "http://www1.wfp.org/sites/default/files/images/yemen-hero-min.jpg",
            "subTitle": "Food security and climate change analyses, adaptation planning, and good practices in food security adaptation programming.",
            "title": "The Climate Adaption Mangement and Innovation Initiative",
            "kind": "split",
            "metadata": "Climate Change, Publication"
          },
          "argTypes": {
            "href": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": false },
              "name": "href",
              "required": false,
              "description": "The links target",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "image": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": false },
              "name": "image",
              "required": false,
              "description": "An optimized photograph",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "subTitle": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "subTitle",
              "required": false,
              "description": "A short sentence to explain the content of the node (max 180 characters)",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "title": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "title",
              "required": false,
              "description": "A search-friendly title (ideally 50 characters, max 100)",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "kind": {
              "control": {
                "type": "select",
                "options": [
                  "landscape",
                  "landscape-light",
                  "emergencies",
                  "split",
                  "hero",
                  "splash",
                  "splash-image",
                  "splash-compact",
                  "related"
                ]
              },
              "type": {
                "name": "enum",
                "required": true,
                "value": [
                  "landscape",
                  "landscape-light",
                  "emergencies",
                  "split",
                  "hero",
                  "splash",
                  "splash-image",
                  "splash-compact",
                  "related"
                ]
              },
              "name": "kind",
              "required": true,
              "description": "Kind of Card",
              "defaultValue": null,
              "sbType": {
                "name": "enum",
                "value": [
                  "landscape",
                  "landscape-light",
                  "emergencies",
                  "split",
                  "hero",
                  "splash",
                  "splash-image",
                  "splash-compact",
                  "related"
                ]
              },
              "table": {
                "type": {
                  "summary": "'landscape' | 'landscape-light' | 'emergencies' | 'split' | 'hero' | 'splash' | 'splash-image' | 'splash-compact' | 'related'"
                },
                "defaultValue": null
              }
            },
            "metadata": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": false },
              "name": "metadata",
              "required": false,
              "description": "Additional metadatas",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Additional className which will be added",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "isExternal": {
              "control": { "type": "boolean" },
              "name": "isExternal",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "External link flag",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "isLink": {
              "control": { "type": "boolean" },
              "name": "isLink",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Render the Card as link",
              "defaultValue": true,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "true" }
              }
            },
            "more": {
              "control": { "type": "object" },
              "name": "more",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Additional more content",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "url": {
              "control": { "type": "text" },
              "name": "url",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The URL where the content uploaded is located.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "isLink": true,
          "href": "#",
          "image": "http://www1.wfp.org/sites/default/files/images/yemen-hero-min.jpg",
          "subTitle": "Food security and climate change analyses, adaptation planning, and good practices in food security adaptation programming.",
          "title": "The Climate Adaption Mangement and Innovation Initiative",
          "kind": "split",
          "metadata": "Climate Change, Publication"
        },
        "argTypes": {
          "href": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": false },
            "name": "href",
            "required": false,
            "description": "The links target",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "image": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": false },
            "name": "image",
            "required": false,
            "description": "An optimized photograph",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "subTitle": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "subTitle",
            "required": false,
            "description": "A short sentence to explain the content of the node (max 180 characters)",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "title": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "title",
            "required": false,
            "description": "A search-friendly title (ideally 50 characters, max 100)",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "kind": {
            "control": {
              "type": "select",
              "options": [
                "landscape",
                "landscape-light",
                "emergencies",
                "split",
                "hero",
                "splash",
                "splash-image",
                "splash-compact",
                "related"
              ]
            },
            "type": {
              "name": "enum",
              "required": true,
              "value": [
                "landscape",
                "landscape-light",
                "emergencies",
                "split",
                "hero",
                "splash",
                "splash-image",
                "splash-compact",
                "related"
              ]
            },
            "name": "kind",
            "required": true,
            "description": "Kind of Card",
            "defaultValue": null,
            "sbType": {
              "name": "enum",
              "value": [
                "landscape",
                "landscape-light",
                "emergencies",
                "split",
                "hero",
                "splash",
                "splash-image",
                "splash-compact",
                "related"
              ]
            },
            "table": {
              "type": {
                "summary": "'landscape' | 'landscape-light' | 'emergencies' | 'split' | 'hero' | 'splash' | 'splash-image' | 'splash-compact' | 'related'"
              },
              "defaultValue": null
            }
          },
          "metadata": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": false },
            "name": "metadata",
            "required": false,
            "description": "Additional metadatas",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Additional className which will be added",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "isExternal": {
            "control": { "type": "boolean" },
            "name": "isExternal",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "External link flag",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "isLink": {
            "control": { "type": "boolean" },
            "name": "isLink",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Render the Card as link",
            "defaultValue": true,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "true" }
            }
          },
          "more": {
            "control": { "type": "object" },
            "name": "more",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Additional more content",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "url": {
            "control": { "type": "text" },
            "name": "url",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The URL where the content uploaded is located.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          }
        },
        "initialArgs": {
          "isLink": true,
          "href": "#",
          "image": "http://www1.wfp.org/sites/default/files/images/yemen-hero-min.jpg",
          "subTitle": "Food security and climate change analyses, adaptation planning, and good practices in food security adaptation programming.",
          "title": "The Climate Adaption Mangement and Innovation Initiative",
          "kind": "split",
          "metadata": "Climate Change, Publication"
        }
      },
      "components-card--hero": {
        "id": "components-card--hero",
        "kind": "Components/Card",
        "name": "Hero",
        "story": "Hero",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "Hero block with title and a background image. It can feature an optional subtitle."
          },
          "storySource": { "source": "(args) => <Card {...args} />" },
          "__id": "components-card--hero",
          "args": {
            "href": "#",
            "image": "http://www1.wfp.org/sites/default/files/images/yemen-hero-min.jpg",
            "subTitle": "Food security and climate change analyses, adaptation planning, and good practices in food security adaptation programming.",
            "title": "The Climate Adaption Mangement and Innovation Initiative",
            "kind": "hero"
          },
          "argTypes": {
            "href": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": false },
              "name": "href",
              "required": false,
              "description": "The links target",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "image": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": false },
              "name": "image",
              "required": false,
              "description": "An optimized photograph",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "subTitle": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "subTitle",
              "required": false,
              "description": "A short sentence to explain the content of the node (max 180 characters)",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "title": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "title",
              "required": false,
              "description": "A search-friendly title (ideally 50 characters, max 100)",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "kind": {
              "control": {
                "type": "select",
                "options": [
                  "landscape",
                  "landscape-light",
                  "emergencies",
                  "split",
                  "hero",
                  "splash",
                  "splash-image",
                  "splash-compact",
                  "related"
                ]
              },
              "type": {
                "name": "enum",
                "required": true,
                "value": [
                  "landscape",
                  "landscape-light",
                  "emergencies",
                  "split",
                  "hero",
                  "splash",
                  "splash-image",
                  "splash-compact",
                  "related"
                ]
              },
              "name": "kind",
              "required": true,
              "description": "Kind of Card",
              "defaultValue": null,
              "sbType": {
                "name": "enum",
                "value": [
                  "landscape",
                  "landscape-light",
                  "emergencies",
                  "split",
                  "hero",
                  "splash",
                  "splash-image",
                  "splash-compact",
                  "related"
                ]
              },
              "table": {
                "type": {
                  "summary": "'landscape' | 'landscape-light' | 'emergencies' | 'split' | 'hero' | 'splash' | 'splash-image' | 'splash-compact' | 'related'"
                },
                "defaultValue": null
              }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Additional className which will be added",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "isExternal": {
              "control": { "type": "boolean" },
              "name": "isExternal",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "External link flag",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "isLink": {
              "control": { "type": "boolean" },
              "name": "isLink",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Render the Card as link",
              "defaultValue": true,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "true" }
              }
            },
            "metadata": {
              "control": { "type": "text" },
              "name": "metadata",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Additional metadatas",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "more": {
              "control": { "type": "object" },
              "name": "more",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Additional more content",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "url": {
              "control": { "type": "text" },
              "name": "url",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The URL where the content uploaded is located.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "isLink": true,
          "href": "#",
          "image": "http://www1.wfp.org/sites/default/files/images/yemen-hero-min.jpg",
          "subTitle": "Food security and climate change analyses, adaptation planning, and good practices in food security adaptation programming.",
          "title": "The Climate Adaption Mangement and Innovation Initiative",
          "kind": "hero"
        },
        "argTypes": {
          "href": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": false },
            "name": "href",
            "required": false,
            "description": "The links target",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "image": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": false },
            "name": "image",
            "required": false,
            "description": "An optimized photograph",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "subTitle": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "subTitle",
            "required": false,
            "description": "A short sentence to explain the content of the node (max 180 characters)",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "title": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "title",
            "required": false,
            "description": "A search-friendly title (ideally 50 characters, max 100)",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "kind": {
            "control": {
              "type": "select",
              "options": [
                "landscape",
                "landscape-light",
                "emergencies",
                "split",
                "hero",
                "splash",
                "splash-image",
                "splash-compact",
                "related"
              ]
            },
            "type": {
              "name": "enum",
              "required": true,
              "value": [
                "landscape",
                "landscape-light",
                "emergencies",
                "split",
                "hero",
                "splash",
                "splash-image",
                "splash-compact",
                "related"
              ]
            },
            "name": "kind",
            "required": true,
            "description": "Kind of Card",
            "defaultValue": null,
            "sbType": {
              "name": "enum",
              "value": [
                "landscape",
                "landscape-light",
                "emergencies",
                "split",
                "hero",
                "splash",
                "splash-image",
                "splash-compact",
                "related"
              ]
            },
            "table": {
              "type": {
                "summary": "'landscape' | 'landscape-light' | 'emergencies' | 'split' | 'hero' | 'splash' | 'splash-image' | 'splash-compact' | 'related'"
              },
              "defaultValue": null
            }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Additional className which will be added",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "isExternal": {
            "control": { "type": "boolean" },
            "name": "isExternal",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "External link flag",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "isLink": {
            "control": { "type": "boolean" },
            "name": "isLink",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Render the Card as link",
            "defaultValue": true,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "true" }
            }
          },
          "metadata": {
            "control": { "type": "text" },
            "name": "metadata",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Additional metadatas",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "more": {
            "control": { "type": "object" },
            "name": "more",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Additional more content",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "url": {
            "control": { "type": "text" },
            "name": "url",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The URL where the content uploaded is located.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          }
        },
        "initialArgs": {
          "isLink": true,
          "href": "#",
          "image": "http://www1.wfp.org/sites/default/files/images/yemen-hero-min.jpg",
          "subTitle": "Food security and climate change analyses, adaptation planning, and good practices in food security adaptation programming.",
          "title": "The Climate Adaption Mangement and Innovation Initiative",
          "kind": "hero"
        }
      },
      "components-card--splash": {
        "id": "components-card--splash",
        "kind": "Components/Card",
        "name": "Splash",
        "story": "Splash",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": { "storyDescription": "Page middle content section." },
          "storySource": { "source": "(args) => <Card {...args} />" },
          "__id": "components-card--splash",
          "args": {
            "href": "#",
            "subTitle": {
              "key": null,
              "ref": null,
              "props": {
                "children": [
                  {
                    "type": "div",
                    "key": null,
                    "ref": null,
                    "props": {
                      "style": { "marginBottom": "1rem" },
                      "children": "Cras dapibus. Aenean ut eros et nisl sagittis vestibulum. Fusce risus nisl, viverra et, tempor et, pretium in."
                    },
                    "_owner": null,
                    "_store": {}
                  },
                  {
                    "key": null,
                    "ref": null,
                    "props": {
                      "kind": "inverse",
                      "children": "Read more",
                      "iconReverse": false,
                      "iconDescription": "Provide icon description if icon is used",
                      "tabIndex": 0,
                      "type": "button",
                      "disabled": false,
                      "small": false
                    },
                    "_owner": null,
                    "_store": {}
                  }
                ]
              },
              "_owner": null,
              "_store": {}
            },
            "title": "The Climate Adaption Mangement and Innovation Initiative",
            "kind": "splash"
          },
          "argTypes": {
            "href": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": false },
              "name": "href",
              "required": false,
              "description": "The links target",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "image": {
              "control": { "type": "text" },
              "name": "image",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "An optimized photograph",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "subTitle": {
              "control": { "type": "object" },
              "type": { "name": "other", "value": "node", "required": false },
              "name": "subTitle",
              "required": false,
              "description": "A short sentence to explain the content of the node (max 180 characters)",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "title": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "title",
              "required": false,
              "description": "A search-friendly title (ideally 50 characters, max 100)",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "kind": {
              "control": {
                "type": "select",
                "options": [
                  "landscape",
                  "landscape-light",
                  "emergencies",
                  "split",
                  "hero",
                  "splash",
                  "splash-image",
                  "splash-compact",
                  "related"
                ]
              },
              "type": {
                "name": "enum",
                "required": true,
                "value": [
                  "landscape",
                  "landscape-light",
                  "emergencies",
                  "split",
                  "hero",
                  "splash",
                  "splash-image",
                  "splash-compact",
                  "related"
                ]
              },
              "name": "kind",
              "required": true,
              "description": "Kind of Card",
              "defaultValue": null,
              "sbType": {
                "name": "enum",
                "value": [
                  "landscape",
                  "landscape-light",
                  "emergencies",
                  "split",
                  "hero",
                  "splash",
                  "splash-image",
                  "splash-compact",
                  "related"
                ]
              },
              "table": {
                "type": {
                  "summary": "'landscape' | 'landscape-light' | 'emergencies' | 'split' | 'hero' | 'splash' | 'splash-image' | 'splash-compact' | 'related'"
                },
                "defaultValue": null
              }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Additional className which will be added",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "isExternal": {
              "control": { "type": "boolean" },
              "name": "isExternal",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "External link flag",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "isLink": {
              "control": { "type": "boolean" },
              "name": "isLink",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Render the Card as link",
              "defaultValue": true,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "true" }
              }
            },
            "metadata": {
              "control": { "type": "text" },
              "name": "metadata",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Additional metadatas",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "more": {
              "control": { "type": "object" },
              "name": "more",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Additional more content",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "url": {
              "control": { "type": "text" },
              "name": "url",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The URL where the content uploaded is located.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "isLink": true,
          "href": "#",
          "subTitle": {
            "key": null,
            "ref": null,
            "props": {
              "children": [
                {
                  "type": "div",
                  "key": null,
                  "ref": null,
                  "props": {
                    "style": { "marginBottom": "1rem" },
                    "children": "Cras dapibus. Aenean ut eros et nisl sagittis vestibulum. Fusce risus nisl, viverra et, tempor et, pretium in."
                  },
                  "_owner": null,
                  "_store": {}
                },
                {
                  "key": null,
                  "ref": null,
                  "props": {
                    "kind": "inverse",
                    "children": "Read more",
                    "iconReverse": false,
                    "iconDescription": "Provide icon description if icon is used",
                    "tabIndex": 0,
                    "type": "button",
                    "disabled": false,
                    "small": false
                  },
                  "_owner": null,
                  "_store": {}
                }
              ]
            },
            "_owner": null,
            "_store": {}
          },
          "title": "The Climate Adaption Mangement and Innovation Initiative",
          "kind": "splash"
        },
        "argTypes": {
          "href": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": false },
            "name": "href",
            "required": false,
            "description": "The links target",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "image": {
            "control": { "type": "text" },
            "name": "image",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "An optimized photograph",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "subTitle": {
            "control": { "type": "object" },
            "type": { "name": "other", "value": "node", "required": false },
            "name": "subTitle",
            "required": false,
            "description": "A short sentence to explain the content of the node (max 180 characters)",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "title": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "title",
            "required": false,
            "description": "A search-friendly title (ideally 50 characters, max 100)",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "kind": {
            "control": {
              "type": "select",
              "options": [
                "landscape",
                "landscape-light",
                "emergencies",
                "split",
                "hero",
                "splash",
                "splash-image",
                "splash-compact",
                "related"
              ]
            },
            "type": {
              "name": "enum",
              "required": true,
              "value": [
                "landscape",
                "landscape-light",
                "emergencies",
                "split",
                "hero",
                "splash",
                "splash-image",
                "splash-compact",
                "related"
              ]
            },
            "name": "kind",
            "required": true,
            "description": "Kind of Card",
            "defaultValue": null,
            "sbType": {
              "name": "enum",
              "value": [
                "landscape",
                "landscape-light",
                "emergencies",
                "split",
                "hero",
                "splash",
                "splash-image",
                "splash-compact",
                "related"
              ]
            },
            "table": {
              "type": {
                "summary": "'landscape' | 'landscape-light' | 'emergencies' | 'split' | 'hero' | 'splash' | 'splash-image' | 'splash-compact' | 'related'"
              },
              "defaultValue": null
            }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Additional className which will be added",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "isExternal": {
            "control": { "type": "boolean" },
            "name": "isExternal",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "External link flag",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "isLink": {
            "control": { "type": "boolean" },
            "name": "isLink",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Render the Card as link",
            "defaultValue": true,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "true" }
            }
          },
          "metadata": {
            "control": { "type": "text" },
            "name": "metadata",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Additional metadatas",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "more": {
            "control": { "type": "object" },
            "name": "more",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Additional more content",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "url": {
            "control": { "type": "text" },
            "name": "url",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The URL where the content uploaded is located.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          }
        },
        "initialArgs": {
          "isLink": true,
          "href": "#",
          "subTitle": {
            "key": null,
            "ref": null,
            "props": {
              "children": [
                {
                  "type": "div",
                  "key": null,
                  "ref": null,
                  "props": {
                    "style": { "marginBottom": "1rem" },
                    "children": "Cras dapibus. Aenean ut eros et nisl sagittis vestibulum. Fusce risus nisl, viverra et, tempor et, pretium in."
                  },
                  "_owner": null,
                  "_store": {}
                },
                {
                  "key": null,
                  "ref": null,
                  "props": {
                    "kind": "inverse",
                    "children": "Read more",
                    "iconReverse": false,
                    "iconDescription": "Provide icon description if icon is used",
                    "tabIndex": 0,
                    "type": "button",
                    "disabled": false,
                    "small": false
                  },
                  "_owner": null,
                  "_store": {}
                }
              ]
            },
            "_owner": null,
            "_store": {}
          },
          "title": "The Climate Adaption Mangement and Innovation Initiative",
          "kind": "splash"
        }
      },
      "components-card--splash-image": {
        "id": "components-card--splash-image",
        "kind": "Components/Card",
        "name": "Splash Image",
        "story": "Splash Image",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "Page middle content section with background image."
          },
          "storySource": { "source": "(args) => <Card {...args} />" },
          "__id": "components-card--splash-image",
          "args": {
            "href": "#",
            "image": "http://www1.wfp.org/sites/default/files/images/yemen-hero-min.jpg",
            "subTitle": "Food security and climate change analyses, adaptation planning, and good practices in food security adaptation programming.",
            "title": "The Climate Adaption Mangement and Innovation Initiative",
            "kind": "splash-image"
          },
          "argTypes": {
            "href": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": false },
              "name": "href",
              "required": false,
              "description": "The links target",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "image": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": false },
              "name": "image",
              "required": false,
              "description": "An optimized photograph",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "subTitle": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "subTitle",
              "required": false,
              "description": "A short sentence to explain the content of the node (max 180 characters)",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "title": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "title",
              "required": false,
              "description": "A search-friendly title (ideally 50 characters, max 100)",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "kind": {
              "control": {
                "type": "select",
                "options": [
                  "landscape",
                  "landscape-light",
                  "emergencies",
                  "split",
                  "hero",
                  "splash",
                  "splash-image",
                  "splash-compact",
                  "related"
                ]
              },
              "type": {
                "name": "enum",
                "required": true,
                "value": [
                  "landscape",
                  "landscape-light",
                  "emergencies",
                  "split",
                  "hero",
                  "splash",
                  "splash-image",
                  "splash-compact",
                  "related"
                ]
              },
              "name": "kind",
              "required": true,
              "description": "Kind of Card",
              "defaultValue": null,
              "sbType": {
                "name": "enum",
                "value": [
                  "landscape",
                  "landscape-light",
                  "emergencies",
                  "split",
                  "hero",
                  "splash",
                  "splash-image",
                  "splash-compact",
                  "related"
                ]
              },
              "table": {
                "type": {
                  "summary": "'landscape' | 'landscape-light' | 'emergencies' | 'split' | 'hero' | 'splash' | 'splash-image' | 'splash-compact' | 'related'"
                },
                "defaultValue": null
              }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Additional className which will be added",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "isExternal": {
              "control": { "type": "boolean" },
              "name": "isExternal",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "External link flag",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "isLink": {
              "control": { "type": "boolean" },
              "name": "isLink",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Render the Card as link",
              "defaultValue": true,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "true" }
              }
            },
            "metadata": {
              "control": { "type": "text" },
              "name": "metadata",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Additional metadatas",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "more": {
              "control": { "type": "object" },
              "name": "more",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Additional more content",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "url": {
              "control": { "type": "text" },
              "name": "url",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The URL where the content uploaded is located.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "isLink": true,
          "href": "#",
          "image": "http://www1.wfp.org/sites/default/files/images/yemen-hero-min.jpg",
          "subTitle": "Food security and climate change analyses, adaptation planning, and good practices in food security adaptation programming.",
          "title": "The Climate Adaption Mangement and Innovation Initiative",
          "kind": "splash-image"
        },
        "argTypes": {
          "href": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": false },
            "name": "href",
            "required": false,
            "description": "The links target",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "image": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": false },
            "name": "image",
            "required": false,
            "description": "An optimized photograph",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "subTitle": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "subTitle",
            "required": false,
            "description": "A short sentence to explain the content of the node (max 180 characters)",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "title": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "title",
            "required": false,
            "description": "A search-friendly title (ideally 50 characters, max 100)",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "kind": {
            "control": {
              "type": "select",
              "options": [
                "landscape",
                "landscape-light",
                "emergencies",
                "split",
                "hero",
                "splash",
                "splash-image",
                "splash-compact",
                "related"
              ]
            },
            "type": {
              "name": "enum",
              "required": true,
              "value": [
                "landscape",
                "landscape-light",
                "emergencies",
                "split",
                "hero",
                "splash",
                "splash-image",
                "splash-compact",
                "related"
              ]
            },
            "name": "kind",
            "required": true,
            "description": "Kind of Card",
            "defaultValue": null,
            "sbType": {
              "name": "enum",
              "value": [
                "landscape",
                "landscape-light",
                "emergencies",
                "split",
                "hero",
                "splash",
                "splash-image",
                "splash-compact",
                "related"
              ]
            },
            "table": {
              "type": {
                "summary": "'landscape' | 'landscape-light' | 'emergencies' | 'split' | 'hero' | 'splash' | 'splash-image' | 'splash-compact' | 'related'"
              },
              "defaultValue": null
            }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Additional className which will be added",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "isExternal": {
            "control": { "type": "boolean" },
            "name": "isExternal",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "External link flag",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "isLink": {
            "control": { "type": "boolean" },
            "name": "isLink",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Render the Card as link",
            "defaultValue": true,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "true" }
            }
          },
          "metadata": {
            "control": { "type": "text" },
            "name": "metadata",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Additional metadatas",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "more": {
            "control": { "type": "object" },
            "name": "more",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Additional more content",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "url": {
            "control": { "type": "text" },
            "name": "url",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The URL where the content uploaded is located.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          }
        },
        "initialArgs": {
          "isLink": true,
          "href": "#",
          "image": "http://www1.wfp.org/sites/default/files/images/yemen-hero-min.jpg",
          "subTitle": "Food security and climate change analyses, adaptation planning, and good practices in food security adaptation programming.",
          "title": "The Climate Adaption Mangement and Innovation Initiative",
          "kind": "splash-image"
        }
      },
      "components-card--splash-compact": {
        "id": "components-card--splash-compact",
        "kind": "Components/Card",
        "name": "Splash Compact",
        "story": "Splash Compact",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "A card content section without space around title and subtitle."
          },
          "storySource": { "source": "(args) => <Card {...args} />" },
          "__id": "components-card--splash-compact",
          "args": {
            "href": "#",
            "title": {
              "key": null,
              "ref": null,
              "props": {
                "children": [
                  {
                    "type": "span",
                    "key": null,
                    "ref": null,
                    "props": {
                      "style": { "marginRight": "1rem" },
                      "children": "Nulla consequat massa quis enim"
                    },
                    "_owner": null,
                    "_store": {}
                  },
                  {
                    "key": null,
                    "ref": null,
                    "props": {
                      "kind": "inverse--primary",
                      "children": "Read more",
                      "iconReverse": false,
                      "iconDescription": "Provide icon description if icon is used",
                      "tabIndex": 0,
                      "type": "button",
                      "disabled": false,
                      "small": false
                    },
                    "_owner": null,
                    "_store": {}
                  }
                ]
              },
              "_owner": null,
              "_store": {}
            },
            "kind": "splash-compact"
          },
          "argTypes": {
            "href": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": false },
              "name": "href",
              "required": false,
              "description": "The links target",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "image": {
              "control": { "type": "text" },
              "name": "image",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "An optimized photograph",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "subTitle": {
              "control": { "type": "object" },
              "name": "subTitle",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "A short sentence to explain the content of the node (max 180 characters)",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "title": {
              "control": { "type": "object" },
              "type": { "name": "other", "value": "node", "required": false },
              "name": "title",
              "required": false,
              "description": "A search-friendly title (ideally 50 characters, max 100)",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "kind": {
              "control": {
                "type": "select",
                "options": [
                  "landscape",
                  "landscape-light",
                  "emergencies",
                  "split",
                  "hero",
                  "splash",
                  "splash-image",
                  "splash-compact",
                  "related"
                ]
              },
              "type": {
                "name": "enum",
                "required": true,
                "value": [
                  "landscape",
                  "landscape-light",
                  "emergencies",
                  "split",
                  "hero",
                  "splash",
                  "splash-image",
                  "splash-compact",
                  "related"
                ]
              },
              "name": "kind",
              "required": true,
              "description": "Kind of Card",
              "defaultValue": null,
              "sbType": {
                "name": "enum",
                "value": [
                  "landscape",
                  "landscape-light",
                  "emergencies",
                  "split",
                  "hero",
                  "splash",
                  "splash-image",
                  "splash-compact",
                  "related"
                ]
              },
              "table": {
                "type": {
                  "summary": "'landscape' | 'landscape-light' | 'emergencies' | 'split' | 'hero' | 'splash' | 'splash-image' | 'splash-compact' | 'related'"
                },
                "defaultValue": null
              }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Additional className which will be added",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "isExternal": {
              "control": { "type": "boolean" },
              "name": "isExternal",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "External link flag",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "isLink": {
              "control": { "type": "boolean" },
              "name": "isLink",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Render the Card as link",
              "defaultValue": true,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "true" }
              }
            },
            "metadata": {
              "control": { "type": "text" },
              "name": "metadata",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Additional metadatas",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "more": {
              "control": { "type": "object" },
              "name": "more",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Additional more content",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "url": {
              "control": { "type": "text" },
              "name": "url",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The URL where the content uploaded is located.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "isLink": true,
          "href": "#",
          "title": {
            "key": null,
            "ref": null,
            "props": {
              "children": [
                {
                  "type": "span",
                  "key": null,
                  "ref": null,
                  "props": {
                    "style": { "marginRight": "1rem" },
                    "children": "Nulla consequat massa quis enim"
                  },
                  "_owner": null,
                  "_store": {}
                },
                {
                  "key": null,
                  "ref": null,
                  "props": {
                    "kind": "inverse--primary",
                    "children": "Read more",
                    "iconReverse": false,
                    "iconDescription": "Provide icon description if icon is used",
                    "tabIndex": 0,
                    "type": "button",
                    "disabled": false,
                    "small": false
                  },
                  "_owner": null,
                  "_store": {}
                }
              ]
            },
            "_owner": null,
            "_store": {}
          },
          "kind": "splash-compact"
        },
        "argTypes": {
          "href": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": false },
            "name": "href",
            "required": false,
            "description": "The links target",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "image": {
            "control": { "type": "text" },
            "name": "image",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "An optimized photograph",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "subTitle": {
            "control": { "type": "object" },
            "name": "subTitle",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "A short sentence to explain the content of the node (max 180 characters)",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "title": {
            "control": { "type": "object" },
            "type": { "name": "other", "value": "node", "required": false },
            "name": "title",
            "required": false,
            "description": "A search-friendly title (ideally 50 characters, max 100)",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "kind": {
            "control": {
              "type": "select",
              "options": [
                "landscape",
                "landscape-light",
                "emergencies",
                "split",
                "hero",
                "splash",
                "splash-image",
                "splash-compact",
                "related"
              ]
            },
            "type": {
              "name": "enum",
              "required": true,
              "value": [
                "landscape",
                "landscape-light",
                "emergencies",
                "split",
                "hero",
                "splash",
                "splash-image",
                "splash-compact",
                "related"
              ]
            },
            "name": "kind",
            "required": true,
            "description": "Kind of Card",
            "defaultValue": null,
            "sbType": {
              "name": "enum",
              "value": [
                "landscape",
                "landscape-light",
                "emergencies",
                "split",
                "hero",
                "splash",
                "splash-image",
                "splash-compact",
                "related"
              ]
            },
            "table": {
              "type": {
                "summary": "'landscape' | 'landscape-light' | 'emergencies' | 'split' | 'hero' | 'splash' | 'splash-image' | 'splash-compact' | 'related'"
              },
              "defaultValue": null
            }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Additional className which will be added",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "isExternal": {
            "control": { "type": "boolean" },
            "name": "isExternal",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "External link flag",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "isLink": {
            "control": { "type": "boolean" },
            "name": "isLink",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Render the Card as link",
            "defaultValue": true,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "true" }
            }
          },
          "metadata": {
            "control": { "type": "text" },
            "name": "metadata",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Additional metadatas",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "more": {
            "control": { "type": "object" },
            "name": "more",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Additional more content",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "url": {
            "control": { "type": "text" },
            "name": "url",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The URL where the content uploaded is located.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          }
        },
        "initialArgs": {
          "isLink": true,
          "href": "#",
          "title": {
            "key": null,
            "ref": null,
            "props": {
              "children": [
                {
                  "type": "span",
                  "key": null,
                  "ref": null,
                  "props": {
                    "style": { "marginRight": "1rem" },
                    "children": "Nulla consequat massa quis enim"
                  },
                  "_owner": null,
                  "_store": {}
                },
                {
                  "key": null,
                  "ref": null,
                  "props": {
                    "kind": "inverse--primary",
                    "children": "Read more",
                    "iconReverse": false,
                    "iconDescription": "Provide icon description if icon is used",
                    "tabIndex": 0,
                    "type": "button",
                    "disabled": false,
                    "small": false
                  },
                  "_owner": null,
                  "_store": {}
                }
              ]
            },
            "_owner": null,
            "_store": {}
          },
          "kind": "splash-compact"
        }
      },
      "components-card--related": {
        "id": "components-card--related",
        "kind": "Components/Card",
        "name": "Related",
        "story": "Related",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "A card designed with landscape photograph and a title with metadata on right side."
          },
          "storySource": { "source": "(args) => <Card {...args} />" },
          "__id": "components-card--related",
          "args": {
            "href": "#",
            "image": "http://www1.wfp.org/sites/default/files/images/yemen-hero-min.jpg",
            "subTitle": "Food security and climate change analyses, adaptation planning, and good practices in food security adaptation programming.",
            "title": "The Climate Adaption Mangement and Innovation Initiative",
            "kind": "related",
            "metadata": "Climate Change, Publication"
          },
          "argTypes": {
            "href": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": false },
              "name": "href",
              "required": false,
              "description": "The links target",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "image": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": false },
              "name": "image",
              "required": false,
              "description": "An optimized photograph",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "subTitle": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "subTitle",
              "required": false,
              "description": "A short sentence to explain the content of the node (max 180 characters)",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "title": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "title",
              "required": false,
              "description": "A search-friendly title (ideally 50 characters, max 100)",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "kind": {
              "control": {
                "type": "select",
                "options": [
                  "landscape",
                  "landscape-light",
                  "emergencies",
                  "split",
                  "hero",
                  "splash",
                  "splash-image",
                  "splash-compact",
                  "related"
                ]
              },
              "type": {
                "name": "enum",
                "required": true,
                "value": [
                  "landscape",
                  "landscape-light",
                  "emergencies",
                  "split",
                  "hero",
                  "splash",
                  "splash-image",
                  "splash-compact",
                  "related"
                ]
              },
              "name": "kind",
              "required": true,
              "description": "Kind of Card",
              "defaultValue": null,
              "sbType": {
                "name": "enum",
                "value": [
                  "landscape",
                  "landscape-light",
                  "emergencies",
                  "split",
                  "hero",
                  "splash",
                  "splash-image",
                  "splash-compact",
                  "related"
                ]
              },
              "table": {
                "type": {
                  "summary": "'landscape' | 'landscape-light' | 'emergencies' | 'split' | 'hero' | 'splash' | 'splash-image' | 'splash-compact' | 'related'"
                },
                "defaultValue": null
              }
            },
            "metadata": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": false },
              "name": "metadata",
              "required": false,
              "description": "Additional metadatas",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Additional className which will be added",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "isExternal": {
              "control": { "type": "boolean" },
              "name": "isExternal",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "External link flag",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "isLink": {
              "control": { "type": "boolean" },
              "name": "isLink",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Render the Card as link",
              "defaultValue": true,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "true" }
              }
            },
            "more": {
              "control": { "type": "object" },
              "name": "more",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Additional more content",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "url": {
              "control": { "type": "text" },
              "name": "url",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The URL where the content uploaded is located.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "isLink": true,
          "href": "#",
          "image": "http://www1.wfp.org/sites/default/files/images/yemen-hero-min.jpg",
          "subTitle": "Food security and climate change analyses, adaptation planning, and good practices in food security adaptation programming.",
          "title": "The Climate Adaption Mangement and Innovation Initiative",
          "kind": "related",
          "metadata": "Climate Change, Publication"
        },
        "argTypes": {
          "href": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": false },
            "name": "href",
            "required": false,
            "description": "The links target",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "image": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": false },
            "name": "image",
            "required": false,
            "description": "An optimized photograph",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "subTitle": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "subTitle",
            "required": false,
            "description": "A short sentence to explain the content of the node (max 180 characters)",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "title": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "title",
            "required": false,
            "description": "A search-friendly title (ideally 50 characters, max 100)",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "kind": {
            "control": {
              "type": "select",
              "options": [
                "landscape",
                "landscape-light",
                "emergencies",
                "split",
                "hero",
                "splash",
                "splash-image",
                "splash-compact",
                "related"
              ]
            },
            "type": {
              "name": "enum",
              "required": true,
              "value": [
                "landscape",
                "landscape-light",
                "emergencies",
                "split",
                "hero",
                "splash",
                "splash-image",
                "splash-compact",
                "related"
              ]
            },
            "name": "kind",
            "required": true,
            "description": "Kind of Card",
            "defaultValue": null,
            "sbType": {
              "name": "enum",
              "value": [
                "landscape",
                "landscape-light",
                "emergencies",
                "split",
                "hero",
                "splash",
                "splash-image",
                "splash-compact",
                "related"
              ]
            },
            "table": {
              "type": {
                "summary": "'landscape' | 'landscape-light' | 'emergencies' | 'split' | 'hero' | 'splash' | 'splash-image' | 'splash-compact' | 'related'"
              },
              "defaultValue": null
            }
          },
          "metadata": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": false },
            "name": "metadata",
            "required": false,
            "description": "Additional metadatas",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Additional className which will be added",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "isExternal": {
            "control": { "type": "boolean" },
            "name": "isExternal",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "External link flag",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "isLink": {
            "control": { "type": "boolean" },
            "name": "isLink",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Render the Card as link",
            "defaultValue": true,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "true" }
            }
          },
          "more": {
            "control": { "type": "object" },
            "name": "more",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Additional more content",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "url": {
            "control": { "type": "text" },
            "name": "url",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The URL where the content uploaded is located.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          }
        },
        "initialArgs": {
          "isLink": true,
          "href": "#",
          "image": "http://www1.wfp.org/sites/default/files/images/yemen-hero-min.jpg",
          "subTitle": "Food security and climate change analyses, adaptation planning, and good practices in food security adaptation programming.",
          "title": "The Climate Adaption Mangement and Innovation Initiative",
          "kind": "related",
          "metadata": "Climate Change, Publication"
        }
      },
      "components-card--emergencies": {
        "id": "components-card--emergencies",
        "kind": "Components/Card",
        "name": "Emergencies",
        "story": "Emergencies",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "A global card for highlighting important events, such as emergencies."
          },
          "storySource": { "source": "(args) => <Card {...args} />" },
          "__id": "components-card--emergencies",
          "args": {
            "href": "#",
            "title": {
              "key": null,
              "ref": null,
              "props": {
                "children": [
                  {
                    "key": null,
                    "ref": null,
                    "props": {
                      "icon": {
                        "id": "icon--wfp-hum--emergency-response-pos",
                        "name": "icon--wfp-hum--emergency-response-pos",
                        "tags": "icon--wfp-hum--emergency-response-pos",
                        "styles": "",
                        "viewBox": "0 0 29 45",
                        "width": "29",
                        "height": "45",
                        "svgData": {
                          "circles": "",
                          "ellipses": "",
                          "paths": [
                            {
                              "d": "M14.4.6C6.5.6 0 7 0 15h28.7C28.7 7 22.3.6 14.4.6zm6.3 35.5h-.4v1.3h.3c.2 0 .4-.1.6-.2.1-.1.2-.3.2-.6s-.2-.5-.7-.5z"
                            },
                            {
                              "fill-rule": "nonzero",
                              "d": "M24.8 31H4c-.5 0-.8.4-.8.8v11.8c0 .5.4.8.8.8h20.8c.5 0 .8-.4.8-.8V31.8c0-.5-.4-.8-.8-.8zm-12.2 9.7h-1.9l-.6-2.5c0-.1-.1-.3-.1-.6s-.1-.6-.1-.8c0 .2-.1.4-.1.6 0 .3-.1.5-.1.7 0 .2-.2 1.1-.6 2.6H7.2l-1.4-5.8h1.5l.6 2.9c.1.6.2 1.2.3 1.5 0-.3.1-.6.2-1.1.1-.5.2-.9.3-1.2l.5-2.2h1.5l.5 2.2.3 1.2c.1.5.1.8.2 1 0-.3.1-.8.3-1.5l.6-2.9H14l-1.4 5.9zm5.6-4.6h-1.9v1.1H18v1.3h-1.8v2.2h-1.6v-5.8h3.5v1.2h.1zm4.2 2.1c-.4.4-.9.5-1.6.5h-.4v1.9h-1.6v-5.8h2c.7 0 1.3.2 1.7.5.4.3.6.8.6 1.4-.1.6-.3 1.1-.7 1.5z"
                            },
                            {
                              "d": "M24 17l-9.7 9.3L4.7 17c-.5-.5-1.3-.5-1.8 0s-.5 1.3 0 1.8l10.5 10.1c.1.1.2.2.4.2.1.1.3.1.4.1.2 0 .3 0 .4-.1.1-.1.3-.1.4-.2l10.5-10.1c.5-.5.5-1.3 0-1.8-.2-.5-1-.5-1.5 0z"
                            }
                          ],
                          "polygons": "",
                          "polylines": "",
                          "rects": ""
                        }
                      },
                      "fill": "#FFF",
                      "style": { "marginRight": "1rem" },
                      "fillRule": "evenodd",
                      "role": "img",
                      "description": "Provide a description that will be used as the title"
                    },
                    "_owner": null,
                    "_store": {}
                  },
                  {
                    "type": "span",
                    "key": null,
                    "ref": null,
                    "props": {
                      "children": [
                        "Curabitur ullamcorper ultricies nisi. Proin magna.",
                        " ",
                        {
                          "type": "a",
                          "key": null,
                          "ref": null,
                          "props": {
                            "href": "#",
                            "children": "Etiam iaculis nunc ac metus"
                          },
                          "_owner": null,
                          "_store": {}
                        }
                      ]
                    },
                    "_owner": null,
                    "_store": {}
                  }
                ]
              },
              "_owner": null,
              "_store": {}
            },
            "kind": "emergencies"
          },
          "argTypes": {
            "href": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": false },
              "name": "href",
              "required": false,
              "description": "The links target",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "image": {
              "control": { "type": "text" },
              "name": "image",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "An optimized photograph",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "subTitle": {
              "control": { "type": "object" },
              "name": "subTitle",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "A short sentence to explain the content of the node (max 180 characters)",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "title": {
              "control": { "type": "object" },
              "type": { "name": "other", "value": "node", "required": false },
              "name": "title",
              "required": false,
              "description": "A search-friendly title (ideally 50 characters, max 100)",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "kind": {
              "control": {
                "type": "select",
                "options": [
                  "landscape",
                  "landscape-light",
                  "emergencies",
                  "split",
                  "hero",
                  "splash",
                  "splash-image",
                  "splash-compact",
                  "related"
                ]
              },
              "type": {
                "name": "enum",
                "required": true,
                "value": [
                  "landscape",
                  "landscape-light",
                  "emergencies",
                  "split",
                  "hero",
                  "splash",
                  "splash-image",
                  "splash-compact",
                  "related"
                ]
              },
              "name": "kind",
              "required": true,
              "description": "Kind of Card",
              "defaultValue": null,
              "sbType": {
                "name": "enum",
                "value": [
                  "landscape",
                  "landscape-light",
                  "emergencies",
                  "split",
                  "hero",
                  "splash",
                  "splash-image",
                  "splash-compact",
                  "related"
                ]
              },
              "table": {
                "type": {
                  "summary": "'landscape' | 'landscape-light' | 'emergencies' | 'split' | 'hero' | 'splash' | 'splash-image' | 'splash-compact' | 'related'"
                },
                "defaultValue": null
              }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Additional className which will be added",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "isExternal": {
              "control": { "type": "boolean" },
              "name": "isExternal",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "External link flag",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "isLink": {
              "control": { "type": "boolean" },
              "name": "isLink",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Render the Card as link",
              "defaultValue": true,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "true" }
              }
            },
            "metadata": {
              "control": { "type": "text" },
              "name": "metadata",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Additional metadatas",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "more": {
              "control": { "type": "object" },
              "name": "more",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Additional more content",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "url": {
              "control": { "type": "text" },
              "name": "url",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The URL where the content uploaded is located.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "isLink": true,
          "href": "#",
          "title": {
            "key": null,
            "ref": null,
            "props": {
              "children": [
                {
                  "key": null,
                  "ref": null,
                  "props": {
                    "icon": {
                      "id": "icon--wfp-hum--emergency-response-pos",
                      "name": "icon--wfp-hum--emergency-response-pos",
                      "tags": "icon--wfp-hum--emergency-response-pos",
                      "styles": "",
                      "viewBox": "0 0 29 45",
                      "width": "29",
                      "height": "45",
                      "svgData": {
                        "circles": "",
                        "ellipses": "",
                        "paths": [
                          {
                            "d": "M14.4.6C6.5.6 0 7 0 15h28.7C28.7 7 22.3.6 14.4.6zm6.3 35.5h-.4v1.3h.3c.2 0 .4-.1.6-.2.1-.1.2-.3.2-.6s-.2-.5-.7-.5z"
                          },
                          {
                            "fill-rule": "nonzero",
                            "d": "M24.8 31H4c-.5 0-.8.4-.8.8v11.8c0 .5.4.8.8.8h20.8c.5 0 .8-.4.8-.8V31.8c0-.5-.4-.8-.8-.8zm-12.2 9.7h-1.9l-.6-2.5c0-.1-.1-.3-.1-.6s-.1-.6-.1-.8c0 .2-.1.4-.1.6 0 .3-.1.5-.1.7 0 .2-.2 1.1-.6 2.6H7.2l-1.4-5.8h1.5l.6 2.9c.1.6.2 1.2.3 1.5 0-.3.1-.6.2-1.1.1-.5.2-.9.3-1.2l.5-2.2h1.5l.5 2.2.3 1.2c.1.5.1.8.2 1 0-.3.1-.8.3-1.5l.6-2.9H14l-1.4 5.9zm5.6-4.6h-1.9v1.1H18v1.3h-1.8v2.2h-1.6v-5.8h3.5v1.2h.1zm4.2 2.1c-.4.4-.9.5-1.6.5h-.4v1.9h-1.6v-5.8h2c.7 0 1.3.2 1.7.5.4.3.6.8.6 1.4-.1.6-.3 1.1-.7 1.5z"
                          },
                          {
                            "d": "M24 17l-9.7 9.3L4.7 17c-.5-.5-1.3-.5-1.8 0s-.5 1.3 0 1.8l10.5 10.1c.1.1.2.2.4.2.1.1.3.1.4.1.2 0 .3 0 .4-.1.1-.1.3-.1.4-.2l10.5-10.1c.5-.5.5-1.3 0-1.8-.2-.5-1-.5-1.5 0z"
                          }
                        ],
                        "polygons": "",
                        "polylines": "",
                        "rects": ""
                      }
                    },
                    "fill": "#FFF",
                    "style": { "marginRight": "1rem" },
                    "fillRule": "evenodd",
                    "role": "img",
                    "description": "Provide a description that will be used as the title"
                  },
                  "_owner": null,
                  "_store": {}
                },
                {
                  "type": "span",
                  "key": null,
                  "ref": null,
                  "props": {
                    "children": [
                      "Curabitur ullamcorper ultricies nisi. Proin magna.",
                      " ",
                      {
                        "type": "a",
                        "key": null,
                        "ref": null,
                        "props": {
                          "href": "#",
                          "children": "Etiam iaculis nunc ac metus"
                        },
                        "_owner": null,
                        "_store": {}
                      }
                    ]
                  },
                  "_owner": null,
                  "_store": {}
                }
              ]
            },
            "_owner": null,
            "_store": {}
          },
          "kind": "emergencies"
        },
        "argTypes": {
          "href": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": false },
            "name": "href",
            "required": false,
            "description": "The links target",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "image": {
            "control": { "type": "text" },
            "name": "image",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "An optimized photograph",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "subTitle": {
            "control": { "type": "object" },
            "name": "subTitle",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "A short sentence to explain the content of the node (max 180 characters)",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "title": {
            "control": { "type": "object" },
            "type": { "name": "other", "value": "node", "required": false },
            "name": "title",
            "required": false,
            "description": "A search-friendly title (ideally 50 characters, max 100)",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "kind": {
            "control": {
              "type": "select",
              "options": [
                "landscape",
                "landscape-light",
                "emergencies",
                "split",
                "hero",
                "splash",
                "splash-image",
                "splash-compact",
                "related"
              ]
            },
            "type": {
              "name": "enum",
              "required": true,
              "value": [
                "landscape",
                "landscape-light",
                "emergencies",
                "split",
                "hero",
                "splash",
                "splash-image",
                "splash-compact",
                "related"
              ]
            },
            "name": "kind",
            "required": true,
            "description": "Kind of Card",
            "defaultValue": null,
            "sbType": {
              "name": "enum",
              "value": [
                "landscape",
                "landscape-light",
                "emergencies",
                "split",
                "hero",
                "splash",
                "splash-image",
                "splash-compact",
                "related"
              ]
            },
            "table": {
              "type": {
                "summary": "'landscape' | 'landscape-light' | 'emergencies' | 'split' | 'hero' | 'splash' | 'splash-image' | 'splash-compact' | 'related'"
              },
              "defaultValue": null
            }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Additional className which will be added",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "isExternal": {
            "control": { "type": "boolean" },
            "name": "isExternal",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "External link flag",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "isLink": {
            "control": { "type": "boolean" },
            "name": "isLink",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Render the Card as link",
            "defaultValue": true,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "true" }
            }
          },
          "metadata": {
            "control": { "type": "text" },
            "name": "metadata",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Additional metadatas",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "more": {
            "control": { "type": "object" },
            "name": "more",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Additional more content",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "url": {
            "control": { "type": "text" },
            "name": "url",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The URL where the content uploaded is located.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          }
        },
        "initialArgs": {
          "isLink": true,
          "href": "#",
          "title": {
            "key": null,
            "ref": null,
            "props": {
              "children": [
                {
                  "key": null,
                  "ref": null,
                  "props": {
                    "icon": {
                      "id": "icon--wfp-hum--emergency-response-pos",
                      "name": "icon--wfp-hum--emergency-response-pos",
                      "tags": "icon--wfp-hum--emergency-response-pos",
                      "styles": "",
                      "viewBox": "0 0 29 45",
                      "width": "29",
                      "height": "45",
                      "svgData": {
                        "circles": "",
                        "ellipses": "",
                        "paths": [
                          {
                            "d": "M14.4.6C6.5.6 0 7 0 15h28.7C28.7 7 22.3.6 14.4.6zm6.3 35.5h-.4v1.3h.3c.2 0 .4-.1.6-.2.1-.1.2-.3.2-.6s-.2-.5-.7-.5z"
                          },
                          {
                            "fill-rule": "nonzero",
                            "d": "M24.8 31H4c-.5 0-.8.4-.8.8v11.8c0 .5.4.8.8.8h20.8c.5 0 .8-.4.8-.8V31.8c0-.5-.4-.8-.8-.8zm-12.2 9.7h-1.9l-.6-2.5c0-.1-.1-.3-.1-.6s-.1-.6-.1-.8c0 .2-.1.4-.1.6 0 .3-.1.5-.1.7 0 .2-.2 1.1-.6 2.6H7.2l-1.4-5.8h1.5l.6 2.9c.1.6.2 1.2.3 1.5 0-.3.1-.6.2-1.1.1-.5.2-.9.3-1.2l.5-2.2h1.5l.5 2.2.3 1.2c.1.5.1.8.2 1 0-.3.1-.8.3-1.5l.6-2.9H14l-1.4 5.9zm5.6-4.6h-1.9v1.1H18v1.3h-1.8v2.2h-1.6v-5.8h3.5v1.2h.1zm4.2 2.1c-.4.4-.9.5-1.6.5h-.4v1.9h-1.6v-5.8h2c.7 0 1.3.2 1.7.5.4.3.6.8.6 1.4-.1.6-.3 1.1-.7 1.5z"
                          },
                          {
                            "d": "M24 17l-9.7 9.3L4.7 17c-.5-.5-1.3-.5-1.8 0s-.5 1.3 0 1.8l10.5 10.1c.1.1.2.2.4.2.1.1.3.1.4.1.2 0 .3 0 .4-.1.1-.1.3-.1.4-.2l10.5-10.1c.5-.5.5-1.3 0-1.8-.2-.5-1-.5-1.5 0z"
                          }
                        ],
                        "polygons": "",
                        "polylines": "",
                        "rects": ""
                      }
                    },
                    "fill": "#FFF",
                    "style": { "marginRight": "1rem" },
                    "fillRule": "evenodd",
                    "role": "img",
                    "description": "Provide a description that will be used as the title"
                  },
                  "_owner": null,
                  "_store": {}
                },
                {
                  "type": "span",
                  "key": null,
                  "ref": null,
                  "props": {
                    "children": [
                      "Curabitur ullamcorper ultricies nisi. Proin magna.",
                      " ",
                      {
                        "type": "a",
                        "key": null,
                        "ref": null,
                        "props": {
                          "href": "#",
                          "children": "Etiam iaculis nunc ac metus"
                        },
                        "_owner": null,
                        "_store": {}
                      }
                    ]
                  },
                  "_owner": null,
                  "_store": {}
                }
              ]
            },
            "_owner": null,
            "_store": {}
          },
          "kind": "emergencies"
        }
      },
      "forms-checkbox--regular": {
        "id": "forms-checkbox--regular",
        "kind": "Forms/Checkbox",
        "name": "Regular",
        "story": "Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\nYou can customize the content by using `BannerNavigation`.\n"
          },
          "storySource": { "source": "(args) => <Checkbox {...args} />" },
          "__id": "forms-checkbox--regular",
          "args": { "labelText": "Label text", "id": "check-1" },
          "argTypes": {
            "labelText": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": true, "value": "node" },
              "name": "labelText",
              "required": true,
              "description": "Provide a label to provide a description of the Checkbox input that you are\nexposing to the user",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "id": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": true },
              "name": "id",
              "required": true,
              "description": "Provide an `id` to uniquely identify the Checkbox input",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "checked": {
              "control": { "type": "boolean" },
              "name": "checked",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the underlying input should be checked",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "defaultChecked": {
              "control": { "type": "boolean" },
              "name": "defaultChecked",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the underlying input should be checked by default",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "indeterminate": {
              "control": { "type": "boolean" },
              "name": "indeterminate",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the Checkbox is in an indeterminate state",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify an optional className to be applied to the <label> node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "disabled": {
              "control": { "type": "boolean" },
              "name": "disabled",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the Checkbox should be disabled",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "hideLabel": {
              "control": { "type": "boolean" },
              "name": "hideLabel",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the label should be hidden, or not",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "onChange": {
              "name": "onChange",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Receives three arguments: true/false, the checkbox's id, and the dom event.",
              "sbType": { "name": "function" },
              "table": {
                "type": { "summary": "func" },
                "defaultValue": { "summary": "() => {}" }
              }
            },
            "title": {
              "control": { "type": "text" },
              "name": "title",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify a title for the <label> node for the Checkbox",
              "defaultValue": "",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "''" }
              }
            },
            "wrapperClassName": {
              "control": { "type": "text" },
              "name": "wrapperClassName",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The CSS class name to be placed on the wrapping element",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": { "labelText": "Label text", "id": "check-1" },
        "argTypes": {
          "labelText": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": true, "value": "node" },
            "name": "labelText",
            "required": true,
            "description": "Provide a label to provide a description of the Checkbox input that you are\nexposing to the user",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "id": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": true },
            "name": "id",
            "required": true,
            "description": "Provide an `id` to uniquely identify the Checkbox input",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "checked": {
            "control": { "type": "boolean" },
            "name": "checked",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the underlying input should be checked",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "defaultChecked": {
            "control": { "type": "boolean" },
            "name": "defaultChecked",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the underlying input should be checked by default",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "indeterminate": {
            "control": { "type": "boolean" },
            "name": "indeterminate",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the Checkbox is in an indeterminate state",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify an optional className to be applied to the <label> node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "disabled": {
            "control": { "type": "boolean" },
            "name": "disabled",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the Checkbox should be disabled",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "hideLabel": {
            "control": { "type": "boolean" },
            "name": "hideLabel",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the label should be hidden, or not",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "onChange": {
            "name": "onChange",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Receives three arguments: true/false, the checkbox's id, and the dom event.",
            "sbType": { "name": "function" },
            "table": {
              "type": { "summary": "func" },
              "defaultValue": { "summary": "() => {}" }
            }
          },
          "title": {
            "control": { "type": "text" },
            "name": "title",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify a title for the <label> node for the Checkbox",
            "defaultValue": "",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "''" }
            }
          },
          "wrapperClassName": {
            "control": { "type": "text" },
            "name": "wrapperClassName",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The CSS class name to be placed on the wrapping element",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          }
        },
        "initialArgs": { "labelText": "Label text", "id": "check-1" }
      },
      "forms-checkbox--checked-input": {
        "id": "forms-checkbox--checked-input",
        "kind": "Forms/Checkbox",
        "name": "Checked Input",
        "story": "Checked Input",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "Specify whether the underlying input should be checked."
          },
          "storySource": {
            "source": "(args) => {\n  const [isChecked, setChecked] = useState(true);\n\n  return (\n    <Checkbox\n      {...args}\n      onChange={() => setChecked(!isChecked)}\n      checked={isChecked}\n    />\n  );\n}"
          },
          "__id": "forms-checkbox--checked-input",
          "args": { "labelText": "Checked Input", "id": "check-2" },
          "argTypes": {
            "labelText": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": true, "value": "node" },
              "name": "labelText",
              "required": true,
              "description": "Provide a label to provide a description of the Checkbox input that you are\nexposing to the user",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "id": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": true },
              "name": "id",
              "required": true,
              "description": "Provide an `id` to uniquely identify the Checkbox input",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "checked": {
              "control": { "type": "boolean" },
              "name": "checked",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the underlying input should be checked",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "defaultChecked": {
              "control": { "type": "boolean" },
              "name": "defaultChecked",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the underlying input should be checked by default",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "indeterminate": {
              "control": { "type": "boolean" },
              "name": "indeterminate",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the Checkbox is in an indeterminate state",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify an optional className to be applied to the <label> node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "disabled": {
              "control": { "type": "boolean" },
              "name": "disabled",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the Checkbox should be disabled",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "hideLabel": {
              "control": { "type": "boolean" },
              "name": "hideLabel",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the label should be hidden, or not",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "onChange": {
              "name": "onChange",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Receives three arguments: true/false, the checkbox's id, and the dom event.",
              "sbType": { "name": "function" },
              "table": {
                "type": { "summary": "func" },
                "defaultValue": { "summary": "() => {}" }
              }
            },
            "title": {
              "control": { "type": "text" },
              "name": "title",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify a title for the <label> node for the Checkbox",
              "defaultValue": "",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "''" }
              }
            },
            "wrapperClassName": {
              "control": { "type": "text" },
              "name": "wrapperClassName",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The CSS class name to be placed on the wrapping element",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": { "labelText": "Checked Input", "id": "check-2" },
        "argTypes": {
          "labelText": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": true, "value": "node" },
            "name": "labelText",
            "required": true,
            "description": "Provide a label to provide a description of the Checkbox input that you are\nexposing to the user",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "id": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": true },
            "name": "id",
            "required": true,
            "description": "Provide an `id` to uniquely identify the Checkbox input",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "checked": {
            "control": { "type": "boolean" },
            "name": "checked",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the underlying input should be checked",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "defaultChecked": {
            "control": { "type": "boolean" },
            "name": "defaultChecked",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the underlying input should be checked by default",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "indeterminate": {
            "control": { "type": "boolean" },
            "name": "indeterminate",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the Checkbox is in an indeterminate state",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify an optional className to be applied to the <label> node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "disabled": {
            "control": { "type": "boolean" },
            "name": "disabled",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the Checkbox should be disabled",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "hideLabel": {
            "control": { "type": "boolean" },
            "name": "hideLabel",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the label should be hidden, or not",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "onChange": {
            "name": "onChange",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Receives three arguments: true/false, the checkbox's id, and the dom event.",
            "sbType": { "name": "function" },
            "table": {
              "type": { "summary": "func" },
              "defaultValue": { "summary": "() => {}" }
            }
          },
          "title": {
            "control": { "type": "text" },
            "name": "title",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify a title for the <label> node for the Checkbox",
            "defaultValue": "",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "''" }
            }
          },
          "wrapperClassName": {
            "control": { "type": "text" },
            "name": "wrapperClassName",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The CSS class name to be placed on the wrapping element",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          }
        },
        "initialArgs": { "labelText": "Checked Input", "id": "check-2" }
      },
      "forms-checkbox--indeterminate": {
        "id": "forms-checkbox--indeterminate",
        "kind": "Forms/Checkbox",
        "name": "Indeterminate",
        "story": "Indeterminate",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "Is a state that is neither checked nor unchecked. It’s that in-between state that we might consider the “Maybe” between “Yes” and “No” options"
          },
          "storySource": { "source": "(args) => <Checkbox {...args} />" },
          "__id": "forms-checkbox--indeterminate",
          "args": { "labelText": "Indeterminate Input", "indeterminate": true },
          "argTypes": {
            "labelText": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": true, "value": "node" },
              "name": "labelText",
              "required": true,
              "description": "Provide a label to provide a description of the Checkbox input that you are\nexposing to the user",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "indeterminate": {
              "control": { "type": "boolean" },
              "type": { "name": "boolean", "required": false },
              "name": "indeterminate",
              "required": false,
              "description": "Specify whether the Checkbox is in an indeterminate state",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "checked": {
              "control": { "type": "boolean" },
              "name": "checked",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the underlying input should be checked",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "defaultChecked": {
              "control": { "type": "boolean" },
              "name": "defaultChecked",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the underlying input should be checked by default",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify an optional className to be applied to the <label> node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "disabled": {
              "control": { "type": "boolean" },
              "name": "disabled",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the Checkbox should be disabled",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "id": {
              "control": { "type": "text" },
              "name": "id",
              "type": { "required": true, "name": "string" },
              "required": true,
              "description": "Provide an `id` to uniquely identify the Checkbox input",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "hideLabel": {
              "control": { "type": "boolean" },
              "name": "hideLabel",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the label should be hidden, or not",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "onChange": {
              "name": "onChange",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Receives three arguments: true/false, the checkbox's id, and the dom event.",
              "sbType": { "name": "function" },
              "table": {
                "type": { "summary": "func" },
                "defaultValue": { "summary": "() => {}" }
              }
            },
            "title": {
              "control": { "type": "text" },
              "name": "title",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify a title for the <label> node for the Checkbox",
              "defaultValue": "",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "''" }
              }
            },
            "wrapperClassName": {
              "control": { "type": "text" },
              "name": "wrapperClassName",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The CSS class name to be placed on the wrapping element",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": { "labelText": "Indeterminate Input", "indeterminate": true },
        "argTypes": {
          "labelText": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": true, "value": "node" },
            "name": "labelText",
            "required": true,
            "description": "Provide a label to provide a description of the Checkbox input that you are\nexposing to the user",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "indeterminate": {
            "control": { "type": "boolean" },
            "type": { "name": "boolean", "required": false },
            "name": "indeterminate",
            "required": false,
            "description": "Specify whether the Checkbox is in an indeterminate state",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "checked": {
            "control": { "type": "boolean" },
            "name": "checked",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the underlying input should be checked",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "defaultChecked": {
            "control": { "type": "boolean" },
            "name": "defaultChecked",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the underlying input should be checked by default",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify an optional className to be applied to the <label> node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "disabled": {
            "control": { "type": "boolean" },
            "name": "disabled",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the Checkbox should be disabled",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "id": {
            "control": { "type": "text" },
            "name": "id",
            "type": { "required": true, "name": "string" },
            "required": true,
            "description": "Provide an `id` to uniquely identify the Checkbox input",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "hideLabel": {
            "control": { "type": "boolean" },
            "name": "hideLabel",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the label should be hidden, or not",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "onChange": {
            "name": "onChange",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Receives three arguments: true/false, the checkbox's id, and the dom event.",
            "sbType": { "name": "function" },
            "table": {
              "type": { "summary": "func" },
              "defaultValue": { "summary": "() => {}" }
            }
          },
          "title": {
            "control": { "type": "text" },
            "name": "title",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify a title for the <label> node for the Checkbox",
            "defaultValue": "",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "''" }
            }
          },
          "wrapperClassName": {
            "control": { "type": "text" },
            "name": "wrapperClassName",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The CSS class name to be placed on the wrapping element",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          }
        },
        "initialArgs": {
          "labelText": "Indeterminate Input",
          "indeterminate": true
        }
      },
      "forms-checkbox--disabled-input": {
        "id": "forms-checkbox--disabled-input",
        "kind": "Forms/Checkbox",
        "name": "Disabled Input",
        "story": "Disabled Input",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "Specify whether the Checkbox should be interactive or not"
          },
          "storySource": { "source": "(args) => <Checkbox {...args} />" },
          "__id": "forms-checkbox--disabled-input",
          "args": { "labelText": "Disabled Input", "disabled": true },
          "argTypes": {
            "labelText": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": true, "value": "node" },
              "name": "labelText",
              "required": true,
              "description": "Provide a label to provide a description of the Checkbox input that you are\nexposing to the user",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "disabled": {
              "control": { "type": "boolean" },
              "type": { "name": "boolean", "required": false },
              "name": "disabled",
              "required": false,
              "description": "Specify whether the Checkbox should be disabled",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "checked": {
              "control": { "type": "boolean" },
              "name": "checked",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the underlying input should be checked",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "defaultChecked": {
              "control": { "type": "boolean" },
              "name": "defaultChecked",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the underlying input should be checked by default",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "indeterminate": {
              "control": { "type": "boolean" },
              "name": "indeterminate",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the Checkbox is in an indeterminate state",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify an optional className to be applied to the <label> node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "id": {
              "control": { "type": "text" },
              "name": "id",
              "type": { "required": true, "name": "string" },
              "required": true,
              "description": "Provide an `id` to uniquely identify the Checkbox input",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "hideLabel": {
              "control": { "type": "boolean" },
              "name": "hideLabel",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the label should be hidden, or not",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "onChange": {
              "name": "onChange",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Receives three arguments: true/false, the checkbox's id, and the dom event.",
              "sbType": { "name": "function" },
              "table": {
                "type": { "summary": "func" },
                "defaultValue": { "summary": "() => {}" }
              }
            },
            "title": {
              "control": { "type": "text" },
              "name": "title",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify a title for the <label> node for the Checkbox",
              "defaultValue": "",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "''" }
              }
            },
            "wrapperClassName": {
              "control": { "type": "text" },
              "name": "wrapperClassName",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The CSS class name to be placed on the wrapping element",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": { "labelText": "Disabled Input", "disabled": true },
        "argTypes": {
          "labelText": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": true, "value": "node" },
            "name": "labelText",
            "required": true,
            "description": "Provide a label to provide a description of the Checkbox input that you are\nexposing to the user",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "disabled": {
            "control": { "type": "boolean" },
            "type": { "name": "boolean", "required": false },
            "name": "disabled",
            "required": false,
            "description": "Specify whether the Checkbox should be disabled",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "checked": {
            "control": { "type": "boolean" },
            "name": "checked",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the underlying input should be checked",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "defaultChecked": {
            "control": { "type": "boolean" },
            "name": "defaultChecked",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the underlying input should be checked by default",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "indeterminate": {
            "control": { "type": "boolean" },
            "name": "indeterminate",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the Checkbox is in an indeterminate state",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify an optional className to be applied to the <label> node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "id": {
            "control": { "type": "text" },
            "name": "id",
            "type": { "required": true, "name": "string" },
            "required": true,
            "description": "Provide an `id` to uniquely identify the Checkbox input",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "hideLabel": {
            "control": { "type": "boolean" },
            "name": "hideLabel",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the label should be hidden, or not",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "onChange": {
            "name": "onChange",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Receives three arguments: true/false, the checkbox's id, and the dom event.",
            "sbType": { "name": "function" },
            "table": {
              "type": { "summary": "func" },
              "defaultValue": { "summary": "() => {}" }
            }
          },
          "title": {
            "control": { "type": "text" },
            "name": "title",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify a title for the <label> node for the Checkbox",
            "defaultValue": "",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "''" }
            }
          },
          "wrapperClassName": {
            "control": { "type": "text" },
            "name": "wrapperClassName",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The CSS class name to be placed on the wrapping element",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          }
        },
        "initialArgs": { "labelText": "Disabled Input", "disabled": true }
      },
      "forms-checkbox--hide-label": {
        "id": "forms-checkbox--hide-label",
        "kind": "Forms/Checkbox",
        "name": "Hide Label",
        "story": "Hide Label",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "Specify whether the label should be hidden or not"
          },
          "storySource": { "source": "(args) => <Checkbox {...args} />" },
          "__id": "forms-checkbox--hide-label",
          "args": { "labelText": "Hidden Label", "hideLabel": true },
          "argTypes": {
            "labelText": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": true, "value": "node" },
              "name": "labelText",
              "required": true,
              "description": "Provide a label to provide a description of the Checkbox input that you are\nexposing to the user",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "hideLabel": {
              "control": { "type": "boolean" },
              "type": { "name": "boolean", "required": false },
              "name": "hideLabel",
              "required": false,
              "description": "Specify whether the label should be hidden, or not",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "checked": {
              "control": { "type": "boolean" },
              "name": "checked",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the underlying input should be checked",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "defaultChecked": {
              "control": { "type": "boolean" },
              "name": "defaultChecked",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the underlying input should be checked by default",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "indeterminate": {
              "control": { "type": "boolean" },
              "name": "indeterminate",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the Checkbox is in an indeterminate state",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify an optional className to be applied to the <label> node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "disabled": {
              "control": { "type": "boolean" },
              "name": "disabled",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the Checkbox should be disabled",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "id": {
              "control": { "type": "text" },
              "name": "id",
              "type": { "required": true, "name": "string" },
              "required": true,
              "description": "Provide an `id` to uniquely identify the Checkbox input",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "onChange": {
              "name": "onChange",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Receives three arguments: true/false, the checkbox's id, and the dom event.",
              "sbType": { "name": "function" },
              "table": {
                "type": { "summary": "func" },
                "defaultValue": { "summary": "() => {}" }
              }
            },
            "title": {
              "control": { "type": "text" },
              "name": "title",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify a title for the <label> node for the Checkbox",
              "defaultValue": "",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "''" }
              }
            },
            "wrapperClassName": {
              "control": { "type": "text" },
              "name": "wrapperClassName",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The CSS class name to be placed on the wrapping element",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": { "labelText": "Hidden Label", "hideLabel": true },
        "argTypes": {
          "labelText": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": true, "value": "node" },
            "name": "labelText",
            "required": true,
            "description": "Provide a label to provide a description of the Checkbox input that you are\nexposing to the user",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "hideLabel": {
            "control": { "type": "boolean" },
            "type": { "name": "boolean", "required": false },
            "name": "hideLabel",
            "required": false,
            "description": "Specify whether the label should be hidden, or not",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "checked": {
            "control": { "type": "boolean" },
            "name": "checked",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the underlying input should be checked",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "defaultChecked": {
            "control": { "type": "boolean" },
            "name": "defaultChecked",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the underlying input should be checked by default",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "indeterminate": {
            "control": { "type": "boolean" },
            "name": "indeterminate",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the Checkbox is in an indeterminate state",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify an optional className to be applied to the <label> node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "disabled": {
            "control": { "type": "boolean" },
            "name": "disabled",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the Checkbox should be disabled",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "id": {
            "control": { "type": "text" },
            "name": "id",
            "type": { "required": true, "name": "string" },
            "required": true,
            "description": "Provide an `id` to uniquely identify the Checkbox input",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "onChange": {
            "name": "onChange",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Receives three arguments: true/false, the checkbox's id, and the dom event.",
            "sbType": { "name": "function" },
            "table": {
              "type": { "summary": "func" },
              "defaultValue": { "summary": "() => {}" }
            }
          },
          "title": {
            "control": { "type": "text" },
            "name": "title",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify a title for the <label> node for the Checkbox",
            "defaultValue": "",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "''" }
            }
          },
          "wrapperClassName": {
            "control": { "type": "text" },
            "name": "wrapperClassName",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The CSS class name to be placed on the wrapping element",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          }
        },
        "initialArgs": { "labelText": "Hidden Label", "hideLabel": true }
      },
      "components-contentswitcher--regular": {
        "id": "components-contentswitcher--regular",
        "kind": "Components/ContentSwitcher",
        "name": "Regular",
        "story": "Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": {
            "source": "(args) => {\n  const handleChange = () => {\n    // console.log('handle any onChange here');\n  };\n  return (\n    <ContentSwitcher {...args} onChange={handleChange}>\n      <Switch name=\"one\" text=\"First section\" />\n      <Switch name=\"two\" text=\"Second section\" />\n      <Switch name=\"three\" text=\"Third section\" />\n    </ContentSwitcher>\n  );\n}"
          },
          "__id": "components-contentswitcher--regular",
          "args": { "children": "ContentSwitcher" },
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "children",
              "required": false,
              "description": "Specify the content of your ContentSwitcher",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify an optional className to be added to your ContentSwitcher",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "onChange": {
              "name": "onChange",
              "type": { "required": true, "name": "function" },
              "required": true,
              "description": "Specify an `onChange` handler that is called whenever the ContentSwitcher changes which item is selected",
              "defaultValue": null,
              "sbType": { "name": "function" },
              "table": { "type": { "summary": "func" }, "defaultValue": null }
            },
            "selectedIndex": {
              "control": { "type": "number" },
              "name": "selectedIndex",
              "type": { "required": false, "name": "number" },
              "required": false,
              "description": "Specify a selected index for the initially selected content",
              "defaultValue": 0,
              "sbType": { "name": "number" },
              "table": {
                "type": { "summary": "number" },
                "defaultValue": { "summary": "0" }
              }
            }
          },
          "__isArgsStory": true
        },
        "args": { "children": "ContentSwitcher" },
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "children",
            "required": false,
            "description": "Specify the content of your ContentSwitcher",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify an optional className to be added to your ContentSwitcher",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "onChange": {
            "name": "onChange",
            "type": { "required": true, "name": "function" },
            "required": true,
            "description": "Specify an `onChange` handler that is called whenever the ContentSwitcher changes which item is selected",
            "defaultValue": null,
            "sbType": { "name": "function" },
            "table": { "type": { "summary": "func" }, "defaultValue": null }
          },
          "selectedIndex": {
            "control": { "type": "number" },
            "name": "selectedIndex",
            "type": { "required": false, "name": "number" },
            "required": false,
            "description": "Specify a selected index for the initially selected content",
            "defaultValue": 0,
            "sbType": { "name": "number" },
            "table": {
              "type": { "summary": "number" },
              "defaultValue": { "summary": "0" }
            }
          }
        },
        "initialArgs": { "children": "ContentSwitcher" }
      },
      "components-contentswitcher--button-switch": {
        "id": "components-contentswitcher--button-switch",
        "kind": "Components/ContentSwitcher",
        "name": "Button Switch",
        "story": "Button Switch",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\n\n#### Default types of switch state\n\n| kind   |  Description  |\n|----------|-------------|\n| `anchor` | (Default) |\n| `button` | experimental   |\n"
          },
          "storySource": {
            "source": "(args) => {\n  const handleChange = () => {\n    // console.log('handle any onChange here');\n  };\n  return (\n    <ContentSwitcher {...args} onChange={handleChange}>\n      <Switch kind=\"button\" name=\"one\" text=\"First section\" />\n      <Switch kind=\"button\" name=\"two\" text=\"Second section\" />\n      <Switch kind=\"button\" name=\"three\" text=\"Third section\" />\n    </ContentSwitcher>\n  );\n}"
          },
          "__id": "components-contentswitcher--button-switch",
          "args": { "children": "ContentSwitcher" },
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "children",
              "required": false,
              "description": "Specify the content of your ContentSwitcher",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify an optional className to be added to your ContentSwitcher",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "onChange": {
              "name": "onChange",
              "type": { "required": true, "name": "function" },
              "required": true,
              "description": "Specify an `onChange` handler that is called whenever the ContentSwitcher changes which item is selected",
              "defaultValue": null,
              "sbType": { "name": "function" },
              "table": { "type": { "summary": "func" }, "defaultValue": null }
            },
            "selectedIndex": {
              "control": { "type": "number" },
              "name": "selectedIndex",
              "type": { "required": false, "name": "number" },
              "required": false,
              "description": "Specify a selected index for the initially selected content",
              "defaultValue": 0,
              "sbType": { "name": "number" },
              "table": {
                "type": { "summary": "number" },
                "defaultValue": { "summary": "0" }
              }
            }
          },
          "__isArgsStory": true
        },
        "args": { "children": "ContentSwitcher" },
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "children",
            "required": false,
            "description": "Specify the content of your ContentSwitcher",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify an optional className to be added to your ContentSwitcher",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "onChange": {
            "name": "onChange",
            "type": { "required": true, "name": "function" },
            "required": true,
            "description": "Specify an `onChange` handler that is called whenever the ContentSwitcher changes which item is selected",
            "defaultValue": null,
            "sbType": { "name": "function" },
            "table": { "type": { "summary": "func" }, "defaultValue": null }
          },
          "selectedIndex": {
            "control": { "type": "number" },
            "name": "selectedIndex",
            "type": { "required": false, "name": "number" },
            "required": false,
            "description": "Specify a selected index for the initially selected content",
            "defaultValue": 0,
            "sbType": { "name": "number" },
            "table": {
              "type": { "summary": "number" },
              "defaultValue": { "summary": "0" }
            }
          }
        },
        "initialArgs": { "children": "ContentSwitcher" }
      },
      "components-contentswitcher--with-icon": {
        "id": "components-contentswitcher--with-icon",
        "kind": "Components/ContentSwitcher",
        "name": "With Icon",
        "story": "With Icon",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "Specify icon to be used in the switch element. `icon` property on `<switch/>` expects an element "
          },
          "storySource": {
            "source": "(args) => {\n  const handleChange = () => {\n    // console.log('handle any onChange here');\n  };\n  return (\n    <ContentSwitcher {...args} onChange={handleChange}>\n      <Switch\n        kind=\"button\"\n        name=\"one\"\n        text=\"First section\"\n        icon={<Icon icon={iconAddGlyph} />}\n      />\n      <Switch\n        kind=\"button\"\n        name=\"two\"\n        text=\"Second section\"\n        icon={<Icon icon={iconAddGlyph} />}\n      />\n      <Switch\n        kind=\"button\"\n        name=\"three\"\n        text=\"Third section\"\n        icon={<Icon icon={iconAddGlyph} />}\n      />\n    </ContentSwitcher>\n  );\n}"
          },
          "__id": "components-contentswitcher--with-icon",
          "args": { "children": "ContentSwitcher" },
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "children",
              "required": false,
              "description": "Specify the content of your ContentSwitcher",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify an optional className to be added to your ContentSwitcher",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "onChange": {
              "name": "onChange",
              "type": { "required": true, "name": "function" },
              "required": true,
              "description": "Specify an `onChange` handler that is called whenever the ContentSwitcher changes which item is selected",
              "defaultValue": null,
              "sbType": { "name": "function" },
              "table": { "type": { "summary": "func" }, "defaultValue": null }
            },
            "selectedIndex": {
              "control": { "type": "number" },
              "name": "selectedIndex",
              "type": { "required": false, "name": "number" },
              "required": false,
              "description": "Specify a selected index for the initially selected content",
              "defaultValue": 0,
              "sbType": { "name": "number" },
              "table": {
                "type": { "summary": "number" },
                "defaultValue": { "summary": "0" }
              }
            }
          },
          "__isArgsStory": true
        },
        "args": { "children": "ContentSwitcher" },
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "children",
            "required": false,
            "description": "Specify the content of your ContentSwitcher",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify an optional className to be added to your ContentSwitcher",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "onChange": {
            "name": "onChange",
            "type": { "required": true, "name": "function" },
            "required": true,
            "description": "Specify an `onChange` handler that is called whenever the ContentSwitcher changes which item is selected",
            "defaultValue": null,
            "sbType": { "name": "function" },
            "table": { "type": { "summary": "func" }, "defaultValue": null }
          },
          "selectedIndex": {
            "control": { "type": "number" },
            "name": "selectedIndex",
            "type": { "required": false, "name": "number" },
            "required": false,
            "description": "Specify a selected index for the initially selected content",
            "defaultValue": 0,
            "sbType": { "name": "number" },
            "table": {
              "type": { "summary": "number" },
              "defaultValue": { "summary": "0" }
            }
          }
        },
        "initialArgs": { "children": "ContentSwitcher" }
      },
      "components-credits--regular-credits": {
        "id": "components-credits--regular-credits",
        "kind": "Components/Credits",
        "name": "Regular Credits",
        "story": "Regular Credits",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": {
            "source": "(args) => (\n  <Credits {...args}>\n    <img\n      alt=\"Default illustration\"\n      style={{ width: '700px', height: 'auto' }}\n      src=\"http://www1.wfp.org/sites/default/files/images/hp_yem_20170717_wfp-reem_nada_0109_3.jpg\"\n    />\n  </Credits>\n)"
          },
          "__id": "components-credits--regular-credits",
          "args": {
            "children": "Credits",
            "info": "Photo: WFP/ Rein Skullerud"
          },
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "children",
              "required": false,
              "description": "Specify the image or content",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "info": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": false },
              "name": "info",
              "required": false,
              "description": "Specifiy the info content",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Additional className which will be added",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": { "children": "Credits", "info": "Photo: WFP/ Rein Skullerud" },
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "children",
            "required": false,
            "description": "Specify the image or content",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "info": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": false },
            "name": "info",
            "required": false,
            "description": "Specifiy the info content",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Additional className which will be added",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          }
        },
        "initialArgs": {
          "children": "Credits",
          "info": "Photo: WFP/ Rein Skullerud"
        }
      },
      "components-datepicker--single-date-picker": {
        "id": "components-datepicker--single-date-picker",
        "kind": "Components/DatePicker",
        "name": "Single Date Picker",
        "story": "Single Date Picker",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": {
            "source": "(args) => <SingleDatePickerInput {...args} />"
          },
          "__id": "components-datepicker--single-date-picker",
          "args": {
            "date": "2020-10-05T07:47:42.244Z",
            "labelText": "Label text (labelText)",
            "placeholder": "Placeholder text (placeholder)",
            "disabled": false,
            "hideLabel": false,
            "showClearDate": false,
            "invalid": false,
            "invalidText": "A valid value is required",
            "showDefaultInputIcon": true,
            "inputIconPosition": "after",
            "helperText": "Optional helper text."
          },
          "argTypes": {
            "datePicker": {
              "type": { "name": "function", "required": true },
              "name": "datePicker",
              "required": true,
              "description": "Provide the SingleDatePicker as a component",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "date": {
              "control": { "type": "object" },
              "type": {
                "name": "object",
                "value": {
                  "_isAMomentObject": { "name": "boolean" },
                  "_isUTC": { "name": "boolean" },
                  "_pf": {
                    "name": "object",
                    "value": {
                      "empty": { "name": "boolean" },
                      "unusedTokens": {
                        "name": "array",
                        "value": { "name": "other", "value": "unknown" }
                      },
                      "unusedInput": {
                        "name": "array",
                        "value": { "name": "other", "value": "unknown" }
                      },
                      "overflow": { "name": "number" },
                      "charsLeftOver": { "name": "number" },
                      "nullInput": { "name": "boolean" },
                      "invalidEra": { "name": "other", "value": "unknown" },
                      "invalidMonth": { "name": "other", "value": "unknown" },
                      "invalidFormat": { "name": "boolean" },
                      "userInvalidated": { "name": "boolean" },
                      "iso": { "name": "boolean" },
                      "parsedDateParts": {
                        "name": "array",
                        "value": { "name": "other", "value": "unknown" }
                      },
                      "era": { "name": "other", "value": "unknown" },
                      "meridiem": { "name": "other", "value": "unknown" },
                      "rfc2822": { "name": "boolean" },
                      "weekdayMismatch": { "name": "boolean" }
                    }
                  },
                  "_locale": {
                    "name": "object",
                    "value": {
                      "_calendar": {
                        "name": "object",
                        "value": {
                          "sameDay": { "name": "string" },
                          "nextDay": { "name": "string" },
                          "nextWeek": { "name": "string" },
                          "lastDay": { "name": "string" },
                          "lastWeek": { "name": "string" },
                          "sameElse": { "name": "string" }
                        }
                      },
                      "_longDateFormat": {
                        "name": "object",
                        "value": {
                          "LTS": { "name": "string" },
                          "LT": { "name": "string" },
                          "L": { "name": "string" },
                          "LL": { "name": "string" },
                          "LLL": { "name": "string" },
                          "LLLL": { "name": "string" }
                        }
                      },
                      "_invalidDate": { "name": "string" },
                      "ordinal": { "name": "function" },
                      "_dayOfMonthOrdinalParse": {
                        "name": "object",
                        "value": {}
                      },
                      "_relativeTime": {
                        "name": "object",
                        "value": {
                          "future": { "name": "string" },
                          "past": { "name": "string" },
                          "s": { "name": "string" },
                          "ss": { "name": "string" },
                          "m": { "name": "string" },
                          "mm": { "name": "string" },
                          "h": { "name": "string" },
                          "hh": { "name": "string" },
                          "d": { "name": "string" },
                          "dd": { "name": "string" },
                          "w": { "name": "string" },
                          "ww": { "name": "string" },
                          "M": { "name": "string" },
                          "MM": { "name": "string" },
                          "y": { "name": "string" },
                          "yy": { "name": "string" }
                        }
                      },
                      "_months": {
                        "name": "array",
                        "value": { "name": "string" }
                      },
                      "_monthsShort": {
                        "name": "array",
                        "value": { "name": "string" }
                      },
                      "_week": {
                        "name": "object",
                        "value": {
                          "dow": { "name": "number" },
                          "doy": { "name": "number" }
                        }
                      },
                      "_weekdays": {
                        "name": "array",
                        "value": { "name": "string" }
                      },
                      "_weekdaysMin": {
                        "name": "array",
                        "value": { "name": "string" }
                      },
                      "_weekdaysShort": {
                        "name": "array",
                        "value": { "name": "string" }
                      },
                      "_meridiemParse": { "name": "object", "value": {} },
                      "_eras": {
                        "name": "array",
                        "value": {
                          "name": "object",
                          "value": {
                            "since": { "name": "string" },
                            "until": { "name": "number" },
                            "offset": { "name": "number" },
                            "name": { "name": "string" },
                            "narrow": { "name": "string" },
                            "abbr": { "name": "string" }
                          }
                        }
                      },
                      "_abbr": { "name": "string" },
                      "_config": {
                        "name": "object",
                        "value": {
                          "calendar": {
                            "name": "object",
                            "value": {
                              "sameDay": { "name": "string" },
                              "nextDay": { "name": "string" },
                              "nextWeek": { "name": "string" },
                              "lastDay": { "name": "string" },
                              "lastWeek": { "name": "string" },
                              "sameElse": { "name": "string" }
                            }
                          },
                          "longDateFormat": {
                            "name": "object",
                            "value": {
                              "LTS": { "name": "string" },
                              "LT": { "name": "string" },
                              "L": { "name": "string" },
                              "LL": { "name": "string" },
                              "LLL": { "name": "string" },
                              "LLLL": { "name": "string" }
                            }
                          },
                          "invalidDate": { "name": "string" },
                          "ordinal": { "name": "function" },
                          "dayOfMonthOrdinalParse": {
                            "name": "object",
                            "value": {}
                          },
                          "relativeTime": {
                            "name": "object",
                            "value": {
                              "future": { "name": "string" },
                              "past": { "name": "string" },
                              "s": { "name": "string" },
                              "ss": { "name": "string" },
                              "m": { "name": "string" },
                              "mm": { "name": "string" },
                              "h": { "name": "string" },
                              "hh": { "name": "string" },
                              "d": { "name": "string" },
                              "dd": { "name": "string" },
                              "w": { "name": "string" },
                              "ww": { "name": "string" },
                              "M": { "name": "string" },
                              "MM": { "name": "string" },
                              "y": { "name": "string" },
                              "yy": { "name": "string" }
                            }
                          },
                          "months": {
                            "name": "array",
                            "value": { "name": "string" }
                          },
                          "monthsShort": {
                            "name": "array",
                            "value": { "name": "string" }
                          },
                          "week": {
                            "name": "object",
                            "value": {
                              "dow": { "name": "number" },
                              "doy": { "name": "number" }
                            }
                          },
                          "weekdays": {
                            "name": "array",
                            "value": { "name": "string" }
                          },
                          "weekdaysMin": {
                            "name": "array",
                            "value": { "name": "string" }
                          },
                          "weekdaysShort": {
                            "name": "array",
                            "value": { "name": "string" }
                          },
                          "meridiemParse": { "name": "object", "value": {} },
                          "eras": {
                            "name": "array",
                            "value": {
                              "name": "object",
                              "value": {
                                "since": { "name": "string" },
                                "until": { "name": "number" },
                                "offset": { "name": "number" },
                                "name": { "name": "string" },
                                "narrow": { "name": "string" },
                                "abbr": { "name": "string" }
                              }
                            }
                          },
                          "abbr": { "name": "string" }
                        }
                      },
                      "_dayOfMonthOrdinalParseLenient": {
                        "name": "object",
                        "value": {}
                      }
                    }
                  },
                  "_d": { "name": "object", "value": {} },
                  "_isValid": { "name": "boolean" }
                }
              },
              "name": "date"
            },
            "labelText": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": true },
              "name": "labelText",
              "required": true,
              "description": "Provide the text that will be read by a screen reader when visiting this\ncontrol",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "placeholder": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": false },
              "name": "placeholder",
              "required": false,
              "description": "Specify the placeholder attribute for the <textarea>",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "disabled": {
              "control": { "type": "boolean" },
              "type": { "name": "boolean", "required": false },
              "name": "disabled",
              "required": false,
              "description": "Specify whether the control is disabled",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "hideLabel": {
              "control": { "type": "boolean" },
              "type": { "name": "boolean", "required": false },
              "name": "hideLabel",
              "required": false,
              "description": "Specify whether you want the underlying label to be visually hidden",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "showClearDate": {
              "control": { "type": "boolean" },
              "type": { "name": "boolean" },
              "name": "showClearDate"
            },
            "invalid": {
              "control": { "type": "boolean" },
              "type": { "name": "boolean", "required": false },
              "name": "invalid",
              "required": false,
              "description": "Specify whether the control is currently invalid",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "invalidText": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": false },
              "name": "invalidText",
              "required": false,
              "description": "Provide the text that is displayed when the control is in an invalid state",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "showDefaultInputIcon": {
              "control": { "type": "boolean" },
              "type": { "name": "boolean" },
              "name": "showDefaultInputIcon"
            },
            "inputIconPosition": {
              "control": { "type": "text" },
              "type": { "name": "string" },
              "name": "inputIconPosition"
            },
            "helperText": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": false },
              "name": "helperText",
              "required": false,
              "description": "Provide text that is used alongside the control label for additional help",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "onFocus": {
              "control": { "type": "object" },
              "name": "onFocus",
              "type": { "required": false },
              "required": false,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": { "summary": "() => {}" }
              }
            },
            "onBlur": {
              "control": { "type": "object" },
              "name": "onBlur",
              "type": { "required": false },
              "required": false,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": { "summary": "() => {}" }
              }
            },
            "onChange": {
              "control": { "type": "object" },
              "name": "onChange",
              "type": { "required": false },
              "required": false,
              "description": "Optionally provide an `onChange` handler that is called whenever <textarea>\nis updated",
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": { "summary": "() => {}" }
              }
            },
            "className": {
              "control": { "type": "object" },
              "name": "className",
              "type": { "required": false },
              "required": false,
              "description": "Provide a custom className that is applied directly to the underlying\n<textarea> node",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "id": {
              "control": { "type": "object" },
              "name": "id",
              "type": { "required": false },
              "required": false,
              "description": "Provide a unique identifier for the control",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "onClick": {
              "control": { "type": "object" },
              "name": "onClick",
              "type": { "required": false },
              "required": false,
              "description": "Optionally provide an `onClick` handler that is called whenever the\n<textarea> is clicked",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "rows": {
              "control": { "type": "object" },
              "name": "rows",
              "type": { "required": false },
              "required": false,
              "description": "Specify the rows attribute for the <textarea>",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "date": "2020-10-05T07:47:42.244Z",
          "labelText": "Label text (labelText)",
          "placeholder": "Placeholder text (placeholder)",
          "disabled": false,
          "hideLabel": false,
          "showClearDate": false,
          "invalid": false,
          "invalidText": "A valid value is required",
          "showDefaultInputIcon": true,
          "inputIconPosition": "after",
          "helperText": "Optional helper text."
        },
        "argTypes": {
          "datePicker": {
            "type": { "name": "function", "required": true },
            "name": "datePicker",
            "required": true,
            "description": "Provide the SingleDatePicker as a component",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "date": {
            "control": { "type": "object" },
            "type": {
              "name": "object",
              "value": {
                "_isAMomentObject": { "name": "boolean" },
                "_isUTC": { "name": "boolean" },
                "_pf": {
                  "name": "object",
                  "value": {
                    "empty": { "name": "boolean" },
                    "unusedTokens": {
                      "name": "array",
                      "value": { "name": "other", "value": "unknown" }
                    },
                    "unusedInput": {
                      "name": "array",
                      "value": { "name": "other", "value": "unknown" }
                    },
                    "overflow": { "name": "number" },
                    "charsLeftOver": { "name": "number" },
                    "nullInput": { "name": "boolean" },
                    "invalidEra": { "name": "other", "value": "unknown" },
                    "invalidMonth": { "name": "other", "value": "unknown" },
                    "invalidFormat": { "name": "boolean" },
                    "userInvalidated": { "name": "boolean" },
                    "iso": { "name": "boolean" },
                    "parsedDateParts": {
                      "name": "array",
                      "value": { "name": "other", "value": "unknown" }
                    },
                    "era": { "name": "other", "value": "unknown" },
                    "meridiem": { "name": "other", "value": "unknown" },
                    "rfc2822": { "name": "boolean" },
                    "weekdayMismatch": { "name": "boolean" }
                  }
                },
                "_locale": {
                  "name": "object",
                  "value": {
                    "_calendar": {
                      "name": "object",
                      "value": {
                        "sameDay": { "name": "string" },
                        "nextDay": { "name": "string" },
                        "nextWeek": { "name": "string" },
                        "lastDay": { "name": "string" },
                        "lastWeek": { "name": "string" },
                        "sameElse": { "name": "string" }
                      }
                    },
                    "_longDateFormat": {
                      "name": "object",
                      "value": {
                        "LTS": { "name": "string" },
                        "LT": { "name": "string" },
                        "L": { "name": "string" },
                        "LL": { "name": "string" },
                        "LLL": { "name": "string" },
                        "LLLL": { "name": "string" }
                      }
                    },
                    "_invalidDate": { "name": "string" },
                    "ordinal": { "name": "function" },
                    "_dayOfMonthOrdinalParse": {
                      "name": "object",
                      "value": {}
                    },
                    "_relativeTime": {
                      "name": "object",
                      "value": {
                        "future": { "name": "string" },
                        "past": { "name": "string" },
                        "s": { "name": "string" },
                        "ss": { "name": "string" },
                        "m": { "name": "string" },
                        "mm": { "name": "string" },
                        "h": { "name": "string" },
                        "hh": { "name": "string" },
                        "d": { "name": "string" },
                        "dd": { "name": "string" },
                        "w": { "name": "string" },
                        "ww": { "name": "string" },
                        "M": { "name": "string" },
                        "MM": { "name": "string" },
                        "y": { "name": "string" },
                        "yy": { "name": "string" }
                      }
                    },
                    "_months": {
                      "name": "array",
                      "value": { "name": "string" }
                    },
                    "_monthsShort": {
                      "name": "array",
                      "value": { "name": "string" }
                    },
                    "_week": {
                      "name": "object",
                      "value": {
                        "dow": { "name": "number" },
                        "doy": { "name": "number" }
                      }
                    },
                    "_weekdays": {
                      "name": "array",
                      "value": { "name": "string" }
                    },
                    "_weekdaysMin": {
                      "name": "array",
                      "value": { "name": "string" }
                    },
                    "_weekdaysShort": {
                      "name": "array",
                      "value": { "name": "string" }
                    },
                    "_meridiemParse": { "name": "object", "value": {} },
                    "_eras": {
                      "name": "array",
                      "value": {
                        "name": "object",
                        "value": {
                          "since": { "name": "string" },
                          "until": { "name": "number" },
                          "offset": { "name": "number" },
                          "name": { "name": "string" },
                          "narrow": { "name": "string" },
                          "abbr": { "name": "string" }
                        }
                      }
                    },
                    "_abbr": { "name": "string" },
                    "_config": {
                      "name": "object",
                      "value": {
                        "calendar": {
                          "name": "object",
                          "value": {
                            "sameDay": { "name": "string" },
                            "nextDay": { "name": "string" },
                            "nextWeek": { "name": "string" },
                            "lastDay": { "name": "string" },
                            "lastWeek": { "name": "string" },
                            "sameElse": { "name": "string" }
                          }
                        },
                        "longDateFormat": {
                          "name": "object",
                          "value": {
                            "LTS": { "name": "string" },
                            "LT": { "name": "string" },
                            "L": { "name": "string" },
                            "LL": { "name": "string" },
                            "LLL": { "name": "string" },
                            "LLLL": { "name": "string" }
                          }
                        },
                        "invalidDate": { "name": "string" },
                        "ordinal": { "name": "function" },
                        "dayOfMonthOrdinalParse": {
                          "name": "object",
                          "value": {}
                        },
                        "relativeTime": {
                          "name": "object",
                          "value": {
                            "future": { "name": "string" },
                            "past": { "name": "string" },
                            "s": { "name": "string" },
                            "ss": { "name": "string" },
                            "m": { "name": "string" },
                            "mm": { "name": "string" },
                            "h": { "name": "string" },
                            "hh": { "name": "string" },
                            "d": { "name": "string" },
                            "dd": { "name": "string" },
                            "w": { "name": "string" },
                            "ww": { "name": "string" },
                            "M": { "name": "string" },
                            "MM": { "name": "string" },
                            "y": { "name": "string" },
                            "yy": { "name": "string" }
                          }
                        },
                        "months": {
                          "name": "array",
                          "value": { "name": "string" }
                        },
                        "monthsShort": {
                          "name": "array",
                          "value": { "name": "string" }
                        },
                        "week": {
                          "name": "object",
                          "value": {
                            "dow": { "name": "number" },
                            "doy": { "name": "number" }
                          }
                        },
                        "weekdays": {
                          "name": "array",
                          "value": { "name": "string" }
                        },
                        "weekdaysMin": {
                          "name": "array",
                          "value": { "name": "string" }
                        },
                        "weekdaysShort": {
                          "name": "array",
                          "value": { "name": "string" }
                        },
                        "meridiemParse": { "name": "object", "value": {} },
                        "eras": {
                          "name": "array",
                          "value": {
                            "name": "object",
                            "value": {
                              "since": { "name": "string" },
                              "until": { "name": "number" },
                              "offset": { "name": "number" },
                              "name": { "name": "string" },
                              "narrow": { "name": "string" },
                              "abbr": { "name": "string" }
                            }
                          }
                        },
                        "abbr": { "name": "string" }
                      }
                    },
                    "_dayOfMonthOrdinalParseLenient": {
                      "name": "object",
                      "value": {}
                    }
                  }
                },
                "_d": { "name": "object", "value": {} },
                "_isValid": { "name": "boolean" }
              }
            },
            "name": "date"
          },
          "labelText": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": true },
            "name": "labelText",
            "required": true,
            "description": "Provide the text that will be read by a screen reader when visiting this\ncontrol",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "placeholder": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": false },
            "name": "placeholder",
            "required": false,
            "description": "Specify the placeholder attribute for the <textarea>",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "disabled": {
            "control": { "type": "boolean" },
            "type": { "name": "boolean", "required": false },
            "name": "disabled",
            "required": false,
            "description": "Specify whether the control is disabled",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "hideLabel": {
            "control": { "type": "boolean" },
            "type": { "name": "boolean", "required": false },
            "name": "hideLabel",
            "required": false,
            "description": "Specify whether you want the underlying label to be visually hidden",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "showClearDate": {
            "control": { "type": "boolean" },
            "type": { "name": "boolean" },
            "name": "showClearDate"
          },
          "invalid": {
            "control": { "type": "boolean" },
            "type": { "name": "boolean", "required": false },
            "name": "invalid",
            "required": false,
            "description": "Specify whether the control is currently invalid",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "invalidText": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": false },
            "name": "invalidText",
            "required": false,
            "description": "Provide the text that is displayed when the control is in an invalid state",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "showDefaultInputIcon": {
            "control": { "type": "boolean" },
            "type": { "name": "boolean" },
            "name": "showDefaultInputIcon"
          },
          "inputIconPosition": {
            "control": { "type": "text" },
            "type": { "name": "string" },
            "name": "inputIconPosition"
          },
          "helperText": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": false },
            "name": "helperText",
            "required": false,
            "description": "Provide text that is used alongside the control label for additional help",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "onFocus": {
            "control": { "type": "object" },
            "name": "onFocus",
            "type": { "required": false },
            "required": false,
            "table": {
              "type": { "summary": "unknown" },
              "defaultValue": { "summary": "() => {}" }
            }
          },
          "onBlur": {
            "control": { "type": "object" },
            "name": "onBlur",
            "type": { "required": false },
            "required": false,
            "table": {
              "type": { "summary": "unknown" },
              "defaultValue": { "summary": "() => {}" }
            }
          },
          "onChange": {
            "control": { "type": "object" },
            "name": "onChange",
            "type": { "required": false },
            "required": false,
            "description": "Optionally provide an `onChange` handler that is called whenever <textarea>\nis updated",
            "table": {
              "type": { "summary": "unknown" },
              "defaultValue": { "summary": "() => {}" }
            }
          },
          "className": {
            "control": { "type": "object" },
            "name": "className",
            "type": { "required": false },
            "required": false,
            "description": "Provide a custom className that is applied directly to the underlying\n<textarea> node",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "id": {
            "control": { "type": "object" },
            "name": "id",
            "type": { "required": false },
            "required": false,
            "description": "Provide a unique identifier for the control",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "onClick": {
            "control": { "type": "object" },
            "name": "onClick",
            "type": { "required": false },
            "required": false,
            "description": "Optionally provide an `onClick` handler that is called whenever the\n<textarea> is clicked",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "rows": {
            "control": { "type": "object" },
            "name": "rows",
            "type": { "required": false },
            "required": false,
            "description": "Specify the rows attribute for the <textarea>",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          }
        },
        "initialArgs": {
          "date": "2020-10-05T07:47:42.244Z",
          "labelText": "Label text (labelText)",
          "placeholder": "Placeholder text (placeholder)",
          "disabled": false,
          "hideLabel": false,
          "showClearDate": false,
          "invalid": false,
          "invalidText": "A valid value is required",
          "showDefaultInputIcon": true,
          "inputIconPosition": "after",
          "helperText": "Optional helper text."
        }
      },
      "components-datepicker--date-range-picker": {
        "id": "components-datepicker--date-range-picker",
        "kind": "Components/DatePicker",
        "name": "Date Range Picker",
        "story": "Date Range Picker",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": {
            "source": "(args) => <DateRangePickerInput {...args} />"
          },
          "__id": "components-datepicker--date-range-picker",
          "args": {
            "date": "2020-10-05T07:47:42.244Z",
            "labelText": "Label text (labelText)",
            "placeholder": "Placeholder text (placeholder)",
            "disabled": false,
            "hideLabel": false,
            "showClearDate": false,
            "invalid": false,
            "invalidText": "A valid value is required",
            "showDefaultInputIcon": true,
            "inputIconPosition": "after",
            "helperText": "Optional helper text."
          },
          "argTypes": {
            "datePicker": {
              "type": { "name": "function", "required": true },
              "name": "datePicker",
              "required": true,
              "description": "Provide the SingleDatePicker as a component",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "date": {
              "control": { "type": "object" },
              "type": {
                "name": "object",
                "value": {
                  "_isAMomentObject": { "name": "boolean" },
                  "_isUTC": { "name": "boolean" },
                  "_pf": {
                    "name": "object",
                    "value": {
                      "empty": { "name": "boolean" },
                      "unusedTokens": {
                        "name": "array",
                        "value": { "name": "other", "value": "unknown" }
                      },
                      "unusedInput": {
                        "name": "array",
                        "value": { "name": "other", "value": "unknown" }
                      },
                      "overflow": { "name": "number" },
                      "charsLeftOver": { "name": "number" },
                      "nullInput": { "name": "boolean" },
                      "invalidEra": { "name": "other", "value": "unknown" },
                      "invalidMonth": { "name": "other", "value": "unknown" },
                      "invalidFormat": { "name": "boolean" },
                      "userInvalidated": { "name": "boolean" },
                      "iso": { "name": "boolean" },
                      "parsedDateParts": {
                        "name": "array",
                        "value": { "name": "other", "value": "unknown" }
                      },
                      "era": { "name": "other", "value": "unknown" },
                      "meridiem": { "name": "other", "value": "unknown" },
                      "rfc2822": { "name": "boolean" },
                      "weekdayMismatch": { "name": "boolean" }
                    }
                  },
                  "_locale": {
                    "name": "object",
                    "value": {
                      "_calendar": {
                        "name": "object",
                        "value": {
                          "sameDay": { "name": "string" },
                          "nextDay": { "name": "string" },
                          "nextWeek": { "name": "string" },
                          "lastDay": { "name": "string" },
                          "lastWeek": { "name": "string" },
                          "sameElse": { "name": "string" }
                        }
                      },
                      "_longDateFormat": {
                        "name": "object",
                        "value": {
                          "LTS": { "name": "string" },
                          "LT": { "name": "string" },
                          "L": { "name": "string" },
                          "LL": { "name": "string" },
                          "LLL": { "name": "string" },
                          "LLLL": { "name": "string" }
                        }
                      },
                      "_invalidDate": { "name": "string" },
                      "ordinal": { "name": "function" },
                      "_dayOfMonthOrdinalParse": {
                        "name": "object",
                        "value": {}
                      },
                      "_relativeTime": {
                        "name": "object",
                        "value": {
                          "future": { "name": "string" },
                          "past": { "name": "string" },
                          "s": { "name": "string" },
                          "ss": { "name": "string" },
                          "m": { "name": "string" },
                          "mm": { "name": "string" },
                          "h": { "name": "string" },
                          "hh": { "name": "string" },
                          "d": { "name": "string" },
                          "dd": { "name": "string" },
                          "w": { "name": "string" },
                          "ww": { "name": "string" },
                          "M": { "name": "string" },
                          "MM": { "name": "string" },
                          "y": { "name": "string" },
                          "yy": { "name": "string" }
                        }
                      },
                      "_months": {
                        "name": "array",
                        "value": { "name": "string" }
                      },
                      "_monthsShort": {
                        "name": "array",
                        "value": { "name": "string" }
                      },
                      "_week": {
                        "name": "object",
                        "value": {
                          "dow": { "name": "number" },
                          "doy": { "name": "number" }
                        }
                      },
                      "_weekdays": {
                        "name": "array",
                        "value": { "name": "string" }
                      },
                      "_weekdaysMin": {
                        "name": "array",
                        "value": { "name": "string" }
                      },
                      "_weekdaysShort": {
                        "name": "array",
                        "value": { "name": "string" }
                      },
                      "_meridiemParse": { "name": "object", "value": {} },
                      "_eras": {
                        "name": "array",
                        "value": {
                          "name": "object",
                          "value": {
                            "since": { "name": "string" },
                            "until": { "name": "number" },
                            "offset": { "name": "number" },
                            "name": { "name": "string" },
                            "narrow": { "name": "string" },
                            "abbr": { "name": "string" }
                          }
                        }
                      },
                      "_abbr": { "name": "string" },
                      "_config": {
                        "name": "object",
                        "value": {
                          "calendar": {
                            "name": "object",
                            "value": {
                              "sameDay": { "name": "string" },
                              "nextDay": { "name": "string" },
                              "nextWeek": { "name": "string" },
                              "lastDay": { "name": "string" },
                              "lastWeek": { "name": "string" },
                              "sameElse": { "name": "string" }
                            }
                          },
                          "longDateFormat": {
                            "name": "object",
                            "value": {
                              "LTS": { "name": "string" },
                              "LT": { "name": "string" },
                              "L": { "name": "string" },
                              "LL": { "name": "string" },
                              "LLL": { "name": "string" },
                              "LLLL": { "name": "string" }
                            }
                          },
                          "invalidDate": { "name": "string" },
                          "ordinal": { "name": "function" },
                          "dayOfMonthOrdinalParse": {
                            "name": "object",
                            "value": {}
                          },
                          "relativeTime": {
                            "name": "object",
                            "value": {
                              "future": { "name": "string" },
                              "past": { "name": "string" },
                              "s": { "name": "string" },
                              "ss": { "name": "string" },
                              "m": { "name": "string" },
                              "mm": { "name": "string" },
                              "h": { "name": "string" },
                              "hh": { "name": "string" },
                              "d": { "name": "string" },
                              "dd": { "name": "string" },
                              "w": { "name": "string" },
                              "ww": { "name": "string" },
                              "M": { "name": "string" },
                              "MM": { "name": "string" },
                              "y": { "name": "string" },
                              "yy": { "name": "string" }
                            }
                          },
                          "months": {
                            "name": "array",
                            "value": { "name": "string" }
                          },
                          "monthsShort": {
                            "name": "array",
                            "value": { "name": "string" }
                          },
                          "week": {
                            "name": "object",
                            "value": {
                              "dow": { "name": "number" },
                              "doy": { "name": "number" }
                            }
                          },
                          "weekdays": {
                            "name": "array",
                            "value": { "name": "string" }
                          },
                          "weekdaysMin": {
                            "name": "array",
                            "value": { "name": "string" }
                          },
                          "weekdaysShort": {
                            "name": "array",
                            "value": { "name": "string" }
                          },
                          "meridiemParse": { "name": "object", "value": {} },
                          "eras": {
                            "name": "array",
                            "value": {
                              "name": "object",
                              "value": {
                                "since": { "name": "string" },
                                "until": { "name": "number" },
                                "offset": { "name": "number" },
                                "name": { "name": "string" },
                                "narrow": { "name": "string" },
                                "abbr": { "name": "string" }
                              }
                            }
                          },
                          "abbr": { "name": "string" }
                        }
                      },
                      "_dayOfMonthOrdinalParseLenient": {
                        "name": "object",
                        "value": {}
                      }
                    }
                  },
                  "_d": { "name": "object", "value": {} },
                  "_isValid": { "name": "boolean" }
                }
              },
              "name": "date"
            },
            "labelText": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": true },
              "name": "labelText",
              "required": true,
              "description": "Provide the text that will be read by a screen reader when visiting this\ncontrol",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "placeholder": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": false },
              "name": "placeholder",
              "required": false,
              "description": "Specify the placeholder attribute for the <textarea>",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "disabled": {
              "control": { "type": "boolean" },
              "type": { "name": "boolean", "required": false },
              "name": "disabled",
              "required": false,
              "description": "Specify whether the control is disabled",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "hideLabel": {
              "control": { "type": "boolean" },
              "type": { "name": "boolean", "required": false },
              "name": "hideLabel",
              "required": false,
              "description": "Specify whether you want the underlying label to be visually hidden",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "showClearDate": {
              "control": { "type": "boolean" },
              "type": { "name": "boolean" },
              "name": "showClearDate"
            },
            "invalid": {
              "control": { "type": "boolean" },
              "type": { "name": "boolean", "required": false },
              "name": "invalid",
              "required": false,
              "description": "Specify whether the control is currently invalid",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "invalidText": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": false },
              "name": "invalidText",
              "required": false,
              "description": "Provide the text that is displayed when the control is in an invalid state",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "showDefaultInputIcon": {
              "control": { "type": "boolean" },
              "type": { "name": "boolean" },
              "name": "showDefaultInputIcon"
            },
            "inputIconPosition": {
              "control": { "type": "text" },
              "type": { "name": "string" },
              "name": "inputIconPosition"
            },
            "helperText": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": false },
              "name": "helperText",
              "required": false,
              "description": "Provide text that is used alongside the control label for additional help",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "onFocus": {
              "control": { "type": "object" },
              "name": "onFocus",
              "type": { "required": false },
              "required": false,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": { "summary": "() => {}" }
              }
            },
            "onBlur": {
              "control": { "type": "object" },
              "name": "onBlur",
              "type": { "required": false },
              "required": false,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": { "summary": "() => {}" }
              }
            },
            "onChange": {
              "control": { "type": "object" },
              "name": "onChange",
              "type": { "required": false },
              "required": false,
              "description": "Optionally provide an `onChange` handler that is called whenever <textarea>\nis updated",
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": { "summary": "() => {}" }
              }
            },
            "className": {
              "control": { "type": "object" },
              "name": "className",
              "type": { "required": false },
              "required": false,
              "description": "Provide a custom className that is applied directly to the underlying\n<textarea> node",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "id": {
              "control": { "type": "object" },
              "name": "id",
              "type": { "required": false },
              "required": false,
              "description": "Provide a unique identifier for the control",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "onClick": {
              "control": { "type": "object" },
              "name": "onClick",
              "type": { "required": false },
              "required": false,
              "description": "Optionally provide an `onClick` handler that is called whenever the\n<textarea> is clicked",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "rows": {
              "control": { "type": "object" },
              "name": "rows",
              "type": { "required": false },
              "required": false,
              "description": "Specify the rows attribute for the <textarea>",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "date": "2020-10-05T07:47:42.244Z",
          "labelText": "Label text (labelText)",
          "placeholder": "Placeholder text (placeholder)",
          "disabled": false,
          "hideLabel": false,
          "showClearDate": false,
          "invalid": false,
          "invalidText": "A valid value is required",
          "showDefaultInputIcon": true,
          "inputIconPosition": "after",
          "helperText": "Optional helper text."
        },
        "argTypes": {
          "datePicker": {
            "type": { "name": "function", "required": true },
            "name": "datePicker",
            "required": true,
            "description": "Provide the SingleDatePicker as a component",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "date": {
            "control": { "type": "object" },
            "type": {
              "name": "object",
              "value": {
                "_isAMomentObject": { "name": "boolean" },
                "_isUTC": { "name": "boolean" },
                "_pf": {
                  "name": "object",
                  "value": {
                    "empty": { "name": "boolean" },
                    "unusedTokens": {
                      "name": "array",
                      "value": { "name": "other", "value": "unknown" }
                    },
                    "unusedInput": {
                      "name": "array",
                      "value": { "name": "other", "value": "unknown" }
                    },
                    "overflow": { "name": "number" },
                    "charsLeftOver": { "name": "number" },
                    "nullInput": { "name": "boolean" },
                    "invalidEra": { "name": "other", "value": "unknown" },
                    "invalidMonth": { "name": "other", "value": "unknown" },
                    "invalidFormat": { "name": "boolean" },
                    "userInvalidated": { "name": "boolean" },
                    "iso": { "name": "boolean" },
                    "parsedDateParts": {
                      "name": "array",
                      "value": { "name": "other", "value": "unknown" }
                    },
                    "era": { "name": "other", "value": "unknown" },
                    "meridiem": { "name": "other", "value": "unknown" },
                    "rfc2822": { "name": "boolean" },
                    "weekdayMismatch": { "name": "boolean" }
                  }
                },
                "_locale": {
                  "name": "object",
                  "value": {
                    "_calendar": {
                      "name": "object",
                      "value": {
                        "sameDay": { "name": "string" },
                        "nextDay": { "name": "string" },
                        "nextWeek": { "name": "string" },
                        "lastDay": { "name": "string" },
                        "lastWeek": { "name": "string" },
                        "sameElse": { "name": "string" }
                      }
                    },
                    "_longDateFormat": {
                      "name": "object",
                      "value": {
                        "LTS": { "name": "string" },
                        "LT": { "name": "string" },
                        "L": { "name": "string" },
                        "LL": { "name": "string" },
                        "LLL": { "name": "string" },
                        "LLLL": { "name": "string" }
                      }
                    },
                    "_invalidDate": { "name": "string" },
                    "ordinal": { "name": "function" },
                    "_dayOfMonthOrdinalParse": {
                      "name": "object",
                      "value": {}
                    },
                    "_relativeTime": {
                      "name": "object",
                      "value": {
                        "future": { "name": "string" },
                        "past": { "name": "string" },
                        "s": { "name": "string" },
                        "ss": { "name": "string" },
                        "m": { "name": "string" },
                        "mm": { "name": "string" },
                        "h": { "name": "string" },
                        "hh": { "name": "string" },
                        "d": { "name": "string" },
                        "dd": { "name": "string" },
                        "w": { "name": "string" },
                        "ww": { "name": "string" },
                        "M": { "name": "string" },
                        "MM": { "name": "string" },
                        "y": { "name": "string" },
                        "yy": { "name": "string" }
                      }
                    },
                    "_months": {
                      "name": "array",
                      "value": { "name": "string" }
                    },
                    "_monthsShort": {
                      "name": "array",
                      "value": { "name": "string" }
                    },
                    "_week": {
                      "name": "object",
                      "value": {
                        "dow": { "name": "number" },
                        "doy": { "name": "number" }
                      }
                    },
                    "_weekdays": {
                      "name": "array",
                      "value": { "name": "string" }
                    },
                    "_weekdaysMin": {
                      "name": "array",
                      "value": { "name": "string" }
                    },
                    "_weekdaysShort": {
                      "name": "array",
                      "value": { "name": "string" }
                    },
                    "_meridiemParse": { "name": "object", "value": {} },
                    "_eras": {
                      "name": "array",
                      "value": {
                        "name": "object",
                        "value": {
                          "since": { "name": "string" },
                          "until": { "name": "number" },
                          "offset": { "name": "number" },
                          "name": { "name": "string" },
                          "narrow": { "name": "string" },
                          "abbr": { "name": "string" }
                        }
                      }
                    },
                    "_abbr": { "name": "string" },
                    "_config": {
                      "name": "object",
                      "value": {
                        "calendar": {
                          "name": "object",
                          "value": {
                            "sameDay": { "name": "string" },
                            "nextDay": { "name": "string" },
                            "nextWeek": { "name": "string" },
                            "lastDay": { "name": "string" },
                            "lastWeek": { "name": "string" },
                            "sameElse": { "name": "string" }
                          }
                        },
                        "longDateFormat": {
                          "name": "object",
                          "value": {
                            "LTS": { "name": "string" },
                            "LT": { "name": "string" },
                            "L": { "name": "string" },
                            "LL": { "name": "string" },
                            "LLL": { "name": "string" },
                            "LLLL": { "name": "string" }
                          }
                        },
                        "invalidDate": { "name": "string" },
                        "ordinal": { "name": "function" },
                        "dayOfMonthOrdinalParse": {
                          "name": "object",
                          "value": {}
                        },
                        "relativeTime": {
                          "name": "object",
                          "value": {
                            "future": { "name": "string" },
                            "past": { "name": "string" },
                            "s": { "name": "string" },
                            "ss": { "name": "string" },
                            "m": { "name": "string" },
                            "mm": { "name": "string" },
                            "h": { "name": "string" },
                            "hh": { "name": "string" },
                            "d": { "name": "string" },
                            "dd": { "name": "string" },
                            "w": { "name": "string" },
                            "ww": { "name": "string" },
                            "M": { "name": "string" },
                            "MM": { "name": "string" },
                            "y": { "name": "string" },
                            "yy": { "name": "string" }
                          }
                        },
                        "months": {
                          "name": "array",
                          "value": { "name": "string" }
                        },
                        "monthsShort": {
                          "name": "array",
                          "value": { "name": "string" }
                        },
                        "week": {
                          "name": "object",
                          "value": {
                            "dow": { "name": "number" },
                            "doy": { "name": "number" }
                          }
                        },
                        "weekdays": {
                          "name": "array",
                          "value": { "name": "string" }
                        },
                        "weekdaysMin": {
                          "name": "array",
                          "value": { "name": "string" }
                        },
                        "weekdaysShort": {
                          "name": "array",
                          "value": { "name": "string" }
                        },
                        "meridiemParse": { "name": "object", "value": {} },
                        "eras": {
                          "name": "array",
                          "value": {
                            "name": "object",
                            "value": {
                              "since": { "name": "string" },
                              "until": { "name": "number" },
                              "offset": { "name": "number" },
                              "name": { "name": "string" },
                              "narrow": { "name": "string" },
                              "abbr": { "name": "string" }
                            }
                          }
                        },
                        "abbr": { "name": "string" }
                      }
                    },
                    "_dayOfMonthOrdinalParseLenient": {
                      "name": "object",
                      "value": {}
                    }
                  }
                },
                "_d": { "name": "object", "value": {} },
                "_isValid": { "name": "boolean" }
              }
            },
            "name": "date"
          },
          "labelText": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": true },
            "name": "labelText",
            "required": true,
            "description": "Provide the text that will be read by a screen reader when visiting this\ncontrol",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "placeholder": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": false },
            "name": "placeholder",
            "required": false,
            "description": "Specify the placeholder attribute for the <textarea>",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "disabled": {
            "control": { "type": "boolean" },
            "type": { "name": "boolean", "required": false },
            "name": "disabled",
            "required": false,
            "description": "Specify whether the control is disabled",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "hideLabel": {
            "control": { "type": "boolean" },
            "type": { "name": "boolean", "required": false },
            "name": "hideLabel",
            "required": false,
            "description": "Specify whether you want the underlying label to be visually hidden",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "showClearDate": {
            "control": { "type": "boolean" },
            "type": { "name": "boolean" },
            "name": "showClearDate"
          },
          "invalid": {
            "control": { "type": "boolean" },
            "type": { "name": "boolean", "required": false },
            "name": "invalid",
            "required": false,
            "description": "Specify whether the control is currently invalid",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "invalidText": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": false },
            "name": "invalidText",
            "required": false,
            "description": "Provide the text that is displayed when the control is in an invalid state",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "showDefaultInputIcon": {
            "control": { "type": "boolean" },
            "type": { "name": "boolean" },
            "name": "showDefaultInputIcon"
          },
          "inputIconPosition": {
            "control": { "type": "text" },
            "type": { "name": "string" },
            "name": "inputIconPosition"
          },
          "helperText": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": false },
            "name": "helperText",
            "required": false,
            "description": "Provide text that is used alongside the control label for additional help",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "onFocus": {
            "control": { "type": "object" },
            "name": "onFocus",
            "type": { "required": false },
            "required": false,
            "table": {
              "type": { "summary": "unknown" },
              "defaultValue": { "summary": "() => {}" }
            }
          },
          "onBlur": {
            "control": { "type": "object" },
            "name": "onBlur",
            "type": { "required": false },
            "required": false,
            "table": {
              "type": { "summary": "unknown" },
              "defaultValue": { "summary": "() => {}" }
            }
          },
          "onChange": {
            "control": { "type": "object" },
            "name": "onChange",
            "type": { "required": false },
            "required": false,
            "description": "Optionally provide an `onChange` handler that is called whenever <textarea>\nis updated",
            "table": {
              "type": { "summary": "unknown" },
              "defaultValue": { "summary": "() => {}" }
            }
          },
          "className": {
            "control": { "type": "object" },
            "name": "className",
            "type": { "required": false },
            "required": false,
            "description": "Provide a custom className that is applied directly to the underlying\n<textarea> node",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "id": {
            "control": { "type": "object" },
            "name": "id",
            "type": { "required": false },
            "required": false,
            "description": "Provide a unique identifier for the control",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "onClick": {
            "control": { "type": "object" },
            "name": "onClick",
            "type": { "required": false },
            "required": false,
            "description": "Optionally provide an `onClick` handler that is called whenever the\n<textarea> is clicked",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "rows": {
            "control": { "type": "object" },
            "name": "rows",
            "type": { "required": false },
            "required": false,
            "description": "Specify the rows attribute for the <textarea>",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          }
        },
        "initialArgs": {
          "date": "2020-10-05T07:47:42.244Z",
          "labelText": "Label text (labelText)",
          "placeholder": "Placeholder text (placeholder)",
          "disabled": false,
          "hideLabel": false,
          "showClearDate": false,
          "invalid": false,
          "invalidText": "A valid value is required",
          "showDefaultInputIcon": true,
          "inputIconPosition": "after",
          "helperText": "Optional helper text."
        }
      },
      "components-datepicker--date-picker-field": {
        "id": "components-datepicker--date-picker-field",
        "kind": "Components/DatePicker",
        "name": "Date Picker Field",
        "story": "Date Picker Field",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": {
            "source": "(args) => (\n  <Field\n    {...args}\n    format={(value) => (value ? moment(value) : undefined)}\n    normalize={(data) => data && data.value && data.value.format()}\n  />\n)"
          },
          "__id": "components-datepicker--date-picker-field",
          "args": {
            "name": "inputname",
            "helperText": "inputname",
            "labelText": "Select a date"
          },
          "argTypes": {
            "component": {
              "type": { "name": "function" },
              "name": "component"
            },
            "inputComponent": {
              "type": { "name": "function" },
              "name": "inputComponent"
            },
            "datePicker": {
              "type": { "name": "function", "required": true },
              "name": "datePicker",
              "required": true,
              "description": "Provide the SingleDatePicker as a component",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "name": {
              "control": { "type": "text" },
              "type": { "name": "string" },
              "name": "name"
            },
            "helperText": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": false },
              "name": "helperText",
              "required": false,
              "description": "Provide text that is used alongside the control label for additional help",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "labelText": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": true },
              "name": "labelText",
              "required": true,
              "description": "Provide the text that will be read by a screen reader when visiting this\ncontrol",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "onFocus": {
              "control": { "type": "object" },
              "name": "onFocus",
              "type": { "required": false },
              "required": false,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": { "summary": "() => {}" }
              }
            },
            "onBlur": {
              "control": { "type": "object" },
              "name": "onBlur",
              "type": { "required": false },
              "required": false,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": { "summary": "() => {}" }
              }
            },
            "onChange": {
              "control": { "type": "object" },
              "name": "onChange",
              "type": { "required": false },
              "required": false,
              "description": "Optionally provide an `onChange` handler that is called whenever <textarea>\nis updated",
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": { "summary": "() => {}" }
              }
            },
            "className": {
              "control": { "type": "object" },
              "name": "className",
              "type": { "required": false },
              "required": false,
              "description": "Provide a custom className that is applied directly to the underlying\n<textarea> node",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "disabled": {
              "control": { "type": "object" },
              "name": "disabled",
              "type": { "required": false },
              "required": false,
              "description": "Specify whether the control is disabled",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "id": {
              "control": { "type": "object" },
              "name": "id",
              "type": { "required": false },
              "required": false,
              "description": "Provide a unique identifier for the control",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "onClick": {
              "control": { "type": "object" },
              "name": "onClick",
              "type": { "required": false },
              "required": false,
              "description": "Optionally provide an `onClick` handler that is called whenever the\n<textarea> is clicked",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "placeholder": {
              "control": { "type": "object" },
              "name": "placeholder",
              "type": { "required": false },
              "required": false,
              "description": "Specify the placeholder attribute for the <textarea>",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "rows": {
              "control": { "type": "object" },
              "name": "rows",
              "type": { "required": false },
              "required": false,
              "description": "Specify the rows attribute for the <textarea>",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "invalid": {
              "control": { "type": "object" },
              "name": "invalid",
              "type": { "required": false },
              "required": false,
              "description": "Specify whether the control is currently invalid",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "invalidText": {
              "control": { "type": "object" },
              "name": "invalidText",
              "type": { "required": false },
              "required": false,
              "description": "Provide the text that is displayed when the control is in an invalid state",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "hideLabel": {
              "control": { "type": "object" },
              "name": "hideLabel",
              "type": { "required": false },
              "required": false,
              "description": "Specify whether you want the underlying label to be visually hidden",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "name": "inputname",
          "helperText": "inputname",
          "labelText": "Select a date"
        },
        "argTypes": {
          "component": { "type": { "name": "function" }, "name": "component" },
          "inputComponent": {
            "type": { "name": "function" },
            "name": "inputComponent"
          },
          "datePicker": {
            "type": { "name": "function", "required": true },
            "name": "datePicker",
            "required": true,
            "description": "Provide the SingleDatePicker as a component",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "name": {
            "control": { "type": "text" },
            "type": { "name": "string" },
            "name": "name"
          },
          "helperText": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": false },
            "name": "helperText",
            "required": false,
            "description": "Provide text that is used alongside the control label for additional help",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "labelText": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": true },
            "name": "labelText",
            "required": true,
            "description": "Provide the text that will be read by a screen reader when visiting this\ncontrol",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "onFocus": {
            "control": { "type": "object" },
            "name": "onFocus",
            "type": { "required": false },
            "required": false,
            "table": {
              "type": { "summary": "unknown" },
              "defaultValue": { "summary": "() => {}" }
            }
          },
          "onBlur": {
            "control": { "type": "object" },
            "name": "onBlur",
            "type": { "required": false },
            "required": false,
            "table": {
              "type": { "summary": "unknown" },
              "defaultValue": { "summary": "() => {}" }
            }
          },
          "onChange": {
            "control": { "type": "object" },
            "name": "onChange",
            "type": { "required": false },
            "required": false,
            "description": "Optionally provide an `onChange` handler that is called whenever <textarea>\nis updated",
            "table": {
              "type": { "summary": "unknown" },
              "defaultValue": { "summary": "() => {}" }
            }
          },
          "className": {
            "control": { "type": "object" },
            "name": "className",
            "type": { "required": false },
            "required": false,
            "description": "Provide a custom className that is applied directly to the underlying\n<textarea> node",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "disabled": {
            "control": { "type": "object" },
            "name": "disabled",
            "type": { "required": false },
            "required": false,
            "description": "Specify whether the control is disabled",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "id": {
            "control": { "type": "object" },
            "name": "id",
            "type": { "required": false },
            "required": false,
            "description": "Provide a unique identifier for the control",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "onClick": {
            "control": { "type": "object" },
            "name": "onClick",
            "type": { "required": false },
            "required": false,
            "description": "Optionally provide an `onClick` handler that is called whenever the\n<textarea> is clicked",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "placeholder": {
            "control": { "type": "object" },
            "name": "placeholder",
            "type": { "required": false },
            "required": false,
            "description": "Specify the placeholder attribute for the <textarea>",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "rows": {
            "control": { "type": "object" },
            "name": "rows",
            "type": { "required": false },
            "required": false,
            "description": "Specify the rows attribute for the <textarea>",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "invalid": {
            "control": { "type": "object" },
            "name": "invalid",
            "type": { "required": false },
            "required": false,
            "description": "Specify whether the control is currently invalid",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "invalidText": {
            "control": { "type": "object" },
            "name": "invalidText",
            "type": { "required": false },
            "required": false,
            "description": "Provide the text that is displayed when the control is in an invalid state",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "hideLabel": {
            "control": { "type": "object" },
            "name": "hideLabel",
            "type": { "required": false },
            "required": false,
            "description": "Specify whether you want the underlying label to be visually hidden",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          }
        },
        "initialArgs": {
          "name": "inputname",
          "helperText": "inputname",
          "labelText": "Select a date"
        }
      },
      "components-datepicker--date-range-picker-field": {
        "id": "components-datepicker--date-range-picker-field",
        "kind": "Components/DatePicker",
        "name": "Date Range Picker Field",
        "story": "Date Range Picker Field",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": {
            "source": "(args) => (\n  <Field\n    {...args}\n    format={(value) =>\n      value\n        ? {\n            startDate: moment(value.startDate),\n            endDate: moment(value.endDate),\n          }\n        : undefined\n    }\n  />\n)"
          },
          "__id": "components-datepicker--date-range-picker-field",
          "args": { "name": "datepicker", "labelText": "Select a date range" },
          "argTypes": {
            "component": {
              "type": { "name": "function" },
              "name": "component"
            },
            "inputComponent": {
              "type": { "name": "function" },
              "name": "inputComponent"
            },
            "datePicker": {
              "type": { "name": "function", "required": true },
              "name": "datePicker",
              "required": true,
              "description": "Provide the SingleDatePicker as a component",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "name": {
              "control": { "type": "text" },
              "type": { "name": "string" },
              "name": "name"
            },
            "labelText": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": true },
              "name": "labelText",
              "required": true,
              "description": "Provide the text that will be read by a screen reader when visiting this\ncontrol",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "onFocus": {
              "control": { "type": "object" },
              "name": "onFocus",
              "type": { "required": false },
              "required": false,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": { "summary": "() => {}" }
              }
            },
            "onBlur": {
              "control": { "type": "object" },
              "name": "onBlur",
              "type": { "required": false },
              "required": false,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": { "summary": "() => {}" }
              }
            },
            "onChange": {
              "control": { "type": "object" },
              "name": "onChange",
              "type": { "required": false },
              "required": false,
              "description": "Optionally provide an `onChange` handler that is called whenever <textarea>\nis updated",
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": { "summary": "() => {}" }
              }
            },
            "className": {
              "control": { "type": "object" },
              "name": "className",
              "type": { "required": false },
              "required": false,
              "description": "Provide a custom className that is applied directly to the underlying\n<textarea> node",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "disabled": {
              "control": { "type": "object" },
              "name": "disabled",
              "type": { "required": false },
              "required": false,
              "description": "Specify whether the control is disabled",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "id": {
              "control": { "type": "object" },
              "name": "id",
              "type": { "required": false },
              "required": false,
              "description": "Provide a unique identifier for the control",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "onClick": {
              "control": { "type": "object" },
              "name": "onClick",
              "type": { "required": false },
              "required": false,
              "description": "Optionally provide an `onClick` handler that is called whenever the\n<textarea> is clicked",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "placeholder": {
              "control": { "type": "object" },
              "name": "placeholder",
              "type": { "required": false },
              "required": false,
              "description": "Specify the placeholder attribute for the <textarea>",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "rows": {
              "control": { "type": "object" },
              "name": "rows",
              "type": { "required": false },
              "required": false,
              "description": "Specify the rows attribute for the <textarea>",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "invalid": {
              "control": { "type": "object" },
              "name": "invalid",
              "type": { "required": false },
              "required": false,
              "description": "Specify whether the control is currently invalid",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "invalidText": {
              "control": { "type": "object" },
              "name": "invalidText",
              "type": { "required": false },
              "required": false,
              "description": "Provide the text that is displayed when the control is in an invalid state",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "helperText": {
              "control": { "type": "object" },
              "name": "helperText",
              "type": { "required": false },
              "required": false,
              "description": "Provide text that is used alongside the control label for additional help",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "hideLabel": {
              "control": { "type": "object" },
              "name": "hideLabel",
              "type": { "required": false },
              "required": false,
              "description": "Specify whether you want the underlying label to be visually hidden",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            }
          },
          "__isArgsStory": true
        },
        "args": { "name": "datepicker", "labelText": "Select a date range" },
        "argTypes": {
          "component": { "type": { "name": "function" }, "name": "component" },
          "inputComponent": {
            "type": { "name": "function" },
            "name": "inputComponent"
          },
          "datePicker": {
            "type": { "name": "function", "required": true },
            "name": "datePicker",
            "required": true,
            "description": "Provide the SingleDatePicker as a component",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "name": {
            "control": { "type": "text" },
            "type": { "name": "string" },
            "name": "name"
          },
          "labelText": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": true },
            "name": "labelText",
            "required": true,
            "description": "Provide the text that will be read by a screen reader when visiting this\ncontrol",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "onFocus": {
            "control": { "type": "object" },
            "name": "onFocus",
            "type": { "required": false },
            "required": false,
            "table": {
              "type": { "summary": "unknown" },
              "defaultValue": { "summary": "() => {}" }
            }
          },
          "onBlur": {
            "control": { "type": "object" },
            "name": "onBlur",
            "type": { "required": false },
            "required": false,
            "table": {
              "type": { "summary": "unknown" },
              "defaultValue": { "summary": "() => {}" }
            }
          },
          "onChange": {
            "control": { "type": "object" },
            "name": "onChange",
            "type": { "required": false },
            "required": false,
            "description": "Optionally provide an `onChange` handler that is called whenever <textarea>\nis updated",
            "table": {
              "type": { "summary": "unknown" },
              "defaultValue": { "summary": "() => {}" }
            }
          },
          "className": {
            "control": { "type": "object" },
            "name": "className",
            "type": { "required": false },
            "required": false,
            "description": "Provide a custom className that is applied directly to the underlying\n<textarea> node",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "disabled": {
            "control": { "type": "object" },
            "name": "disabled",
            "type": { "required": false },
            "required": false,
            "description": "Specify whether the control is disabled",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "id": {
            "control": { "type": "object" },
            "name": "id",
            "type": { "required": false },
            "required": false,
            "description": "Provide a unique identifier for the control",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "onClick": {
            "control": { "type": "object" },
            "name": "onClick",
            "type": { "required": false },
            "required": false,
            "description": "Optionally provide an `onClick` handler that is called whenever the\n<textarea> is clicked",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "placeholder": {
            "control": { "type": "object" },
            "name": "placeholder",
            "type": { "required": false },
            "required": false,
            "description": "Specify the placeholder attribute for the <textarea>",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "rows": {
            "control": { "type": "object" },
            "name": "rows",
            "type": { "required": false },
            "required": false,
            "description": "Specify the rows attribute for the <textarea>",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "invalid": {
            "control": { "type": "object" },
            "name": "invalid",
            "type": { "required": false },
            "required": false,
            "description": "Specify whether the control is currently invalid",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "invalidText": {
            "control": { "type": "object" },
            "name": "invalidText",
            "type": { "required": false },
            "required": false,
            "description": "Provide the text that is displayed when the control is in an invalid state",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "helperText": {
            "control": { "type": "object" },
            "name": "helperText",
            "type": { "required": false },
            "required": false,
            "description": "Provide text that is used alongside the control label for additional help",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "hideLabel": {
            "control": { "type": "object" },
            "name": "hideLabel",
            "type": { "required": false },
            "required": false,
            "description": "Specify whether you want the underlying label to be visually hidden",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          }
        },
        "initialArgs": {
          "name": "datepicker",
          "labelText": "Select a date range"
        }
      },
      "components-footer--regular": {
        "id": "components-footer--regular",
        "kind": "Components/Footer",
        "name": "Regular",
        "story": "Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": {
            "source": "(args) => (\n  <Footer {...args}>\n    <div className=\"wfp--footer__info\">\n      <div className=\"wfp--footer__info__item\">\n        <p className=\"wfp--footer__label\">A label</p>\n        <ul className=\"wfp--footer__list\">\n          <li>\n            <Link href=\"http://www.wfp.org\">First Link</Link>\n          </li>\n          <li>\n            <Link href=\"http://www.wfp.org\">Second Link</Link>\n          </li>\n        </ul>\n      </div>\n      <div className=\"wfp--footer__info__item\">\n        <p className=\"wfp--footer__label\">Another label</p>\n        <ul className=\"wfp--footer__list\">\n          <li>\n            <Link href=\"http://www.wfp.org\">First Link</Link>\n          </li>\n          <li>\n            <Link href=\"http://www.wfp.org\">Second Link</Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </Footer>\n)"
          },
          "__id": "components-footer--regular",
          "args": {},
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "The content of the footer containing relevant links",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Additional className which will be added",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "external": {
              "control": { "type": "boolean" },
              "name": "external",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Meta content, usually the copyright notice",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "metaContent": {
              "control": { "type": "object" },
              "name": "metaContent",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Meta content, usually the copyright notice",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "logo": {
              "control": { "type": "object" },
              "name": "logo",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Optional WFP logo for mobile devices, can be used if the Logo should be provided by the CDN",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "logoExtended": {
              "control": { "type": "object" },
              "name": "logoExtended",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Optional WFP logo for desktop devices, can be used if the Logo should be provided by the CDN",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "pageWidth": {
              "control": {
                "type": "radio",
                "options": ["xs", "sm", "md", "lg", "full"]
              },
              "name": "pageWidth",
              "type": {
                "required": false,
                "name": "enum",
                "value": ["xs", "sm", "md", "lg", "full"]
              },
              "required": false,
              "description": "The width of the `Wrapper` component",
              "defaultValue": null,
              "sbType": {
                "name": "enum",
                "value": ["xs", "sm", "md", "lg", "full"]
              },
              "table": {
                "type": { "summary": "'xs' | 'sm' | 'md' | 'lg' | 'full'" },
                "defaultValue": null
              }
            },
            "subTitle": {
              "control": { "type": "object" },
              "name": "subTitle",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "The WFP logo",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {},
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "The content of the footer containing relevant links",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Additional className which will be added",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "external": {
            "control": { "type": "boolean" },
            "name": "external",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Meta content, usually the copyright notice",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "metaContent": {
            "control": { "type": "object" },
            "name": "metaContent",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Meta content, usually the copyright notice",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "logo": {
            "control": { "type": "object" },
            "name": "logo",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Optional WFP logo for mobile devices, can be used if the Logo should be provided by the CDN",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "logoExtended": {
            "control": { "type": "object" },
            "name": "logoExtended",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Optional WFP logo for desktop devices, can be used if the Logo should be provided by the CDN",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "pageWidth": {
            "control": {
              "type": "radio",
              "options": ["xs", "sm", "md", "lg", "full"]
            },
            "name": "pageWidth",
            "type": {
              "required": false,
              "name": "enum",
              "value": ["xs", "sm", "md", "lg", "full"]
            },
            "required": false,
            "description": "The width of the `Wrapper` component",
            "defaultValue": null,
            "sbType": {
              "name": "enum",
              "value": ["xs", "sm", "md", "lg", "full"]
            },
            "table": {
              "type": { "summary": "'xs' | 'sm' | 'md' | 'lg' | 'full'" },
              "defaultValue": null
            }
          },
          "subTitle": {
            "control": { "type": "object" },
            "name": "subTitle",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "The WFP logo",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          }
        },
        "initialArgs": {}
      },
      "components-footer--external": {
        "id": "components-footer--external",
        "kind": "Components/Footer",
        "name": "External",
        "story": "External",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": {
            "source": "(args) => (\n  <Footer\n    external\n    metaContent=\"2019 © World Food Programme\"\n    secondary={\n      <div>\n        Via C. G. Viola 68 Parco dei Medici\n        <br />\n        00148 Rome, Italy\n      </div>\n    }>\n    <div>\n      The United Nations World Food Programme - saving lives in emergencies and\n      changing lives for millions through sustainable development. WFP works in\n      more than 80 countries around the world, feeding people caught in conflict\n      and disasters, and laying the foundations for a better future.\n      <br />\n      <Link href=\"http://www.wfp.org\">Custom Links</Link>\n    </div>\n  </Footer>\n)"
          },
          "__id": "components-footer--external",
          "args": {},
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "The content of the footer containing relevant links",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Additional className which will be added",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "external": {
              "control": { "type": "boolean" },
              "name": "external",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Meta content, usually the copyright notice",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "metaContent": {
              "control": { "type": "object" },
              "name": "metaContent",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Meta content, usually the copyright notice",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "logo": {
              "control": { "type": "object" },
              "name": "logo",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Optional WFP logo for mobile devices, can be used if the Logo should be provided by the CDN",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "logoExtended": {
              "control": { "type": "object" },
              "name": "logoExtended",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Optional WFP logo for desktop devices, can be used if the Logo should be provided by the CDN",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "pageWidth": {
              "control": {
                "type": "radio",
                "options": ["xs", "sm", "md", "lg", "full"]
              },
              "name": "pageWidth",
              "type": {
                "required": false,
                "name": "enum",
                "value": ["xs", "sm", "md", "lg", "full"]
              },
              "required": false,
              "description": "The width of the `Wrapper` component",
              "defaultValue": null,
              "sbType": {
                "name": "enum",
                "value": ["xs", "sm", "md", "lg", "full"]
              },
              "table": {
                "type": { "summary": "'xs' | 'sm' | 'md' | 'lg' | 'full'" },
                "defaultValue": null
              }
            },
            "subTitle": {
              "control": { "type": "object" },
              "name": "subTitle",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "The WFP logo",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {},
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "The content of the footer containing relevant links",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Additional className which will be added",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "external": {
            "control": { "type": "boolean" },
            "name": "external",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Meta content, usually the copyright notice",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "metaContent": {
            "control": { "type": "object" },
            "name": "metaContent",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Meta content, usually the copyright notice",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "logo": {
            "control": { "type": "object" },
            "name": "logo",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Optional WFP logo for mobile devices, can be used if the Logo should be provided by the CDN",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "logoExtended": {
            "control": { "type": "object" },
            "name": "logoExtended",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Optional WFP logo for desktop devices, can be used if the Logo should be provided by the CDN",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "pageWidth": {
            "control": {
              "type": "radio",
              "options": ["xs", "sm", "md", "lg", "full"]
            },
            "name": "pageWidth",
            "type": {
              "required": false,
              "name": "enum",
              "value": ["xs", "sm", "md", "lg", "full"]
            },
            "required": false,
            "description": "The width of the `Wrapper` component",
            "defaultValue": null,
            "sbType": {
              "name": "enum",
              "value": ["xs", "sm", "md", "lg", "full"]
            },
            "table": {
              "type": { "summary": "'xs' | 'sm' | 'md' | 'lg' | 'full'" },
              "defaultValue": null
            }
          },
          "subTitle": {
            "control": { "type": "object" },
            "name": "subTitle",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "The WFP logo",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          }
        },
        "initialArgs": {}
      },
      "forms-form--default": {
        "id": "forms-form--default",
        "kind": "Forms/Form",
        "name": "Default",
        "story": "Default",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": {
            "source": "(args) => {\n  return (\n    <Form {...args}>\n      <FormGroup legendText=\"Checkbox heading\">\n        <Checkbox defaultChecked labelText=\"Checkbox label\" id=\"checkbox-0\" />\n        <Checkbox labelText=\"Checkbox label2\" id=\"checkbox-1\" />\n        <Checkbox disabled labelText=\"Checkbox label3\" id=\"checkbox-2\" />\n      </FormGroup>\n\n      <NumberInput\n        id=\"number-input-1\"\n        label=\"Number Input\"\n        labelText=\"Text Input label\"\n        iconDescription=\"icon desc\"\n        min={0}\n        max={100}\n        value={50}\n        step={10}\n      />\n\n      <FormGroup>\n        <Toggle id=\"toggle-1\" />\n        <Toggle disabled id=\"toggle-2\" />\n      </FormGroup>\n\n      <FormGroup>\n        <FileUploader\n          id=\"file-1\"\n          labelDescription=\"Choose Files...\"\n          buttonLabel=\"Add files\"\n        />\n      </FormGroup>\n\n      <FormGroup legendText=\"Radio Button heading\">\n        <InputGroup name=\"input-group\" defaultSelected=\"default-selected\">\n          <RadioButton\n            value=\"standard\"\n            id=\"radio-1\"\n            labelText=\"Standard Radio Button\"\n          />\n          <RadioButton\n            value=\"default-selected\"\n            labelText=\"Default Selected Radio Button\"\n            id=\"radio-2\"\n          />\n          <RadioButton\n            value=\"blue\"\n            labelText=\"Standard Radio Button\"\n            id=\"radio-3\"\n          />\n          <RadioButton\n            value=\"disabled\"\n            labelText=\"Disabled Radio Button\"\n            id=\"radio-4\"\n            disabled\n          />\n        </InputGroup>\n      </FormGroup>\n\n      <FormGroup legendText=\"Radio Button heading\">\n        <Search id=\"search-1\" labelText=\"Search\" placeHolderText=\"Search\" />\n      </FormGroup>\n\n      <Select id=\"select-1\" defaultValue=\"placeholder-item\">\n        <SelectItem\n          disabled\n          hidden\n          value=\"placeholder-item\"\n          text=\"Choose an option\"\n        />\n        <SelectItem value=\"option-1\" text=\"Option 1\" />\n        <SelectItem value=\"option-2\" text=\"Option 2\" />\n        <SelectItem value=\"option-3\" text=\"Option 3\" />\n      </Select>\n\n      <TextInput\n        id=\"test2\"\n        labelText=\"Text Input label\"\n        placeholder=\"Placeholder text\"\n      />\n\n      <TextInput\n        type=\"password\"\n        required\n        pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\"\n        id=\"test3\"\n        labelText=\"Password\"\n      />\n\n      <TextInput\n        type=\"password\"\n        required\n        pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\"\n        id=\"test4\"\n        labelText=\"Password\"\n        invalid={true}\n        invalidText=\"Your password must be at least 6 characters as well as contain at least one uppercase, one lowercase, and one number.\"\n      />\n\n      <TextArea\n        labelText=\"Text Area label\"\n        placeholder=\"Placeholder text\"\n        id=\"test5\"\n        cols={50}\n        rows={4}\n      />\n\n      <Button type=\"submit\" className=\"some-class\">\n        Submit\n      </Button>\n    </Form>\n  );\n}"
          },
          "__id": "forms-form--default",
          "args": { "className": "some-class", "longForm": true },
          "argTypes": {
            "className": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": false },
              "name": "className",
              "required": false,
              "description": "Provide a custom className to be applied on the containing <form> node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "longForm": {
              "control": { "type": "boolean" },
              "type": { "name": "boolean", "required": false },
              "name": "longForm",
              "required": false,
              "description": "Default margin is added to each form input",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Provide children to be rendered inside of the <form> element",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": { "className": "some-class", "longForm": true },
        "argTypes": {
          "className": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": false },
            "name": "className",
            "required": false,
            "description": "Provide a custom className to be applied on the containing <form> node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "longForm": {
            "control": { "type": "boolean" },
            "type": { "name": "boolean", "required": false },
            "name": "longForm",
            "required": false,
            "description": "Default margin is added to each form input",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Provide children to be rendered inside of the <form> element",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          }
        },
        "initialArgs": { "className": "some-class", "longForm": true }
      },
      "forms-formgroup--default": {
        "id": "forms-formgroup--default",
        "kind": "Forms/FormGroup",
        "name": "Default",
        "story": "Default",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": {
            "source": "(args) => (\n  <FormGroup {...args} className=\"wfp--form-long\">\n    <TextInput\n      id=\"test1\"\n      labelText=\"Text Input label\"\n      placeholder=\"Placeholder text\"\n    />\n    <TextInput\n      id=\"test2\"\n      labelText=\"Text Input label\"\n      placeholder=\"Placeholder text\"\n    />\n    <TextInput\n      id=\"test3\"\n      labelText=\"Text Input label\"\n      placeholder=\"Placeholder text\"\n    />\n  </FormGroup>\n)"
          },
          "__id": "forms-formgroup--default",
          "args": { "legendText": "FormGroup heading" },
          "argTypes": {
            "legendText": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": false },
              "name": "legendText",
              "required": false,
              "description": "Specify a title for the `FormGroup`",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Specify the contained form elements",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify an optional className to be applied to the wrapper node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "invalid": {
              "control": { "type": "boolean" },
              "name": "invalid",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify an invalid attribute for the `fieldset`",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "message": {
              "control": { "type": "boolean" },
              "name": "message",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify if a message is shown for the `fieldset`",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "messageText": {
              "control": { "type": "text" },
              "name": "messageText",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify a message for the `fieldset`",
              "defaultValue": "",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "''" }
              }
            }
          },
          "__isArgsStory": true
        },
        "args": { "legendText": "FormGroup heading" },
        "argTypes": {
          "legendText": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": false },
            "name": "legendText",
            "required": false,
            "description": "Specify a title for the `FormGroup`",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Specify the contained form elements",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify an optional className to be applied to the wrapper node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "invalid": {
            "control": { "type": "boolean" },
            "name": "invalid",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify an invalid attribute for the `fieldset`",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "message": {
            "control": { "type": "boolean" },
            "name": "message",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify if a message is shown for the `fieldset`",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "messageText": {
            "control": { "type": "text" },
            "name": "messageText",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify a message for the `fieldset`",
            "defaultValue": "",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "''" }
            }
          }
        },
        "initialArgs": { "legendText": "FormGroup heading" }
      },
      "forms-formhint--regular": {
        "id": "forms-formhint--regular",
        "kind": "Forms/FormHint",
        "name": "Regular",
        "story": "Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\nYou can customize the content by using `BannerNavigation`.\n"
          },
          "storySource": {
            "source": "(args) => (\n  <label className=\"wfp--label\" htmlFor=\"input\">\n    The Label <FormHint {...args} />\n  </label>\n)"
          },
          "__id": "forms-formhint--regular",
          "args": { "children": "The hint text" },
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "children",
              "required": false,
              "description": "The tooltips content can be a string or an component",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify an optional className to be applied to the wrapper node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "icon": {
              "control": { "type": "object" },
              "name": "icon",
              "type": { "required": false, "name": "object" },
              "required": false,
              "description": "Specify a custom icon for the hint",
              "defaultValue": "iconInfoSolid",
              "sbType": { "name": "object" },
              "table": {
                "type": { "summary": "object" },
                "defaultValue": { "summary": "iconInfoSolid" }
              }
            }
          },
          "__isArgsStory": true
        },
        "args": { "icon": "iconInfoSolid", "children": "The hint text" },
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "children",
            "required": false,
            "description": "The tooltips content can be a string or an component",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify an optional className to be applied to the wrapper node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "icon": {
            "control": { "type": "object" },
            "name": "icon",
            "type": { "required": false, "name": "object" },
            "required": false,
            "description": "Specify a custom icon for the hint",
            "defaultValue": "iconInfoSolid",
            "sbType": { "name": "object" },
            "table": {
              "type": { "summary": "object" },
              "defaultValue": { "summary": "iconInfoSolid" }
            }
          }
        },
        "initialArgs": { "icon": "iconInfoSolid", "children": "The hint text" }
      },
      "forms-formhint--input": {
        "id": "forms-formhint--input",
        "kind": "Forms/FormHint",
        "name": "Input",
        "story": "Input",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": {
            "source": "(args) => (\n  <TextInput\n    labelText={\n      <>\n        The label\n        <FormHint>\n          A longer description. Lorem ipsum dolor sit amet, consetetur\n          sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et\n          dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam\n          et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea\n          takimata sanctus est{' '}\n        </FormHint>\n      </>\n    }\n    helperText=\"The helper text provides additional information\"\n  />\n)"
          },
          "__id": "forms-formhint--input",
          "args": {},
          "argTypes": {
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify an optional className to be applied to the wrapper node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "The tooltips content can be a string or an component",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "icon": {
              "control": { "type": "object" },
              "name": "icon",
              "type": { "required": false, "name": "object" },
              "required": false,
              "description": "Specify a custom icon for the hint",
              "defaultValue": "iconInfoSolid",
              "sbType": { "name": "object" },
              "table": {
                "type": { "summary": "object" },
                "defaultValue": { "summary": "iconInfoSolid" }
              }
            }
          },
          "__isArgsStory": true
        },
        "args": { "icon": "iconInfoSolid" },
        "argTypes": {
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify an optional className to be applied to the wrapper node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "The tooltips content can be a string or an component",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "icon": {
            "control": { "type": "object" },
            "name": "icon",
            "type": { "required": false, "name": "object" },
            "required": false,
            "description": "Specify a custom icon for the hint",
            "defaultValue": "iconInfoSolid",
            "sbType": { "name": "object" },
            "table": {
              "type": { "summary": "object" },
              "defaultValue": { "summary": "iconInfoSolid" }
            }
          }
        },
        "initialArgs": { "icon": "iconInfoSolid" }
      },
      "forms-formlabel--regular": {
        "id": "forms-formlabel--regular",
        "kind": "Forms/FormLabel",
        "name": "Regular",
        "story": "Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\nYou can customize the content by using `BannerNavigation`.\n"
          },
          "storySource": {
            "source": "(args) => <FormLabel {...args}>Label text</FormLabel>"
          },
          "__id": "forms-formlabel--regular",
          "args": {},
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "The content of the label",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Additional `class` attributes",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "id": {
              "control": { "type": "text" },
              "name": "id",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The ID of the related input which will be used as `htmlFor`",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {},
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "The content of the label",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Additional `class` attributes",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "id": {
            "control": { "type": "text" },
            "name": "id",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The ID of the related input which will be used as `htmlFor`",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          }
        },
        "initialArgs": {}
      },
      "forms-formwizard--default": {
        "id": "forms-formwizard--default",
        "kind": "Forms/FormWizard",
        "name": "Default",
        "story": "Default",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": {
            "source": "(args) => (\n  <FormWizard {...args} sidebar={<div>The Sidebar content</div>}>\n    The Main content\n  </FormWizard>\n)"
          },
          "__id": "forms-formwizard--default",
          "args": { "children": "FormWizard" },
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": true, "value": "node" },
              "name": "children",
              "required": true,
              "description": "Specify the custom\nmain content component",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify a custom css class\nwhich is added to the container",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "sidebar": {
              "control": { "type": "object" },
              "name": "sidebar",
              "type": { "required": true, "name": "other", "value": "node" },
              "required": true,
              "description": "Specify the custom\nsidebar component",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "stickySidebar": {
              "control": { "type": "boolean" },
              "name": "stickySidebar",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Sticky sidebar",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": { "children": "FormWizard" },
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": true, "value": "node" },
            "name": "children",
            "required": true,
            "description": "Specify the custom\nmain content component",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify a custom css class\nwhich is added to the container",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "sidebar": {
            "control": { "type": "object" },
            "name": "sidebar",
            "type": { "required": true, "name": "other", "value": "node" },
            "required": true,
            "description": "Specify the custom\nsidebar component",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "stickySidebar": {
            "control": { "type": "boolean" },
            "name": "stickySidebar",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Sticky sidebar",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          }
        },
        "initialArgs": { "children": "FormWizard" }
      },
      "components-icon--regular": {
        "id": "components-icon--regular",
        "kind": "Components/Icon",
        "name": "Regular",
        "story": "Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\nYou can customize the content by using `BannerNavigation`.\n"
          },
          "storySource": { "source": "(args) => <Icon {...args} />" },
          "__id": "components-icon--regular",
          "args": {
            "icon": {
              "id": "icon--add",
              "name": "icon--add",
              "tags": "icon--add",
              "styles": "",
              "viewBox": "0 0 10 10",
              "width": "10",
              "height": "10",
              "svgData": {
                "circles": "",
                "ellipses": "",
                "paths": [{ "d": "M6 4h4v2H6v4H4V6H0V4h4V0h2v4z" }],
                "polygons": "",
                "polylines": "",
                "rects": ""
              }
            }
          },
          "argTypes": {
            "icon": {
              "control": { "type": "object" },
              "type": {
                "name": "object",
                "value": {
                  "id": { "name": "string" },
                  "name": { "name": "string" },
                  "tags": { "name": "string" },
                  "styles": { "name": "string" },
                  "viewBox": { "name": "string" },
                  "width": { "name": "string" },
                  "height": { "name": "string" },
                  "svgData": {
                    "name": "object",
                    "value": {
                      "circles": { "name": "string" },
                      "ellipses": { "name": "string" },
                      "paths": {
                        "name": "array",
                        "value": {
                          "name": "object",
                          "value": { "d": { "name": "string" } }
                        }
                      },
                      "polygons": { "name": "string" },
                      "polylines": { "name": "string" },
                      "rects": { "name": "string" }
                    }
                  }
                }
              },
              "name": "icon"
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The CSS class name.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "description": {
              "control": { "type": "text" },
              "name": "description",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The icon description.",
              "defaultValue": "Provide a description that will be used as the title",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": {
                  "summary": "'Provide a description that will be used as the title'"
                }
              }
            },
            "fill": {
              "control": { "type": "text" },
              "name": "fill",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The `svg` `fill` attribute.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "fillRule": {
              "control": { "type": "text" },
              "name": "fillRule",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The `svg` `fillRule` attribute.",
              "defaultValue": "evenodd",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "'evenodd'" }
              }
            },
            "height": {
              "control": { "type": "text" },
              "name": "height",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The `svg` `height` attribute.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "role": {
              "control": { "type": "text" },
              "name": "role",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The `role` attribute.",
              "defaultValue": "img",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "'img'" }
              }
            },
            "style": {
              "control": { "type": "object" },
              "name": "style",
              "type": { "required": false, "name": "object" },
              "required": false,
              "description": "The CSS styles.",
              "defaultValue": null,
              "sbType": { "name": "object" },
              "table": { "type": { "summary": "object" }, "defaultValue": null }
            },
            "viewBox": {
              "control": { "type": "text" },
              "name": "viewBox",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The `svg` `viewbox` attribute.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "width": {
              "control": { "type": "text" },
              "name": "width",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The `svg` `width` attribute.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "iconRef": {
              "name": "iconRef",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "The `ref` callback for the icon.",
              "defaultValue": null,
              "sbType": { "name": "function" },
              "table": { "type": { "summary": "func" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "description": "Provide a description that will be used as the title",
          "fillRule": "evenodd",
          "role": "img",
          "icon": {
            "id": "icon--add",
            "name": "icon--add",
            "tags": "icon--add",
            "styles": "",
            "viewBox": "0 0 10 10",
            "width": "10",
            "height": "10",
            "svgData": {
              "circles": "",
              "ellipses": "",
              "paths": [{ "d": "M6 4h4v2H6v4H4V6H0V4h4V0h2v4z" }],
              "polygons": "",
              "polylines": "",
              "rects": ""
            }
          }
        },
        "argTypes": {
          "icon": {
            "control": { "type": "object" },
            "type": {
              "name": "object",
              "value": {
                "id": { "name": "string" },
                "name": { "name": "string" },
                "tags": { "name": "string" },
                "styles": { "name": "string" },
                "viewBox": { "name": "string" },
                "width": { "name": "string" },
                "height": { "name": "string" },
                "svgData": {
                  "name": "object",
                  "value": {
                    "circles": { "name": "string" },
                    "ellipses": { "name": "string" },
                    "paths": {
                      "name": "array",
                      "value": {
                        "name": "object",
                        "value": { "d": { "name": "string" } }
                      }
                    },
                    "polygons": { "name": "string" },
                    "polylines": { "name": "string" },
                    "rects": { "name": "string" }
                  }
                }
              }
            },
            "name": "icon"
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The CSS class name.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "description": {
            "control": { "type": "text" },
            "name": "description",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The icon description.",
            "defaultValue": "Provide a description that will be used as the title",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": {
                "summary": "'Provide a description that will be used as the title'"
              }
            }
          },
          "fill": {
            "control": { "type": "text" },
            "name": "fill",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The `svg` `fill` attribute.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "fillRule": {
            "control": { "type": "text" },
            "name": "fillRule",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The `svg` `fillRule` attribute.",
            "defaultValue": "evenodd",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "'evenodd'" }
            }
          },
          "height": {
            "control": { "type": "text" },
            "name": "height",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The `svg` `height` attribute.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "role": {
            "control": { "type": "text" },
            "name": "role",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The `role` attribute.",
            "defaultValue": "img",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "'img'" }
            }
          },
          "style": {
            "control": { "type": "object" },
            "name": "style",
            "type": { "required": false, "name": "object" },
            "required": false,
            "description": "The CSS styles.",
            "defaultValue": null,
            "sbType": { "name": "object" },
            "table": { "type": { "summary": "object" }, "defaultValue": null }
          },
          "viewBox": {
            "control": { "type": "text" },
            "name": "viewBox",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The `svg` `viewbox` attribute.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "width": {
            "control": { "type": "text" },
            "name": "width",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The `svg` `width` attribute.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "iconRef": {
            "name": "iconRef",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "The `ref` callback for the icon.",
            "defaultValue": null,
            "sbType": { "name": "function" },
            "table": { "type": { "summary": "func" }, "defaultValue": null }
          }
        },
        "initialArgs": {
          "description": "Provide a description that will be used as the title",
          "fillRule": "evenodd",
          "role": "img",
          "icon": {
            "id": "icon--add",
            "name": "icon--add",
            "tags": "icon--add",
            "styles": "",
            "viewBox": "0 0 10 10",
            "width": "10",
            "height": "10",
            "svgData": {
              "circles": "",
              "ellipses": "",
              "paths": [{ "d": "M6 4h4v2H6v4H4V6H0V4h4V0h2v4z" }],
              "polygons": "",
              "polylines": "",
              "rects": ""
            }
          }
        }
      },
      "components-infobar--regular": {
        "id": "components-infobar--regular",
        "kind": "Components/InfoBar",
        "name": "Regular",
        "story": "Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\nYou can customize the content by using `BannerNavigation`.\n"
          },
          "storySource": {
            "source": "(args) => (\n  <InfoBar {...args}>\n    InfoBar with content. <Link href=\"#\">Click here</Link> to do Something.\n  </InfoBar>\n)"
          },
          "__id": "components-infobar--regular",
          "args": {},
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": true, "name": "other", "value": "node" },
              "required": true,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The CSS class name to be placed on the wrapping element.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "id": {
              "control": { "type": "text" },
              "name": "id",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Additional `id` provided to the wrapping element",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "pageWidth": {
              "control": {
                "type": "radio",
                "options": ["xs", "sm", "md", "lg", "full"]
              },
              "name": "pageWidth",
              "type": {
                "required": false,
                "name": "enum",
                "value": ["xs", "sm", "md", "lg", "full"]
              },
              "required": false,
              "description": "`pageWidth` for the `<Wrapper />` component",
              "defaultValue": "narrower",
              "sbType": {
                "name": "enum",
                "value": ["xs", "sm", "md", "lg", "full"]
              },
              "table": {
                "type": { "summary": "'xs' | 'sm' | 'md' | 'lg' | 'full'" },
                "defaultValue": { "summary": "'narrower'" }
              }
            },
            "wrapperClassName": {
              "control": { "type": "text" },
              "name": "wrapperClassName",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Additional `className` for the `<Wrapper />` component",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": { "pageWidth": "narrower" },
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": true, "name": "other", "value": "node" },
            "required": true,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The CSS class name to be placed on the wrapping element.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "id": {
            "control": { "type": "text" },
            "name": "id",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Additional `id` provided to the wrapping element",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "pageWidth": {
            "control": {
              "type": "radio",
              "options": ["xs", "sm", "md", "lg", "full"]
            },
            "name": "pageWidth",
            "type": {
              "required": false,
              "name": "enum",
              "value": ["xs", "sm", "md", "lg", "full"]
            },
            "required": false,
            "description": "`pageWidth` for the `<Wrapper />` component",
            "defaultValue": "narrower",
            "sbType": {
              "name": "enum",
              "value": ["xs", "sm", "md", "lg", "full"]
            },
            "table": {
              "type": { "summary": "'xs' | 'sm' | 'md' | 'lg' | 'full'" },
              "defaultValue": { "summary": "'narrower'" }
            }
          },
          "wrapperClassName": {
            "control": { "type": "text" },
            "name": "wrapperClassName",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Additional `className` for the `<Wrapper />` component",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          }
        },
        "initialArgs": { "pageWidth": "narrower" }
      },
      "components-inlineloading--regular": {
        "id": "components-inlineloading--regular",
        "kind": "Components/InlineLoading",
        "name": "Regular",
        "story": "Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\nYou can customize the content by using `BannerNavigation`.\n"
          },
          "storySource": {
            "source": "(args) => <InlineLoading {...args}>Text</InlineLoading>"
          },
          "__id": "components-inlineloading--regular",
          "args": {},
          "argTypes": {
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify a custom className to be applied to the container node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "success": {
              "control": { "type": "boolean" },
              "name": "success",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the load was successful",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "description": {
              "control": { "type": "text" },
              "name": "description",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify the description for the inline loading text",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "onSuccess": {
              "name": "onSuccess",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Provide an optional handler to be invoked when <InlineLoading> is\nsuccessful",
              "defaultValue": null,
              "sbType": { "name": "function" },
              "table": { "type": { "summary": "func" }, "defaultValue": null }
            },
            "successDelay": {
              "control": { "type": "number" },
              "name": "successDelay",
              "type": { "required": false, "name": "number" },
              "required": false,
              "description": "Provide a delay for the `setTimeout` for success",
              "defaultValue": 1500,
              "sbType": { "name": "number" },
              "table": {
                "type": { "summary": "number" },
                "defaultValue": { "summary": "1500" }
              }
            }
          },
          "__isArgsStory": true
        },
        "args": { "successDelay": 1500 },
        "argTypes": {
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify a custom className to be applied to the container node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "success": {
            "control": { "type": "boolean" },
            "name": "success",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the load was successful",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "description": {
            "control": { "type": "text" },
            "name": "description",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify the description for the inline loading text",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "onSuccess": {
            "name": "onSuccess",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Provide an optional handler to be invoked when <InlineLoading> is\nsuccessful",
            "defaultValue": null,
            "sbType": { "name": "function" },
            "table": { "type": { "summary": "func" }, "defaultValue": null }
          },
          "successDelay": {
            "control": { "type": "number" },
            "name": "successDelay",
            "type": { "required": false, "name": "number" },
            "required": false,
            "description": "Provide a delay for the `setTimeout` for success",
            "defaultValue": 1500,
            "sbType": { "name": "number" },
            "table": {
              "type": { "summary": "number" },
              "defaultValue": { "summary": "1500" }
            }
          }
        },
        "initialArgs": { "successDelay": 1500 }
      },
      "components-inlineloading--description": {
        "id": "components-inlineloading--description",
        "kind": "Components/InlineLoading",
        "name": "Description",
        "story": "Description",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\nAdd description for the inline loading text\n"
          },
          "storySource": {
            "source": "(args) => (\n  <InlineLoading {...args}>Text</InlineLoading>\n)"
          },
          "__id": "components-inlineloading--description",
          "args": { "description": "submitting..." },
          "argTypes": {
            "description": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": false },
              "name": "description",
              "required": false,
              "description": "Specify the description for the inline loading text",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify a custom className to be applied to the container node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "success": {
              "control": { "type": "boolean" },
              "name": "success",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the load was successful",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "onSuccess": {
              "name": "onSuccess",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Provide an optional handler to be invoked when <InlineLoading> is\nsuccessful",
              "defaultValue": null,
              "sbType": { "name": "function" },
              "table": { "type": { "summary": "func" }, "defaultValue": null }
            },
            "successDelay": {
              "control": { "type": "number" },
              "name": "successDelay",
              "type": { "required": false, "name": "number" },
              "required": false,
              "description": "Provide a delay for the `setTimeout` for success",
              "defaultValue": 1500,
              "sbType": { "name": "number" },
              "table": {
                "type": { "summary": "number" },
                "defaultValue": { "summary": "1500" }
              }
            }
          },
          "__isArgsStory": true
        },
        "args": { "successDelay": 1500, "description": "submitting..." },
        "argTypes": {
          "description": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": false },
            "name": "description",
            "required": false,
            "description": "Specify the description for the inline loading text",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify a custom className to be applied to the container node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "success": {
            "control": { "type": "boolean" },
            "name": "success",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the load was successful",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "onSuccess": {
            "name": "onSuccess",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Provide an optional handler to be invoked when <InlineLoading> is\nsuccessful",
            "defaultValue": null,
            "sbType": { "name": "function" },
            "table": { "type": { "summary": "func" }, "defaultValue": null }
          },
          "successDelay": {
            "control": { "type": "number" },
            "name": "successDelay",
            "type": { "required": false, "name": "number" },
            "required": false,
            "description": "Provide a delay for the `setTimeout` for success",
            "defaultValue": 1500,
            "sbType": { "name": "number" },
            "table": {
              "type": { "summary": "number" },
              "defaultValue": { "summary": "1500" }
            }
          }
        },
        "initialArgs": { "successDelay": 1500, "description": "submitting..." }
      },
      "components-inlineloading--success": {
        "id": "components-inlineloading--success",
        "kind": "Components/InlineLoading",
        "name": "Success",
        "story": "Success",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\nThis is to show that loading has successfully completed\n"
          },
          "storySource": {
            "source": "(args) => <InlineLoading {...args}>Text</InlineLoading>"
          },
          "__id": "components-inlineloading--success",
          "args": { "success": true },
          "argTypes": {
            "success": {
              "control": { "type": "boolean" },
              "type": { "name": "boolean", "required": false },
              "name": "success",
              "required": false,
              "description": "Specify whether the load was successful",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify a custom className to be applied to the container node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "description": {
              "control": { "type": "text" },
              "name": "description",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify the description for the inline loading text",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "onSuccess": {
              "name": "onSuccess",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Provide an optional handler to be invoked when <InlineLoading> is\nsuccessful",
              "defaultValue": null,
              "sbType": { "name": "function" },
              "table": { "type": { "summary": "func" }, "defaultValue": null }
            },
            "successDelay": {
              "control": { "type": "number" },
              "name": "successDelay",
              "type": { "required": false, "name": "number" },
              "required": false,
              "description": "Provide a delay for the `setTimeout` for success",
              "defaultValue": 1500,
              "sbType": { "name": "number" },
              "table": {
                "type": { "summary": "number" },
                "defaultValue": { "summary": "1500" }
              }
            }
          },
          "__isArgsStory": true
        },
        "args": { "successDelay": 1500, "success": true },
        "argTypes": {
          "success": {
            "control": { "type": "boolean" },
            "type": { "name": "boolean", "required": false },
            "name": "success",
            "required": false,
            "description": "Specify whether the load was successful",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify a custom className to be applied to the container node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "description": {
            "control": { "type": "text" },
            "name": "description",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify the description for the inline loading text",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "onSuccess": {
            "name": "onSuccess",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Provide an optional handler to be invoked when <InlineLoading> is\nsuccessful",
            "defaultValue": null,
            "sbType": { "name": "function" },
            "table": { "type": { "summary": "func" }, "defaultValue": null }
          },
          "successDelay": {
            "control": { "type": "number" },
            "name": "successDelay",
            "type": { "required": false, "name": "number" },
            "required": false,
            "description": "Provide a delay for the `setTimeout` for success",
            "defaultValue": 1500,
            "sbType": { "name": "number" },
            "table": {
              "type": { "summary": "number" },
              "defaultValue": { "summary": "1500" }
            }
          }
        },
        "initialArgs": { "successDelay": 1500, "success": true }
      },
      "forms-inputgroup--regular": {
        "id": "forms-inputgroup--regular",
        "kind": "Forms/InputGroup",
        "name": "Regular",
        "story": "Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": {
            "source": "(args) => (\n  <InputGroup\n    defaultSelected=\"default-selected\"\n    legend=\"Group Legend\"\n    {...args}>\n    <RadioButton\n      name=\"radio\"\n      value=\"standard\"\n      id=\"radio-1\"\n      labelText=\"Radio button label 1\"\n    />\n    <RadioButton\n      name=\"radio\"\n      value=\"default-selected\"\n      id=\"radio-2\"\n      labelText=\"Radio button label 2\"\n    />\n    <RadioButton\n      name=\"radio\"\n      value=\"disabled\"\n      id=\"radio-3\"\n      labelText=\"Radio 1\"\n    />\n  </InputGroup>\n)"
          },
          "__id": "forms-inputgroup--regular",
          "args": {},
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Provide a collection of <RadioButton> components to render in the group",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Provide an optional className to be applied to the container node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "controlled": {
              "control": { "type": "boolean" },
              "name": "controlled",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Provide an optional className to be applied to the container node",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "defaultSelected": {
              "control": { "type": "object" },
              "name": "defaultSelected",
              "type": {
                "required": false,
                "name": "union",
                "value": [{ "name": "string" }, { "name": "number" }]
              },
              "required": false,
              "description": "Specify the <RadioButton> to be selected by default",
              "defaultValue": null,
              "sbType": {
                "name": "union",
                "value": [{ "name": "string" }, { "name": "number" }]
              },
              "table": {
                "type": { "summary": "string | number" },
                "defaultValue": null
              }
            },
            "name": {
              "control": { "type": "text" },
              "name": "name",
              "type": { "required": true, "name": "string" },
              "required": true,
              "description": "Specify the name of the underlying `input` nodes",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "disabled": {
              "control": { "type": "boolean" },
              "name": "disabled",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the group is disabled",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "onChange": {
              "name": "onChange",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Provide an optional `onChange` hook that is called whenever the value of\nthe group changes",
              "sbType": { "name": "function" },
              "table": {
                "type": { "summary": "func" },
                "defaultValue": { "summary": "() => {}" }
              }
            },
            "valueSelected": {
              "control": { "type": "object" },
              "name": "valueSelected",
              "type": {
                "required": false,
                "name": "union",
                "value": [{ "name": "string" }, { "name": "number" }]
              },
              "required": false,
              "description": "Specify the value that is currently selected in the group",
              "defaultValue": null,
              "sbType": {
                "name": "union",
                "value": [{ "name": "string" }, { "name": "number" }]
              },
              "table": {
                "type": { "summary": "string | number" },
                "defaultValue": null
              }
            },
            "vertical": {
              "control": { "type": "boolean" },
              "name": "vertical",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the elements should be displayed vertically.",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "hideLabel": {
              "control": { "type": "boolean" },
              "name": "hideLabel",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether you want the underlying label to be visually hidden",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "helperText": {
              "control": { "type": "object" },
              "name": "helperText",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Provide text that is used alongside the control label for additional help",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "labelText": {
              "control": { "type": "object" },
              "name": "labelText",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Provide the text that will be read by a screen reader when visiting this\ncontrol",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {},
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Provide a collection of <RadioButton> components to render in the group",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Provide an optional className to be applied to the container node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "controlled": {
            "control": { "type": "boolean" },
            "name": "controlled",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Provide an optional className to be applied to the container node",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "defaultSelected": {
            "control": { "type": "object" },
            "name": "defaultSelected",
            "type": {
              "required": false,
              "name": "union",
              "value": [{ "name": "string" }, { "name": "number" }]
            },
            "required": false,
            "description": "Specify the <RadioButton> to be selected by default",
            "defaultValue": null,
            "sbType": {
              "name": "union",
              "value": [{ "name": "string" }, { "name": "number" }]
            },
            "table": {
              "type": { "summary": "string | number" },
              "defaultValue": null
            }
          },
          "name": {
            "control": { "type": "text" },
            "name": "name",
            "type": { "required": true, "name": "string" },
            "required": true,
            "description": "Specify the name of the underlying `input` nodes",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "disabled": {
            "control": { "type": "boolean" },
            "name": "disabled",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the group is disabled",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "onChange": {
            "name": "onChange",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Provide an optional `onChange` hook that is called whenever the value of\nthe group changes",
            "sbType": { "name": "function" },
            "table": {
              "type": { "summary": "func" },
              "defaultValue": { "summary": "() => {}" }
            }
          },
          "valueSelected": {
            "control": { "type": "object" },
            "name": "valueSelected",
            "type": {
              "required": false,
              "name": "union",
              "value": [{ "name": "string" }, { "name": "number" }]
            },
            "required": false,
            "description": "Specify the value that is currently selected in the group",
            "defaultValue": null,
            "sbType": {
              "name": "union",
              "value": [{ "name": "string" }, { "name": "number" }]
            },
            "table": {
              "type": { "summary": "string | number" },
              "defaultValue": null
            }
          },
          "vertical": {
            "control": { "type": "boolean" },
            "name": "vertical",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the elements should be displayed vertically.",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "hideLabel": {
            "control": { "type": "boolean" },
            "name": "hideLabel",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether you want the underlying label to be visually hidden",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "helperText": {
            "control": { "type": "object" },
            "name": "helperText",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Provide text that is used alongside the control label for additional help",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "labelText": {
            "control": { "type": "object" },
            "name": "labelText",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Provide the text that will be read by a screen reader when visiting this\ncontrol",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          }
        },
        "initialArgs": {}
      },
      "forms-inputgroup--with-checkbox": {
        "id": "forms-inputgroup--with-checkbox",
        "kind": "Forms/InputGroup",
        "name": "With Checkbox",
        "story": "With Checkbox",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "The InputGroup can be used with checkboxes"
          },
          "storySource": {
            "source": "(args) => (\n  <InputGroup\n    defaultSelected=\"default-selected\"\n    legend=\"Group Legend\"\n    {...args}>\n    <Checkbox name=\"checkbox-1\" value=\"standard\" labelText=\"Checkbox label 1\" />\n    <Checkbox\n      name=\"checkbox-2\"\n      value=\"default-selected\"\n      labelText=\"Checkbox label 2\"\n    />\n    <Checkbox name=\"checkbox-3\" value=\"disabled\" labelText=\"Checkbox label 3\" />\n  </InputGroup>\n)"
          },
          "__id": "forms-inputgroup--with-checkbox",
          "args": {},
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Provide a collection of <RadioButton> components to render in the group",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Provide an optional className to be applied to the container node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "controlled": {
              "control": { "type": "boolean" },
              "name": "controlled",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Provide an optional className to be applied to the container node",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "defaultSelected": {
              "control": { "type": "object" },
              "name": "defaultSelected",
              "type": {
                "required": false,
                "name": "union",
                "value": [{ "name": "string" }, { "name": "number" }]
              },
              "required": false,
              "description": "Specify the <RadioButton> to be selected by default",
              "defaultValue": null,
              "sbType": {
                "name": "union",
                "value": [{ "name": "string" }, { "name": "number" }]
              },
              "table": {
                "type": { "summary": "string | number" },
                "defaultValue": null
              }
            },
            "name": {
              "control": { "type": "text" },
              "name": "name",
              "type": { "required": true, "name": "string" },
              "required": true,
              "description": "Specify the name of the underlying `input` nodes",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "disabled": {
              "control": { "type": "boolean" },
              "name": "disabled",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the group is disabled",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "onChange": {
              "name": "onChange",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Provide an optional `onChange` hook that is called whenever the value of\nthe group changes",
              "sbType": { "name": "function" },
              "table": {
                "type": { "summary": "func" },
                "defaultValue": { "summary": "() => {}" }
              }
            },
            "valueSelected": {
              "control": { "type": "object" },
              "name": "valueSelected",
              "type": {
                "required": false,
                "name": "union",
                "value": [{ "name": "string" }, { "name": "number" }]
              },
              "required": false,
              "description": "Specify the value that is currently selected in the group",
              "defaultValue": null,
              "sbType": {
                "name": "union",
                "value": [{ "name": "string" }, { "name": "number" }]
              },
              "table": {
                "type": { "summary": "string | number" },
                "defaultValue": null
              }
            },
            "vertical": {
              "control": { "type": "boolean" },
              "name": "vertical",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the elements should be displayed vertically.",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "hideLabel": {
              "control": { "type": "boolean" },
              "name": "hideLabel",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether you want the underlying label to be visually hidden",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "helperText": {
              "control": { "type": "object" },
              "name": "helperText",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Provide text that is used alongside the control label for additional help",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "labelText": {
              "control": { "type": "object" },
              "name": "labelText",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Provide the text that will be read by a screen reader when visiting this\ncontrol",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {},
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Provide a collection of <RadioButton> components to render in the group",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Provide an optional className to be applied to the container node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "controlled": {
            "control": { "type": "boolean" },
            "name": "controlled",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Provide an optional className to be applied to the container node",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "defaultSelected": {
            "control": { "type": "object" },
            "name": "defaultSelected",
            "type": {
              "required": false,
              "name": "union",
              "value": [{ "name": "string" }, { "name": "number" }]
            },
            "required": false,
            "description": "Specify the <RadioButton> to be selected by default",
            "defaultValue": null,
            "sbType": {
              "name": "union",
              "value": [{ "name": "string" }, { "name": "number" }]
            },
            "table": {
              "type": { "summary": "string | number" },
              "defaultValue": null
            }
          },
          "name": {
            "control": { "type": "text" },
            "name": "name",
            "type": { "required": true, "name": "string" },
            "required": true,
            "description": "Specify the name of the underlying `input` nodes",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "disabled": {
            "control": { "type": "boolean" },
            "name": "disabled",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the group is disabled",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "onChange": {
            "name": "onChange",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Provide an optional `onChange` hook that is called whenever the value of\nthe group changes",
            "sbType": { "name": "function" },
            "table": {
              "type": { "summary": "func" },
              "defaultValue": { "summary": "() => {}" }
            }
          },
          "valueSelected": {
            "control": { "type": "object" },
            "name": "valueSelected",
            "type": {
              "required": false,
              "name": "union",
              "value": [{ "name": "string" }, { "name": "number" }]
            },
            "required": false,
            "description": "Specify the value that is currently selected in the group",
            "defaultValue": null,
            "sbType": {
              "name": "union",
              "value": [{ "name": "string" }, { "name": "number" }]
            },
            "table": {
              "type": { "summary": "string | number" },
              "defaultValue": null
            }
          },
          "vertical": {
            "control": { "type": "boolean" },
            "name": "vertical",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the elements should be displayed vertically.",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "hideLabel": {
            "control": { "type": "boolean" },
            "name": "hideLabel",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether you want the underlying label to be visually hidden",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "helperText": {
            "control": { "type": "object" },
            "name": "helperText",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Provide text that is used alongside the control label for additional help",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "labelText": {
            "control": { "type": "object" },
            "name": "labelText",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Provide the text that will be read by a screen reader when visiting this\ncontrol",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          }
        },
        "initialArgs": {}
      },
      "forms-inputgroup--vertical": {
        "id": "forms-inputgroup--vertical",
        "kind": "Forms/InputGroup",
        "name": "Vertical",
        "story": "Vertical",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "Use the vertical alignment if the elements do not have enough horizontal space. Avoid wrapping InputGroupss"
          },
          "storySource": {
            "source": "(args) => (\n  <>\n    <InputGroup\n      defaultSelected=\"default-selected\"\n      legend=\"Group Legend\"\n      vertical\n      {...args}>\n      <Checkbox\n        name=\"checkboxb-1\"\n        value=\"standard\"\n        labelText=\"Checkbox label 1\"\n      />\n      <Checkbox\n        name=\"checkboxb-2\"\n        value=\"default-selected\"\n        labelText=\"Checkbox label 2\"\n      />\n      <Checkbox\n        name=\"checkboxb-3\"\n        value=\"disabled\"\n        labelText=\"Checkbox label 3\"\n      />\n    </InputGroup>\n    <InputGroup\n      defaultSelected=\"default-selected\"\n      legend=\"Group Legend\"\n      vertical\n      {...args}>\n      <RadioButton\n        name=\"radiob\"\n        value=\"standard\"\n        id=\"radiob-1\"\n        labelText=\"Radio button label 1\"\n      />\n      <RadioButton\n        name=\"radiob\"\n        value=\"default-selected\"\n        id=\"radiob-2\"\n        labelText=\"Radio button label 2\"\n      />\n      <RadioButton\n        name=\"radiob\"\n        value=\"disabled\"\n        id=\"radiob-3\"\n        labelText=\"Radio 1\"\n      />\n    </InputGroup>\n  </>\n)"
          },
          "__id": "forms-inputgroup--vertical",
          "args": {},
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Provide a collection of <RadioButton> components to render in the group",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Provide an optional className to be applied to the container node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "controlled": {
              "control": { "type": "boolean" },
              "name": "controlled",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Provide an optional className to be applied to the container node",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "defaultSelected": {
              "control": { "type": "object" },
              "name": "defaultSelected",
              "type": {
                "required": false,
                "name": "union",
                "value": [{ "name": "string" }, { "name": "number" }]
              },
              "required": false,
              "description": "Specify the <RadioButton> to be selected by default",
              "defaultValue": null,
              "sbType": {
                "name": "union",
                "value": [{ "name": "string" }, { "name": "number" }]
              },
              "table": {
                "type": { "summary": "string | number" },
                "defaultValue": null
              }
            },
            "name": {
              "control": { "type": "text" },
              "name": "name",
              "type": { "required": true, "name": "string" },
              "required": true,
              "description": "Specify the name of the underlying `input` nodes",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "disabled": {
              "control": { "type": "boolean" },
              "name": "disabled",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the group is disabled",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "onChange": {
              "name": "onChange",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Provide an optional `onChange` hook that is called whenever the value of\nthe group changes",
              "sbType": { "name": "function" },
              "table": {
                "type": { "summary": "func" },
                "defaultValue": { "summary": "() => {}" }
              }
            },
            "valueSelected": {
              "control": { "type": "object" },
              "name": "valueSelected",
              "type": {
                "required": false,
                "name": "union",
                "value": [{ "name": "string" }, { "name": "number" }]
              },
              "required": false,
              "description": "Specify the value that is currently selected in the group",
              "defaultValue": null,
              "sbType": {
                "name": "union",
                "value": [{ "name": "string" }, { "name": "number" }]
              },
              "table": {
                "type": { "summary": "string | number" },
                "defaultValue": null
              }
            },
            "vertical": {
              "control": { "type": "boolean" },
              "name": "vertical",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the elements should be displayed vertically.",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "hideLabel": {
              "control": { "type": "boolean" },
              "name": "hideLabel",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether you want the underlying label to be visually hidden",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "helperText": {
              "control": { "type": "object" },
              "name": "helperText",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Provide text that is used alongside the control label for additional help",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "labelText": {
              "control": { "type": "object" },
              "name": "labelText",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Provide the text that will be read by a screen reader when visiting this\ncontrol",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {},
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Provide a collection of <RadioButton> components to render in the group",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Provide an optional className to be applied to the container node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "controlled": {
            "control": { "type": "boolean" },
            "name": "controlled",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Provide an optional className to be applied to the container node",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "defaultSelected": {
            "control": { "type": "object" },
            "name": "defaultSelected",
            "type": {
              "required": false,
              "name": "union",
              "value": [{ "name": "string" }, { "name": "number" }]
            },
            "required": false,
            "description": "Specify the <RadioButton> to be selected by default",
            "defaultValue": null,
            "sbType": {
              "name": "union",
              "value": [{ "name": "string" }, { "name": "number" }]
            },
            "table": {
              "type": { "summary": "string | number" },
              "defaultValue": null
            }
          },
          "name": {
            "control": { "type": "text" },
            "name": "name",
            "type": { "required": true, "name": "string" },
            "required": true,
            "description": "Specify the name of the underlying `input` nodes",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "disabled": {
            "control": { "type": "boolean" },
            "name": "disabled",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the group is disabled",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "onChange": {
            "name": "onChange",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Provide an optional `onChange` hook that is called whenever the value of\nthe group changes",
            "sbType": { "name": "function" },
            "table": {
              "type": { "summary": "func" },
              "defaultValue": { "summary": "() => {}" }
            }
          },
          "valueSelected": {
            "control": { "type": "object" },
            "name": "valueSelected",
            "type": {
              "required": false,
              "name": "union",
              "value": [{ "name": "string" }, { "name": "number" }]
            },
            "required": false,
            "description": "Specify the value that is currently selected in the group",
            "defaultValue": null,
            "sbType": {
              "name": "union",
              "value": [{ "name": "string" }, { "name": "number" }]
            },
            "table": {
              "type": { "summary": "string | number" },
              "defaultValue": null
            }
          },
          "vertical": {
            "control": { "type": "boolean" },
            "name": "vertical",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the elements should be displayed vertically.",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "hideLabel": {
            "control": { "type": "boolean" },
            "name": "hideLabel",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether you want the underlying label to be visually hidden",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "helperText": {
            "control": { "type": "object" },
            "name": "helperText",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Provide text that is used alongside the control label for additional help",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "labelText": {
            "control": { "type": "object" },
            "name": "labelText",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Provide the text that will be read by a screen reader when visiting this\ncontrol",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          }
        },
        "initialArgs": {}
      },
      "components-link--regular": {
        "id": "components-link--regular",
        "kind": "Components/Link",
        "name": "Regular",
        "story": "Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": { "source": "(args) => <Link {...args} />" },
          "__id": "components-link--regular",
          "args": { "children": "WFP Homepage", "href": "https://www.wfp.org" },
          "argTypes": {
            "children": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": false },
              "name": "children",
              "required": false,
              "description": "Provide the content for the Link",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "href": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": false },
              "name": "href",
              "required": false,
              "description": "Provide the `href` attribute for the <a> node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Provide a custom className to be applied to the containing <a> node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": { "children": "WFP Homepage", "href": "https://www.wfp.org" },
        "argTypes": {
          "children": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": false },
            "name": "children",
            "required": false,
            "description": "Provide the content for the Link",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "href": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": false },
            "name": "href",
            "required": false,
            "description": "Provide the `href` attribute for the <a> node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Provide a custom className to be applied to the containing <a> node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          }
        },
        "initialArgs": {
          "children": "WFP Homepage",
          "href": "https://www.wfp.org"
        }
      },
      "components-list--regular": {
        "id": "components-list--regular",
        "kind": "Components/List",
        "name": "Regular",
        "story": "Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": {
            "source": "(args) => (\n  <List {...args}>\n    <ListItem title=\"List item with title\">First item</ListItem>\n    <ListItem title=\"Another item with title\">Second item</ListItem>\n    <ListItem>Third item</ListItem>\n    <ListItem>Fourth item</ListItem>\n    <ListItem>Fifth item</ListItem>\n  </List>\n)"
          },
          "__id": "components-list--regular",
          "args": { "colon": true },
          "argTypes": {
            "colon": {
              "control": { "type": "boolean" },
              "type": { "name": "boolean", "required": false },
              "name": "colon",
              "required": false,
              "description": "Specify if colons should be used",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Provide multiple `ListItem` components",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify a custom className",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "kind": {
              "control": {
                "type": "radio",
                "options": ["simple", "simple-inline", "details", "bullet"]
              },
              "name": "kind",
              "type": {
                "required": false,
                "name": "enum",
                "value": ["simple", "simple-inline", "details", "bullet"]
              },
              "required": false,
              "description": "Specify a kind.",
              "defaultValue": "simple",
              "sbType": {
                "name": "enum",
                "value": ["simple", "simple-inline", "details", "bullet"]
              },
              "table": {
                "type": {
                  "summary": "'simple' | 'simple-inline' | 'details' | 'bullet'"
                },
                "defaultValue": { "summary": "'simple'" }
              }
            },
            "small": {
              "control": { "type": "boolean" },
              "name": "small",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify if the List should be small",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            }
          },
          "__isArgsStory": true
        },
        "args": { "kind": "simple", "colon": true },
        "argTypes": {
          "colon": {
            "control": { "type": "boolean" },
            "type": { "name": "boolean", "required": false },
            "name": "colon",
            "required": false,
            "description": "Specify if colons should be used",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Provide multiple `ListItem` components",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify a custom className",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "kind": {
            "control": {
              "type": "radio",
              "options": ["simple", "simple-inline", "details", "bullet"]
            },
            "name": "kind",
            "type": {
              "required": false,
              "name": "enum",
              "value": ["simple", "simple-inline", "details", "bullet"]
            },
            "required": false,
            "description": "Specify a kind.",
            "defaultValue": "simple",
            "sbType": {
              "name": "enum",
              "value": ["simple", "simple-inline", "details", "bullet"]
            },
            "table": {
              "type": {
                "summary": "'simple' | 'simple-inline' | 'details' | 'bullet'"
              },
              "defaultValue": { "summary": "'simple'" }
            }
          },
          "small": {
            "control": { "type": "boolean" },
            "name": "small",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify if the List should be small",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          }
        },
        "initialArgs": { "kind": "simple", "colon": true }
      },
      "components-list--simple-inline": {
        "id": "components-list--simple-inline",
        "kind": "Components/List",
        "name": "Simple Inline",
        "story": "Simple Inline",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": " `simple-inline` `kind` shows listed items next to each other"
          },
          "storySource": {
            "source": "(args) => (\n  <List {...args}>\n    <ListItem title=\"List item with title\">First item</ListItem>\n    <ListItem title=\"Another item with title\">Second item</ListItem>\n    <ListItem>Third item</ListItem>\n    <ListItem>Fourth item</ListItem>\n    <ListItem>Fifth item</ListItem>\n  </List>\n)"
          },
          "__id": "components-list--simple-inline",
          "args": { "kind": "simple-inline" },
          "argTypes": {
            "kind": {
              "control": {
                "type": "radio",
                "options": ["simple", "simple-inline", "details", "bullet"]
              },
              "type": {
                "name": "enum",
                "required": false,
                "value": ["simple", "simple-inline", "details", "bullet"]
              },
              "name": "kind",
              "required": false,
              "description": "Specify a kind.",
              "defaultValue": "simple",
              "sbType": {
                "name": "enum",
                "value": ["simple", "simple-inline", "details", "bullet"]
              },
              "table": {
                "type": {
                  "summary": "'simple' | 'simple-inline' | 'details' | 'bullet'"
                },
                "defaultValue": { "summary": "'simple'" }
              }
            },
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Provide multiple `ListItem` components",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify a custom className",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "colon": {
              "control": { "type": "boolean" },
              "name": "colon",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify if colons should be used",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "small": {
              "control": { "type": "boolean" },
              "name": "small",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify if the List should be small",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            }
          },
          "__isArgsStory": true
        },
        "args": { "kind": "simple-inline" },
        "argTypes": {
          "kind": {
            "control": {
              "type": "radio",
              "options": ["simple", "simple-inline", "details", "bullet"]
            },
            "type": {
              "name": "enum",
              "required": false,
              "value": ["simple", "simple-inline", "details", "bullet"]
            },
            "name": "kind",
            "required": false,
            "description": "Specify a kind.",
            "defaultValue": "simple",
            "sbType": {
              "name": "enum",
              "value": ["simple", "simple-inline", "details", "bullet"]
            },
            "table": {
              "type": {
                "summary": "'simple' | 'simple-inline' | 'details' | 'bullet'"
              },
              "defaultValue": { "summary": "'simple'" }
            }
          },
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Provide multiple `ListItem` components",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify a custom className",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "colon": {
            "control": { "type": "boolean" },
            "name": "colon",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify if colons should be used",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "small": {
            "control": { "type": "boolean" },
            "name": "small",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify if the List should be small",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          }
        },
        "initialArgs": { "kind": "simple-inline" }
      },
      "components-list--details": {
        "id": "components-list--details",
        "kind": "Components/List",
        "name": "Details",
        "story": "Details",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": " `details` `kind` shows listed items on different blocks"
          },
          "storySource": {
            "source": "(args) => (\n  <List {...args}>\n    <ListItem title=\"List item with title\">First item</ListItem>\n    <ListItem title=\"Another item with title\">Second item</ListItem>\n    <ListItem>Third item</ListItem>\n    <ListItem>Fourth item</ListItem>\n    <ListItem>Fifth item</ListItem>\n  </List>\n)"
          },
          "__id": "components-list--details",
          "args": { "kind": "details" },
          "argTypes": {
            "kind": {
              "control": {
                "type": "radio",
                "options": ["simple", "simple-inline", "details", "bullet"]
              },
              "type": {
                "name": "enum",
                "required": false,
                "value": ["simple", "simple-inline", "details", "bullet"]
              },
              "name": "kind",
              "required": false,
              "description": "Specify a kind.",
              "defaultValue": "simple",
              "sbType": {
                "name": "enum",
                "value": ["simple", "simple-inline", "details", "bullet"]
              },
              "table": {
                "type": {
                  "summary": "'simple' | 'simple-inline' | 'details' | 'bullet'"
                },
                "defaultValue": { "summary": "'simple'" }
              }
            },
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Provide multiple `ListItem` components",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify a custom className",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "colon": {
              "control": { "type": "boolean" },
              "name": "colon",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify if colons should be used",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "small": {
              "control": { "type": "boolean" },
              "name": "small",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify if the List should be small",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            }
          },
          "__isArgsStory": true
        },
        "args": { "kind": "details" },
        "argTypes": {
          "kind": {
            "control": {
              "type": "radio",
              "options": ["simple", "simple-inline", "details", "bullet"]
            },
            "type": {
              "name": "enum",
              "required": false,
              "value": ["simple", "simple-inline", "details", "bullet"]
            },
            "name": "kind",
            "required": false,
            "description": "Specify a kind.",
            "defaultValue": "simple",
            "sbType": {
              "name": "enum",
              "value": ["simple", "simple-inline", "details", "bullet"]
            },
            "table": {
              "type": {
                "summary": "'simple' | 'simple-inline' | 'details' | 'bullet'"
              },
              "defaultValue": { "summary": "'simple'" }
            }
          },
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Provide multiple `ListItem` components",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify a custom className",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "colon": {
            "control": { "type": "boolean" },
            "name": "colon",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify if colons should be used",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "small": {
            "control": { "type": "boolean" },
            "name": "small",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify if the List should be small",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          }
        },
        "initialArgs": { "kind": "details" }
      },
      "components-list--bullet": {
        "id": "components-list--bullet",
        "kind": "Components/List",
        "name": "Bullet",
        "story": "Bullet",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": " `bullet` `kind` shows bulleted list items"
          },
          "storySource": {
            "source": "(args) => (\n  <List {...args}>\n    <ListItem title=\"List item with title\">First item</ListItem>\n    <ListItem title=\"Another item with title\">Second item</ListItem>\n    <ListItem>Third item</ListItem>\n    <ListItem>Fourth item</ListItem>\n    <ListItem>Fifth item</ListItem>\n  </List>\n)"
          },
          "__id": "components-list--bullet",
          "args": { "kind": "bullet" },
          "argTypes": {
            "kind": {
              "control": {
                "type": "radio",
                "options": ["simple", "simple-inline", "details", "bullet"]
              },
              "type": {
                "name": "enum",
                "required": false,
                "value": ["simple", "simple-inline", "details", "bullet"]
              },
              "name": "kind",
              "required": false,
              "description": "Specify a kind.",
              "defaultValue": "simple",
              "sbType": {
                "name": "enum",
                "value": ["simple", "simple-inline", "details", "bullet"]
              },
              "table": {
                "type": {
                  "summary": "'simple' | 'simple-inline' | 'details' | 'bullet'"
                },
                "defaultValue": { "summary": "'simple'" }
              }
            },
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Provide multiple `ListItem` components",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify a custom className",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "colon": {
              "control": { "type": "boolean" },
              "name": "colon",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify if colons should be used",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "small": {
              "control": { "type": "boolean" },
              "name": "small",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify if the List should be small",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            }
          },
          "__isArgsStory": true
        },
        "args": { "kind": "bullet" },
        "argTypes": {
          "kind": {
            "control": {
              "type": "radio",
              "options": ["simple", "simple-inline", "details", "bullet"]
            },
            "type": {
              "name": "enum",
              "required": false,
              "value": ["simple", "simple-inline", "details", "bullet"]
            },
            "name": "kind",
            "required": false,
            "description": "Specify a kind.",
            "defaultValue": "simple",
            "sbType": {
              "name": "enum",
              "value": ["simple", "simple-inline", "details", "bullet"]
            },
            "table": {
              "type": {
                "summary": "'simple' | 'simple-inline' | 'details' | 'bullet'"
              },
              "defaultValue": { "summary": "'simple'" }
            }
          },
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Provide multiple `ListItem` components",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify a custom className",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "colon": {
            "control": { "type": "boolean" },
            "name": "colon",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify if colons should be used",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "small": {
            "control": { "type": "boolean" },
            "name": "small",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify if the List should be small",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          }
        },
        "initialArgs": { "kind": "bullet" }
      },
      "components-list--list-columns": {
        "id": "components-list--list-columns",
        "kind": "Components/List",
        "name": "List Columns",
        "story": "List Columns",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\nLists can have multiple columns by using the `columnCount` attribute in `style` prop.\n"
          },
          "storySource": {
            "source": "(args) => (\n  <List kind=\"details\" style={{ columnCount: 3 }}>\n    <ListItem title=\"Strategic Outcome\">\n      Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy\n      eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam\n      voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet\n      clita kasd gubergren, no sea takimata sanctus est Lorem ipsum d Stet clita\n      kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n    </ListItem>\n    <ListItem title=\"Financial Outcome and a very long and detailed list title with more content that fits on a line\">\n      Dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr,\n      sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam\n      erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea\n      rebum.\n    </ListItem>\n    <ListItem title=\"Financial Outcome\">\n      Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor\n      sit amet.\n    </ListItem>\n    <ListItem title=\"Financial Outcome\">\n      At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd\n      gubergren, no sea takimata sanctus est Lorem ipsum d Stet clita kasd\n      gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Dolor\n      sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed\n      diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam\n      erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea\n      rebum.\n    </ListItem>\n  </List>\n)"
          },
          "__id": "components-list--list-columns",
          "args": {},
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Provide multiple `ListItem` components",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify a custom className",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "colon": {
              "control": { "type": "boolean" },
              "name": "colon",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify if colons should be used",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "kind": {
              "control": {
                "type": "radio",
                "options": ["simple", "simple-inline", "details", "bullet"]
              },
              "name": "kind",
              "type": {
                "required": false,
                "name": "enum",
                "value": ["simple", "simple-inline", "details", "bullet"]
              },
              "required": false,
              "description": "Specify a kind.",
              "defaultValue": "simple",
              "sbType": {
                "name": "enum",
                "value": ["simple", "simple-inline", "details", "bullet"]
              },
              "table": {
                "type": {
                  "summary": "'simple' | 'simple-inline' | 'details' | 'bullet'"
                },
                "defaultValue": { "summary": "'simple'" }
              }
            },
            "small": {
              "control": { "type": "boolean" },
              "name": "small",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify if the List should be small",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            }
          },
          "__isArgsStory": true
        },
        "args": { "kind": "simple" },
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Provide multiple `ListItem` components",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify a custom className",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "colon": {
            "control": { "type": "boolean" },
            "name": "colon",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify if colons should be used",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "kind": {
            "control": {
              "type": "radio",
              "options": ["simple", "simple-inline", "details", "bullet"]
            },
            "name": "kind",
            "type": {
              "required": false,
              "name": "enum",
              "value": ["simple", "simple-inline", "details", "bullet"]
            },
            "required": false,
            "description": "Specify a kind.",
            "defaultValue": "simple",
            "sbType": {
              "name": "enum",
              "value": ["simple", "simple-inline", "details", "bullet"]
            },
            "table": {
              "type": {
                "summary": "'simple' | 'simple-inline' | 'details' | 'bullet'"
              },
              "defaultValue": { "summary": "'simple'" }
            }
          },
          "small": {
            "control": { "type": "boolean" },
            "name": "small",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify if the List should be small",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          }
        },
        "initialArgs": { "kind": "simple" }
      },
      "components-list--listitem-bullets": {
        "id": "components-list--listitem-bullets",
        "kind": "Components/List",
        "name": "Listitem Bullets",
        "story": "Listitem Bullets",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": " `bullets` List with ListItems can have `checkmark` and `cross` kinds"
          },
          "storySource": {
            "source": "(args) => (\n  <List kind=\"bullets\">\n    <ListItem kind=\"checkmark\">checkmark</ListItem>\n\n    <ListItem kind=\"cross\">cross</ListItem>\n    <ListItem>hello</ListItem>\n  </List>\n)"
          },
          "__id": "components-list--listitem-bullets",
          "args": {},
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Provide multiple `ListItem` components",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify a custom className",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "colon": {
              "control": { "type": "boolean" },
              "name": "colon",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify if colons should be used",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "kind": {
              "control": {
                "type": "radio",
                "options": ["simple", "simple-inline", "details", "bullet"]
              },
              "name": "kind",
              "type": {
                "required": false,
                "name": "enum",
                "value": ["simple", "simple-inline", "details", "bullet"]
              },
              "required": false,
              "description": "Specify a kind.",
              "defaultValue": "simple",
              "sbType": {
                "name": "enum",
                "value": ["simple", "simple-inline", "details", "bullet"]
              },
              "table": {
                "type": {
                  "summary": "'simple' | 'simple-inline' | 'details' | 'bullet'"
                },
                "defaultValue": { "summary": "'simple'" }
              }
            },
            "small": {
              "control": { "type": "boolean" },
              "name": "small",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify if the List should be small",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            }
          },
          "__isArgsStory": true
        },
        "args": { "kind": "simple" },
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Provide multiple `ListItem` components",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify a custom className",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "colon": {
            "control": { "type": "boolean" },
            "name": "colon",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify if colons should be used",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "kind": {
            "control": {
              "type": "radio",
              "options": ["simple", "simple-inline", "details", "bullet"]
            },
            "name": "kind",
            "type": {
              "required": false,
              "name": "enum",
              "value": ["simple", "simple-inline", "details", "bullet"]
            },
            "required": false,
            "description": "Specify a kind.",
            "defaultValue": "simple",
            "sbType": {
              "name": "enum",
              "value": ["simple", "simple-inline", "details", "bullet"]
            },
            "table": {
              "type": {
                "summary": "'simple' | 'simple-inline' | 'details' | 'bullet'"
              },
              "defaultValue": { "summary": "'simple'" }
            }
          },
          "small": {
            "control": { "type": "boolean" },
            "name": "small",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify if the List should be small",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          }
        },
        "initialArgs": { "kind": "simple" }
      },
      "components-loading--regular": {
        "id": "components-loading--regular",
        "kind": "Components/Loading",
        "name": "Regular",
        "story": "Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": {
            "source": "(args) => <Loading {...args}>Text</Loading>"
          },
          "__id": "components-loading--regular",
          "args": {},
          "argTypes": {
            "active": {
              "control": { "type": "boolean" },
              "name": "active",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether you want the loading indicator to be spinning or not",
              "defaultValue": true,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "true" }
              }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Provide an optional className to be applied to the containing node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "withOverlay": {
              "control": { "type": "boolean" },
              "name": "withOverlay",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether you want the loader to be applied with an overlay",
              "defaultValue": true,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "true" }
              }
            },
            "small": {
              "control": { "type": "boolean" },
              "name": "small",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether you would like the small variant of <Loading>",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            }
          },
          "__isArgsStory": true
        },
        "args": { "active": true, "withOverlay": true },
        "argTypes": {
          "active": {
            "control": { "type": "boolean" },
            "name": "active",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether you want the loading indicator to be spinning or not",
            "defaultValue": true,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "true" }
            }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Provide an optional className to be applied to the containing node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "withOverlay": {
            "control": { "type": "boolean" },
            "name": "withOverlay",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether you want the loader to be applied with an overlay",
            "defaultValue": true,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "true" }
            }
          },
          "small": {
            "control": { "type": "boolean" },
            "name": "small",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether you would like the small variant of <Loading>",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          }
        },
        "initialArgs": { "active": true, "withOverlay": true }
      },
      "components-loading--without-overlay": {
        "id": "components-loading--without-overlay",
        "kind": "Components/Loading",
        "name": "Without Overlay",
        "story": "Without Overlay",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\nWhen loader is applied with an overlay. Don this by specifying `false` to `withOverlay` prop.\n"
          },
          "storySource": {
            "source": "(args) => <Loading {...args}>Text</Loading>"
          },
          "__id": "components-loading--without-overlay",
          "args": { "withOverlay": false },
          "argTypes": {
            "withOverlay": {
              "control": { "type": "boolean" },
              "type": { "name": "boolean", "required": false },
              "name": "withOverlay",
              "required": false,
              "description": "Specify whether you want the loader to be applied with an overlay",
              "defaultValue": true,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "true" }
              }
            },
            "active": {
              "control": { "type": "boolean" },
              "name": "active",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether you want the loading indicator to be spinning or not",
              "defaultValue": true,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "true" }
              }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Provide an optional className to be applied to the containing node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "small": {
              "control": { "type": "boolean" },
              "name": "small",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether you would like the small variant of <Loading>",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            }
          },
          "__isArgsStory": true
        },
        "args": { "withOverlay": false, "active": true },
        "argTypes": {
          "withOverlay": {
            "control": { "type": "boolean" },
            "type": { "name": "boolean", "required": false },
            "name": "withOverlay",
            "required": false,
            "description": "Specify whether you want the loader to be applied with an overlay",
            "defaultValue": true,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "true" }
            }
          },
          "active": {
            "control": { "type": "boolean" },
            "name": "active",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether you want the loading indicator to be spinning or not",
            "defaultValue": true,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "true" }
            }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Provide an optional className to be applied to the containing node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "small": {
            "control": { "type": "boolean" },
            "name": "small",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether you would like the small variant of <Loading>",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          }
        },
        "initialArgs": { "withOverlay": false, "active": true }
      },
      "components-loading--small": {
        "id": "components-loading--small",
        "kind": "Components/Loading",
        "name": "Small",
        "story": "Small",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\nWhen loader has a `small` variant.\n"
          },
          "storySource": {
            "source": "(args) => <Loading {...args}>Text</Loading>"
          },
          "__id": "components-loading--small",
          "args": { "withOverlay": false, "small": true },
          "argTypes": {
            "withOverlay": {
              "control": { "type": "boolean" },
              "type": { "name": "boolean", "required": false },
              "name": "withOverlay",
              "required": false,
              "description": "Specify whether you want the loader to be applied with an overlay",
              "defaultValue": true,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "true" }
              }
            },
            "small": {
              "control": { "type": "boolean" },
              "type": { "name": "boolean", "required": false },
              "name": "small",
              "required": false,
              "description": "Specify whether you would like the small variant of <Loading>",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "active": {
              "control": { "type": "boolean" },
              "name": "active",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether you want the loading indicator to be spinning or not",
              "defaultValue": true,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "true" }
              }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Provide an optional className to be applied to the containing node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": { "withOverlay": false, "active": true, "small": true },
        "argTypes": {
          "withOverlay": {
            "control": { "type": "boolean" },
            "type": { "name": "boolean", "required": false },
            "name": "withOverlay",
            "required": false,
            "description": "Specify whether you want the loader to be applied with an overlay",
            "defaultValue": true,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "true" }
            }
          },
          "small": {
            "control": { "type": "boolean" },
            "type": { "name": "boolean", "required": false },
            "name": "small",
            "required": false,
            "description": "Specify whether you would like the small variant of <Loading>",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "active": {
            "control": { "type": "boolean" },
            "name": "active",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether you want the loading indicator to be spinning or not",
            "defaultValue": true,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "true" }
            }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Provide an optional className to be applied to the containing node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          }
        },
        "initialArgs": { "withOverlay": false, "active": true, "small": true }
      },
      "components-mainnavigation--regular": {
        "id": "components-mainnavigation--regular",
        "kind": "Components/MainNavigation",
        "name": "Regular",
        "story": "Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\nYou can customize the content by using `BannerNavigation`.\n"
          },
          "storySource": {
            "source": "(args) => (\n  <MainNavigation {...args}>\n    {({ onChangeSub }) => {\n      return (\n        <React.Fragment>\n          <MainNavigationItem>\n            <Link href=\"http://communities.wfp.org\" target=\"_blank\">\n              Section 1\n            </Link>\n          </MainNavigationItem>\n          <MainNavigationItem\n            subNavigation={\n              <SubNavigation>\n                <SubNavigationHeader>\n                  <SubNavigationTitle>The Title</SubNavigationTitle>\n                  <SubNavigationLink>\n                    <Button small>The SubPage Link</Button>\n                  </SubNavigationLink>\n\n                  <SubNavigationFilter>\n                    <Search\n                      small\n                      id=\"search-2\"\n                      labelText=\"Filter\"\n                      placeHolderText=\"Filter list\"\n                      onChange={() => {\n                        alert('Apply Filter');\n                      }}\n                    />\n                  </SubNavigationFilter>\n                </SubNavigationHeader>\n                <SubNavigationContent>\n                  <SubNavigationList>\n                    <SubNavigationGroup title=\"First List\" columns>\n                      <SubNavigationItem>\n                        <Link href=\"https://go.docs.wfp.org\" target=\"_blank\">\n                          Lorem Ipsum et jomen\n                        </Link>\n                      </SubNavigationItem>\n                    </SubNavigationGroup>\n                  </SubNavigationList>\n                </SubNavigationContent>\n              </SubNavigation>\n            }>\n            <Link href=\"http://manuals.wfp.org\" target=\"_blank\">\n              Section 2\n            </Link>\n          </MainNavigationItem>\n          <MainNavigationItem>\n            <Link href=\"https://go.docs.wfp.org\" target=\"_blank\">\n              Section 3\n            </Link>\n          </MainNavigationItem>\n          <MainNavigationItem>\n            <Link href=\"http://opweb.wfp.org\" target=\"_blank\">\n              Section 4\n            </Link>\n          </MainNavigationItem>\n          <MainNavigationItem>\n            <Search\n              kind=\"main\"\n              id=\"search-2\"\n              labelText=\"Search\"\n              placeHolderText=\"Search\"\n              onChange={action('onChange')}\n            />\n          </MainNavigationItem>\n          <MainNavigationItem\n            className=\"wfp--main-navigation__user\"\n            subNavigation={\n              <SubNavigation>\n                <SubNavigationHeader>\n                  <SubNavigationTitle>Welcome Lorem!</SubNavigationTitle>\n                  <SubNavigationLink>\n                    <Button secondary small>\n                      Logout\n                    </Button>\n                  </SubNavigationLink>\n                </SubNavigationHeader>\n                <SubNavigationContent>\n                  Additional content can be placed here.\n                  <br />\n                  Demo for internal close action:{' '}\n                  <Link onClick={() => onChangeSub('close')}>Close Menu</Link>\n                </SubNavigationContent>\n              </SubNavigation>\n            }>\n            <User\n              ellipsis\n              name=\"Max Mustermann long name\"\n              missingImage=\"letter\"\n            />\n          </MainNavigationItem>\n          <MainNavigationItem\n            className=\"wfp--main-navigation__user\"\n            subNavigation={\n              <SubNavigation>\n                <SubNavigationHeader>\n                  <SubNavigationTitle>Choose language</SubNavigationTitle>\n                </SubNavigationHeader>\n                <SubNavigationContent>\n                  <SubNavigationList>\n                    <SubNavigationGroup>\n                      <SubNavigationItem>\n                        <Link href=\"#\">English</Link>\n                      </SubNavigationItem>\n                      <SubNavigationItem>\n                        <Link href=\"#\">\n                          French <i>(français)</i>\n                        </Link>\n                      </SubNavigationItem>\n                      <SubNavigationItem>\n                        <Link href=\"#\">\n                          German <i>(deutsch)</i>\n                        </Link>\n                      </SubNavigationItem>\n                    </SubNavigationGroup>\n                  </SubNavigationList>\n                </SubNavigationContent>\n              </SubNavigation>\n            }>\n            <span>EN</span>\n          </MainNavigationItem>\n        </React.Fragment>\n      );\n    }}\n  </MainNavigation>\n)"
          },
          "__id": "components-mainnavigation--regular",
          "args": {},
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": true, "name": "other", "value": "node" },
              "required": true,
              "description": "Usually multiple `MainNavigationItem` elements",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The CSS class name to be placed on the wrapping element.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "id": {
              "control": { "type": "text" },
              "name": "id",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Defines an ID for the component.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "logo": {
              "control": { "type": "object" },
              "name": "logo",
              "type": {
                "required": false,
                "name": "union",
                "value": [
                  { "name": "string" },
                  { "name": "other", "value": "node" }
                ]
              },
              "required": false,
              "description": "The Logo can be either a string or a component",
              "defaultValue": "WFP",
              "sbType": {
                "name": "union",
                "value": [
                  { "name": "string" },
                  { "name": "other", "value": "node" }
                ]
              },
              "table": {
                "type": { "summary": "string | node" },
                "defaultValue": { "summary": "'WFP'" }
              }
            },
            "pageWidth": {
              "control": {
                "type": "radio",
                "options": ["xs", "sm", "md", "lg", "full"]
              },
              "name": "pageWidth",
              "type": {
                "required": false,
                "name": "enum",
                "value": ["xs", "sm", "md", "lg", "full"]
              },
              "required": false,
              "description": "See `Wrapper` component for more information",
              "defaultValue": "md",
              "sbType": {
                "name": "enum",
                "value": ["xs", "sm", "md", "lg", "full"]
              },
              "table": {
                "type": { "summary": "'xs' | 'sm' | 'md' | 'lg' | 'full'" },
                "defaultValue": { "summary": "'md'" }
              }
            },
            "mobilePageWidth": {
              "control": { "type": "text" },
              "name": "mobilePageWidth",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "See `Wrapper` component for more information",
              "defaultValue": "full",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "'full'" }
              }
            },
            "wrapperClassName": {
              "control": { "type": "text" },
              "name": "wrapperClassName",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Additional className for the `Wrapper`",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": { "logo": "WFP", "pageWidth": "md", "mobilePageWidth": "full" },
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": true, "name": "other", "value": "node" },
            "required": true,
            "description": "Usually multiple `MainNavigationItem` elements",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The CSS class name to be placed on the wrapping element.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "id": {
            "control": { "type": "text" },
            "name": "id",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Defines an ID for the component.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "logo": {
            "control": { "type": "object" },
            "name": "logo",
            "type": {
              "required": false,
              "name": "union",
              "value": [
                { "name": "string" },
                { "name": "other", "value": "node" }
              ]
            },
            "required": false,
            "description": "The Logo can be either a string or a component",
            "defaultValue": "WFP",
            "sbType": {
              "name": "union",
              "value": [
                { "name": "string" },
                { "name": "other", "value": "node" }
              ]
            },
            "table": {
              "type": { "summary": "string | node" },
              "defaultValue": { "summary": "'WFP'" }
            }
          },
          "pageWidth": {
            "control": {
              "type": "radio",
              "options": ["xs", "sm", "md", "lg", "full"]
            },
            "name": "pageWidth",
            "type": {
              "required": false,
              "name": "enum",
              "value": ["xs", "sm", "md", "lg", "full"]
            },
            "required": false,
            "description": "See `Wrapper` component for more information",
            "defaultValue": "md",
            "sbType": {
              "name": "enum",
              "value": ["xs", "sm", "md", "lg", "full"]
            },
            "table": {
              "type": { "summary": "'xs' | 'sm' | 'md' | 'lg' | 'full'" },
              "defaultValue": { "summary": "'md'" }
            }
          },
          "mobilePageWidth": {
            "control": { "type": "text" },
            "name": "mobilePageWidth",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "See `Wrapper` component for more information",
            "defaultValue": "full",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "'full'" }
            }
          },
          "wrapperClassName": {
            "control": { "type": "text" },
            "name": "wrapperClassName",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Additional className for the `Wrapper`",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          }
        },
        "initialArgs": {
          "logo": "WFP",
          "pageWidth": "md",
          "mobilePageWidth": "full"
        }
      },
      "components-modal--regular": {
        "id": "components-modal--regular",
        "kind": "Components/Modal",
        "name": "Regular",
        "story": "Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": {
            "source": "(args) => <Modal {...args}>Text</Modal>"
          },
          "__id": "components-modal--regular",
          "args": {},
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Provide the contents of your Modal",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify an optional className to be applied to the modal root node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "lazyLoad": {
              "control": { "type": "boolean" },
              "name": "lazyLoad",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the modals content should be only loaded when the `Modal` is `open`",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "passiveModal": {
              "control": { "type": "boolean" },
              "name": "passiveModal",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the modal should be button-less",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "onRequestClose": {
              "name": "onRequestClose",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Specify a handler for closing modal.\nThe handler should care of closing modal, e.g. changing `open` prop.",
              "sbType": { "name": "function" },
              "table": {
                "type": { "summary": "func" },
                "defaultValue": { "summary": "() => {}" }
              }
            },
            "id": {
              "control": { "type": "text" },
              "name": "id",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify the DOM element ID of the top-level node.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "modalHeading": {
              "control": { "type": "text" },
              "name": "modalHeading",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify the content of the modal header title.",
              "defaultValue": "",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "''" }
              }
            },
            "modalLabel": {
              "control": { "type": "object" },
              "name": "modalLabel",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Specify the content of the modal header label.",
              "defaultValue": "",
              "sbType": { "name": "other", "value": "node" },
              "table": {
                "type": { "summary": "node" },
                "defaultValue": { "summary": "''" }
              }
            },
            "modalFooter": {
              "name": "modalFooter",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Specify the a function which renders a custom ModalFooter.",
              "defaultValue": null,
              "sbType": { "name": "function" },
              "table": { "type": { "summary": "func" }, "defaultValue": null }
            },
            "modalAriaLabel": {
              "control": { "type": "text" },
              "name": "modalAriaLabel",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify a label to be read by screen readers on the modal root node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "secondaryButtonText": {
              "control": { "type": "text" },
              "name": "secondaryButtonText",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify the text for the secondary button",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "primaryButtonText": {
              "control": { "type": "text" },
              "name": "primaryButtonText",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify the text for the primary button",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "open": {
              "control": { "type": "boolean" },
              "name": "open",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the Modal is currently open",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "onRequestSubmit": {
              "name": "onRequestSubmit",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Specify a handler for \"submitting\" modal.\nThe handler should care of closing modal, e.g. changing `open` prop, if necessary.",
              "sbType": { "name": "function" },
              "table": {
                "type": { "summary": "func" },
                "defaultValue": { "summary": "() => {}" }
              }
            },
            "onKeyDown": {
              "name": "onKeyDown",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Specify a handler for a key press modal",
              "sbType": { "name": "function" },
              "table": {
                "type": { "summary": "func" },
                "defaultValue": { "summary": "() => {}" }
              }
            },
            "iconDescription": {
              "control": { "type": "text" },
              "name": "iconDescription",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Provide a description for \"close\" icon that can be read by screen readers",
              "defaultValue": "close the modal",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "'close the modal'" }
              }
            },
            "primaryButtonDisabled": {
              "control": { "type": "boolean" },
              "name": "primaryButtonDisabled",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the Button should be disabled, or not",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "secondaryButtonDisabled": {
              "control": { "type": "boolean" },
              "name": "secondaryButtonDisabled",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the secondary Button should be disabled, or not",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "onSecondarySubmit": {
              "name": "onSecondarySubmit",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Specify a handler for the secondary button.\nUseful if separate handler from `onRequestClose` is desirable",
              "defaultValue": null,
              "sbType": { "name": "function" },
              "table": { "type": { "summary": "func" }, "defaultValue": null }
            },
            "danger": {
              "control": { "type": "boolean" },
              "name": "danger",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the Modal is for dangerous actions",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "shouldSubmitOnEnter": {
              "control": { "type": "boolean" },
              "name": "shouldSubmitOnEnter",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify if Enter key should be used as \"submit\" action",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "selectorsFloatingMenus": {
              "control": { "type": "array" },
              "name": "selectorsFloatingMenus",
              "type": {
                "required": false,
                "name": "array",
                "value": { "name": "string" }
              },
              "required": false,
              "description": "Specify CSS selectors that match DOM elements working as floating menus.\nFocusing on those elements won't trigger \"focus-wrap\" behavior",
              "defaultValue": null,
              "sbType": { "name": "array", "value": { "name": "string" } },
              "table": {
                "type": { "summary": "string[]" },
                "defaultValue": null
              }
            },
            "selectorPrimaryFocus": {
              "control": { "type": "object" },
              "name": "selectorPrimaryFocus",
              "type": {
                "required": false,
                "name": "union",
                "value": [{ "name": "boolean" }, { "name": "string" }]
              },
              "required": false,
              "description": "Specify a CSS selector that matches the DOM element that should\nbe focused when the Modal opens. If \"false\" no selector will be triggered",
              "defaultValue": "[data-modal-primary-focus]",
              "sbType": {
                "name": "union",
                "value": [{ "name": "boolean" }, { "name": "string" }]
              },
              "table": {
                "type": { "summary": "bool | string" },
                "defaultValue": { "summary": "'[data-modal-primary-focus]'" }
              }
            },
            "type": {
              "control": {
                "type": "radio",
                "options": ["info", "warning", "danger"]
              },
              "name": "type",
              "type": {
                "required": false,
                "name": "enum",
                "value": ["info", "warning", "danger"]
              },
              "required": false,
              "description": "Different styling options are available `info`, `warning`, `danger`",
              "defaultValue": null,
              "sbType": {
                "name": "enum",
                "value": ["info", "warning", "danger"]
              },
              "table": {
                "type": { "summary": "'info' | 'warning' | 'danger'" },
                "defaultValue": null
              }
            },
            "inPortal": {
              "control": { "type": "boolean" },
              "name": "inPortal",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "If true the Modal will be rendered inside a portal at the end of the\nbody element, otherwise at the position it is placed.",
              "defaultValue": true,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "true" }
              }
            },
            "wide": {
              "control": { "type": "boolean" },
              "name": "wide",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "If true the Modal will be wider then the regular Modal",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "iconDescription": "close the modal",
          "selectorPrimaryFocus": "[data-modal-primary-focus]",
          "inPortal": true
        },
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Provide the contents of your Modal",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify an optional className to be applied to the modal root node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "lazyLoad": {
            "control": { "type": "boolean" },
            "name": "lazyLoad",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the modals content should be only loaded when the `Modal` is `open`",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "passiveModal": {
            "control": { "type": "boolean" },
            "name": "passiveModal",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the modal should be button-less",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "onRequestClose": {
            "name": "onRequestClose",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Specify a handler for closing modal.\nThe handler should care of closing modal, e.g. changing `open` prop.",
            "sbType": { "name": "function" },
            "table": {
              "type": { "summary": "func" },
              "defaultValue": { "summary": "() => {}" }
            }
          },
          "id": {
            "control": { "type": "text" },
            "name": "id",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify the DOM element ID of the top-level node.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "modalHeading": {
            "control": { "type": "text" },
            "name": "modalHeading",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify the content of the modal header title.",
            "defaultValue": "",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "''" }
            }
          },
          "modalLabel": {
            "control": { "type": "object" },
            "name": "modalLabel",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Specify the content of the modal header label.",
            "defaultValue": "",
            "sbType": { "name": "other", "value": "node" },
            "table": {
              "type": { "summary": "node" },
              "defaultValue": { "summary": "''" }
            }
          },
          "modalFooter": {
            "name": "modalFooter",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Specify the a function which renders a custom ModalFooter.",
            "defaultValue": null,
            "sbType": { "name": "function" },
            "table": { "type": { "summary": "func" }, "defaultValue": null }
          },
          "modalAriaLabel": {
            "control": { "type": "text" },
            "name": "modalAriaLabel",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify a label to be read by screen readers on the modal root node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "secondaryButtonText": {
            "control": { "type": "text" },
            "name": "secondaryButtonText",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify the text for the secondary button",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "primaryButtonText": {
            "control": { "type": "text" },
            "name": "primaryButtonText",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify the text for the primary button",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "open": {
            "control": { "type": "boolean" },
            "name": "open",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the Modal is currently open",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "onRequestSubmit": {
            "name": "onRequestSubmit",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Specify a handler for \"submitting\" modal.\nThe handler should care of closing modal, e.g. changing `open` prop, if necessary.",
            "sbType": { "name": "function" },
            "table": {
              "type": { "summary": "func" },
              "defaultValue": { "summary": "() => {}" }
            }
          },
          "onKeyDown": {
            "name": "onKeyDown",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Specify a handler for a key press modal",
            "sbType": { "name": "function" },
            "table": {
              "type": { "summary": "func" },
              "defaultValue": { "summary": "() => {}" }
            }
          },
          "iconDescription": {
            "control": { "type": "text" },
            "name": "iconDescription",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Provide a description for \"close\" icon that can be read by screen readers",
            "defaultValue": "close the modal",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "'close the modal'" }
            }
          },
          "primaryButtonDisabled": {
            "control": { "type": "boolean" },
            "name": "primaryButtonDisabled",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the Button should be disabled, or not",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "secondaryButtonDisabled": {
            "control": { "type": "boolean" },
            "name": "secondaryButtonDisabled",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the secondary Button should be disabled, or not",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "onSecondarySubmit": {
            "name": "onSecondarySubmit",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Specify a handler for the secondary button.\nUseful if separate handler from `onRequestClose` is desirable",
            "defaultValue": null,
            "sbType": { "name": "function" },
            "table": { "type": { "summary": "func" }, "defaultValue": null }
          },
          "danger": {
            "control": { "type": "boolean" },
            "name": "danger",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the Modal is for dangerous actions",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "shouldSubmitOnEnter": {
            "control": { "type": "boolean" },
            "name": "shouldSubmitOnEnter",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify if Enter key should be used as \"submit\" action",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "selectorsFloatingMenus": {
            "control": { "type": "array" },
            "name": "selectorsFloatingMenus",
            "type": {
              "required": false,
              "name": "array",
              "value": { "name": "string" }
            },
            "required": false,
            "description": "Specify CSS selectors that match DOM elements working as floating menus.\nFocusing on those elements won't trigger \"focus-wrap\" behavior",
            "defaultValue": null,
            "sbType": { "name": "array", "value": { "name": "string" } },
            "table": { "type": { "summary": "string[]" }, "defaultValue": null }
          },
          "selectorPrimaryFocus": {
            "control": { "type": "object" },
            "name": "selectorPrimaryFocus",
            "type": {
              "required": false,
              "name": "union",
              "value": [{ "name": "boolean" }, { "name": "string" }]
            },
            "required": false,
            "description": "Specify a CSS selector that matches the DOM element that should\nbe focused when the Modal opens. If \"false\" no selector will be triggered",
            "defaultValue": "[data-modal-primary-focus]",
            "sbType": {
              "name": "union",
              "value": [{ "name": "boolean" }, { "name": "string" }]
            },
            "table": {
              "type": { "summary": "bool | string" },
              "defaultValue": { "summary": "'[data-modal-primary-focus]'" }
            }
          },
          "type": {
            "control": {
              "type": "radio",
              "options": ["info", "warning", "danger"]
            },
            "name": "type",
            "type": {
              "required": false,
              "name": "enum",
              "value": ["info", "warning", "danger"]
            },
            "required": false,
            "description": "Different styling options are available `info`, `warning`, `danger`",
            "defaultValue": null,
            "sbType": {
              "name": "enum",
              "value": ["info", "warning", "danger"]
            },
            "table": {
              "type": { "summary": "'info' | 'warning' | 'danger'" },
              "defaultValue": null
            }
          },
          "inPortal": {
            "control": { "type": "boolean" },
            "name": "inPortal",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "If true the Modal will be rendered inside a portal at the end of the\nbody element, otherwise at the position it is placed.",
            "defaultValue": true,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "true" }
            }
          },
          "wide": {
            "control": { "type": "boolean" },
            "name": "wide",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "If true the Modal will be wider then the regular Modal",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          }
        },
        "initialArgs": {
          "iconDescription": "close the modal",
          "selectorPrimaryFocus": "[data-modal-primary-focus]",
          "inPortal": true
        }
      },
      "components-modalwrapper--regular": {
        "id": "components-modalwrapper--regular",
        "kind": "Components/ModalWrapper",
        "name": "Regular",
        "story": "Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": {
            "source": "(args) => <ModalWrapper {...args}>Text</ModalWrapper>"
          },
          "__id": "components-modalwrapper--regular",
          "args": { "buttonTriggerText": "Open modal" },
          "argTypes": {
            "buttonTriggerText": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "buttonTriggerText",
              "required": false,
              "description": "Specify the text for the trigger `Button`.",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "status": {
              "control": { "type": "text" },
              "name": "status",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "handleOpen": {
              "name": "handleOpen",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Specify a function to open the Modal.",
              "defaultValue": null,
              "sbType": { "name": "function" },
              "table": { "type": { "summary": "func" }, "defaultValue": null }
            },
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "customButton": {
              "control": { "type": "object" },
              "name": "customButton",
              "type": {
                "required": false,
                "name": "other",
                "value": "element"
              },
              "required": false,
              "description": "Specify a custom trigger `Button`.",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "element" },
              "table": {
                "type": { "summary": "element" },
                "defaultValue": null
              }
            },
            "id": {
              "control": { "type": "text" },
              "name": "id",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "buttonTriggerClassName": {
              "control": { "type": "text" },
              "name": "buttonTriggerClassName",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify a `class` for the trigger `Button`.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "modalLabel": {
              "control": { "type": "text" },
              "name": "modalLabel",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "modalHeading": {
              "control": { "type": "text" },
              "name": "modalHeading",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "modalText": {
              "control": { "type": "text" },
              "name": "modalText",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "passiveModal": {
              "control": { "type": "boolean" },
              "name": "passiveModal",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "withHeader": {
              "control": { "type": "boolean" },
              "name": "withHeader",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "modalBeforeContent": {
              "control": { "type": "boolean" },
              "name": "modalBeforeContent",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "primaryButtonText": {
              "control": { "type": "text" },
              "name": "primaryButtonText",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": "Save",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "'Save'" }
              }
            },
            "secondaryButtonText": {
              "control": { "type": "text" },
              "name": "secondaryButtonText",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": "Cancel",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "'Cancel'" }
              }
            },
            "handleSubmit": {
              "name": "handleSubmit",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Specify a `function` which is triggered when submitting the `Modal`.",
              "defaultValue": null,
              "sbType": { "name": "function" },
              "table": { "type": { "summary": "func" }, "defaultValue": null }
            },
            "disabled": {
              "control": { "type": "boolean" },
              "name": "disabled",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "triggerButtonKind": {
              "control": { "type": "object" },
              "name": "triggerButtonKind",
              "type": {
                "required": false,
                "raw": "ButtonTypes.buttonKind",
                "name": "other",
                "value": "custom"
              },
              "required": false,
              "description": "",
              "defaultValue": "primary",
              "sbType": {
                "raw": "ButtonTypes.buttonKind",
                "name": "other",
                "value": "custom"
              },
              "table": {
                "type": { "summary": "ButtonTypes.buttonKind" },
                "defaultValue": { "summary": "'primary'" }
              }
            },
            "shouldCloseAfterSubmit": {
              "control": { "type": "boolean" },
              "name": "shouldCloseAfterSubmit",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify if `Modal` should be closed after submitting.",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "primaryButtonText": "Save",
          "secondaryButtonText": "Cancel",
          "triggerButtonKind": "primary",
          "buttonTriggerText": "Open modal"
        },
        "argTypes": {
          "buttonTriggerText": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "buttonTriggerText",
            "required": false,
            "description": "Specify the text for the trigger `Button`.",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "status": {
            "control": { "type": "text" },
            "name": "status",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "handleOpen": {
            "name": "handleOpen",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Specify a function to open the Modal.",
            "defaultValue": null,
            "sbType": { "name": "function" },
            "table": { "type": { "summary": "func" }, "defaultValue": null }
          },
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "customButton": {
            "control": { "type": "object" },
            "name": "customButton",
            "type": { "required": false, "name": "other", "value": "element" },
            "required": false,
            "description": "Specify a custom trigger `Button`.",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "element" },
            "table": { "type": { "summary": "element" }, "defaultValue": null }
          },
          "id": {
            "control": { "type": "text" },
            "name": "id",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "buttonTriggerClassName": {
            "control": { "type": "text" },
            "name": "buttonTriggerClassName",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify a `class` for the trigger `Button`.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "modalLabel": {
            "control": { "type": "text" },
            "name": "modalLabel",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "modalHeading": {
            "control": { "type": "text" },
            "name": "modalHeading",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "modalText": {
            "control": { "type": "text" },
            "name": "modalText",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "passiveModal": {
            "control": { "type": "boolean" },
            "name": "passiveModal",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "withHeader": {
            "control": { "type": "boolean" },
            "name": "withHeader",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "modalBeforeContent": {
            "control": { "type": "boolean" },
            "name": "modalBeforeContent",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "primaryButtonText": {
            "control": { "type": "text" },
            "name": "primaryButtonText",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": "Save",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "'Save'" }
            }
          },
          "secondaryButtonText": {
            "control": { "type": "text" },
            "name": "secondaryButtonText",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": "Cancel",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "'Cancel'" }
            }
          },
          "handleSubmit": {
            "name": "handleSubmit",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Specify a `function` which is triggered when submitting the `Modal`.",
            "defaultValue": null,
            "sbType": { "name": "function" },
            "table": { "type": { "summary": "func" }, "defaultValue": null }
          },
          "disabled": {
            "control": { "type": "boolean" },
            "name": "disabled",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "triggerButtonKind": {
            "control": { "type": "object" },
            "name": "triggerButtonKind",
            "type": {
              "required": false,
              "raw": "ButtonTypes.buttonKind",
              "name": "other",
              "value": "custom"
            },
            "required": false,
            "description": "",
            "defaultValue": "primary",
            "sbType": {
              "raw": "ButtonTypes.buttonKind",
              "name": "other",
              "value": "custom"
            },
            "table": {
              "type": { "summary": "ButtonTypes.buttonKind" },
              "defaultValue": { "summary": "'primary'" }
            }
          },
          "shouldCloseAfterSubmit": {
            "control": { "type": "boolean" },
            "name": "shouldCloseAfterSubmit",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify if `Modal` should be closed after submitting.",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          }
        },
        "initialArgs": {
          "primaryButtonText": "Save",
          "secondaryButtonText": "Cancel",
          "triggerButtonKind": "primary",
          "buttonTriggerText": "Open modal"
        }
      },
      "components-modalwrapper--passive-modal": {
        "id": "components-modalwrapper--passive-modal",
        "kind": "Components/ModalWrapper",
        "name": "Passive Modal",
        "story": "Passive Modal",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\n `PassiveModal` presents information the user needs to be aware of concerning their current workflow. Contains no actions for the user to take..\n"
          },
          "storySource": {
            "source": "(args) => (\n  <ModalWrapper {...args}>This section is the body</ModalWrapper>\n)"
          },
          "__id": "components-modalwrapper--passive-modal",
          "args": { "buttonTriggerText": "Open modal", "passiveModal": true },
          "argTypes": {
            "buttonTriggerText": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "buttonTriggerText",
              "required": false,
              "description": "Specify the text for the trigger `Button`.",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "passiveModal": {
              "control": { "type": "boolean" },
              "type": { "name": "boolean", "required": false },
              "name": "passiveModal",
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "status": {
              "control": { "type": "text" },
              "name": "status",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "handleOpen": {
              "name": "handleOpen",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Specify a function to open the Modal.",
              "defaultValue": null,
              "sbType": { "name": "function" },
              "table": { "type": { "summary": "func" }, "defaultValue": null }
            },
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "customButton": {
              "control": { "type": "object" },
              "name": "customButton",
              "type": {
                "required": false,
                "name": "other",
                "value": "element"
              },
              "required": false,
              "description": "Specify a custom trigger `Button`.",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "element" },
              "table": {
                "type": { "summary": "element" },
                "defaultValue": null
              }
            },
            "id": {
              "control": { "type": "text" },
              "name": "id",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "buttonTriggerClassName": {
              "control": { "type": "text" },
              "name": "buttonTriggerClassName",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify a `class` for the trigger `Button`.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "modalLabel": {
              "control": { "type": "text" },
              "name": "modalLabel",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "modalHeading": {
              "control": { "type": "text" },
              "name": "modalHeading",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "modalText": {
              "control": { "type": "text" },
              "name": "modalText",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "withHeader": {
              "control": { "type": "boolean" },
              "name": "withHeader",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "modalBeforeContent": {
              "control": { "type": "boolean" },
              "name": "modalBeforeContent",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "primaryButtonText": {
              "control": { "type": "text" },
              "name": "primaryButtonText",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": "Save",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "'Save'" }
              }
            },
            "secondaryButtonText": {
              "control": { "type": "text" },
              "name": "secondaryButtonText",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": "Cancel",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "'Cancel'" }
              }
            },
            "handleSubmit": {
              "name": "handleSubmit",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Specify a `function` which is triggered when submitting the `Modal`.",
              "defaultValue": null,
              "sbType": { "name": "function" },
              "table": { "type": { "summary": "func" }, "defaultValue": null }
            },
            "disabled": {
              "control": { "type": "boolean" },
              "name": "disabled",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "triggerButtonKind": {
              "control": { "type": "object" },
              "name": "triggerButtonKind",
              "type": {
                "required": false,
                "raw": "ButtonTypes.buttonKind",
                "name": "other",
                "value": "custom"
              },
              "required": false,
              "description": "",
              "defaultValue": "primary",
              "sbType": {
                "raw": "ButtonTypes.buttonKind",
                "name": "other",
                "value": "custom"
              },
              "table": {
                "type": { "summary": "ButtonTypes.buttonKind" },
                "defaultValue": { "summary": "'primary'" }
              }
            },
            "shouldCloseAfterSubmit": {
              "control": { "type": "boolean" },
              "name": "shouldCloseAfterSubmit",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify if `Modal` should be closed after submitting.",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "primaryButtonText": "Save",
          "secondaryButtonText": "Cancel",
          "triggerButtonKind": "primary",
          "buttonTriggerText": "Open modal",
          "passiveModal": true
        },
        "argTypes": {
          "buttonTriggerText": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "buttonTriggerText",
            "required": false,
            "description": "Specify the text for the trigger `Button`.",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "passiveModal": {
            "control": { "type": "boolean" },
            "type": { "name": "boolean", "required": false },
            "name": "passiveModal",
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "status": {
            "control": { "type": "text" },
            "name": "status",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "handleOpen": {
            "name": "handleOpen",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Specify a function to open the Modal.",
            "defaultValue": null,
            "sbType": { "name": "function" },
            "table": { "type": { "summary": "func" }, "defaultValue": null }
          },
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "customButton": {
            "control": { "type": "object" },
            "name": "customButton",
            "type": { "required": false, "name": "other", "value": "element" },
            "required": false,
            "description": "Specify a custom trigger `Button`.",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "element" },
            "table": { "type": { "summary": "element" }, "defaultValue": null }
          },
          "id": {
            "control": { "type": "text" },
            "name": "id",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "buttonTriggerClassName": {
            "control": { "type": "text" },
            "name": "buttonTriggerClassName",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify a `class` for the trigger `Button`.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "modalLabel": {
            "control": { "type": "text" },
            "name": "modalLabel",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "modalHeading": {
            "control": { "type": "text" },
            "name": "modalHeading",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "modalText": {
            "control": { "type": "text" },
            "name": "modalText",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "withHeader": {
            "control": { "type": "boolean" },
            "name": "withHeader",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "modalBeforeContent": {
            "control": { "type": "boolean" },
            "name": "modalBeforeContent",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "primaryButtonText": {
            "control": { "type": "text" },
            "name": "primaryButtonText",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": "Save",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "'Save'" }
            }
          },
          "secondaryButtonText": {
            "control": { "type": "text" },
            "name": "secondaryButtonText",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": "Cancel",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "'Cancel'" }
            }
          },
          "handleSubmit": {
            "name": "handleSubmit",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Specify a `function` which is triggered when submitting the `Modal`.",
            "defaultValue": null,
            "sbType": { "name": "function" },
            "table": { "type": { "summary": "func" }, "defaultValue": null }
          },
          "disabled": {
            "control": { "type": "boolean" },
            "name": "disabled",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "triggerButtonKind": {
            "control": { "type": "object" },
            "name": "triggerButtonKind",
            "type": {
              "required": false,
              "raw": "ButtonTypes.buttonKind",
              "name": "other",
              "value": "custom"
            },
            "required": false,
            "description": "",
            "defaultValue": "primary",
            "sbType": {
              "raw": "ButtonTypes.buttonKind",
              "name": "other",
              "value": "custom"
            },
            "table": {
              "type": { "summary": "ButtonTypes.buttonKind" },
              "defaultValue": { "summary": "'primary'" }
            }
          },
          "shouldCloseAfterSubmit": {
            "control": { "type": "boolean" },
            "name": "shouldCloseAfterSubmit",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify if `Modal` should be closed after submitting.",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          }
        },
        "initialArgs": {
          "primaryButtonText": "Save",
          "secondaryButtonText": "Cancel",
          "triggerButtonKind": "primary",
          "buttonTriggerText": "Open modal",
          "passiveModal": true
        }
      },
      "components-modalwrapper--modal-with-heading": {
        "id": "components-modalwrapper--modal-with-heading",
        "kind": "Components/ModalWrapper",
        "name": "Modal With Heading",
        "story": "Modal With Heading",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\n `withHeader` property when applied adds header text to modal.\n"
          },
          "storySource": {
            "source": "(args) => (\n  <ModalWrapper {...args}>This section is the body</ModalWrapper>\n)"
          },
          "__id": "components-modalwrapper--modal-with-heading",
          "args": {
            "buttonTriggerText": "Open modal",
            "modalHeading": "Header Text",
            "withHeader": true
          },
          "argTypes": {
            "buttonTriggerText": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "buttonTriggerText",
              "required": false,
              "description": "Specify the text for the trigger `Button`.",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "modalHeading": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": false },
              "name": "modalHeading",
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "withHeader": {
              "control": { "type": "boolean" },
              "type": { "name": "boolean", "required": false },
              "name": "withHeader",
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "status": {
              "control": { "type": "text" },
              "name": "status",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "handleOpen": {
              "name": "handleOpen",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Specify a function to open the Modal.",
              "defaultValue": null,
              "sbType": { "name": "function" },
              "table": { "type": { "summary": "func" }, "defaultValue": null }
            },
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "customButton": {
              "control": { "type": "object" },
              "name": "customButton",
              "type": {
                "required": false,
                "name": "other",
                "value": "element"
              },
              "required": false,
              "description": "Specify a custom trigger `Button`.",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "element" },
              "table": {
                "type": { "summary": "element" },
                "defaultValue": null
              }
            },
            "id": {
              "control": { "type": "text" },
              "name": "id",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "buttonTriggerClassName": {
              "control": { "type": "text" },
              "name": "buttonTriggerClassName",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify a `class` for the trigger `Button`.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "modalLabel": {
              "control": { "type": "text" },
              "name": "modalLabel",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "modalText": {
              "control": { "type": "text" },
              "name": "modalText",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "passiveModal": {
              "control": { "type": "boolean" },
              "name": "passiveModal",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "modalBeforeContent": {
              "control": { "type": "boolean" },
              "name": "modalBeforeContent",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "primaryButtonText": {
              "control": { "type": "text" },
              "name": "primaryButtonText",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": "Save",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "'Save'" }
              }
            },
            "secondaryButtonText": {
              "control": { "type": "text" },
              "name": "secondaryButtonText",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": "Cancel",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "'Cancel'" }
              }
            },
            "handleSubmit": {
              "name": "handleSubmit",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Specify a `function` which is triggered when submitting the `Modal`.",
              "defaultValue": null,
              "sbType": { "name": "function" },
              "table": { "type": { "summary": "func" }, "defaultValue": null }
            },
            "disabled": {
              "control": { "type": "boolean" },
              "name": "disabled",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "triggerButtonKind": {
              "control": { "type": "object" },
              "name": "triggerButtonKind",
              "type": {
                "required": false,
                "raw": "ButtonTypes.buttonKind",
                "name": "other",
                "value": "custom"
              },
              "required": false,
              "description": "",
              "defaultValue": "primary",
              "sbType": {
                "raw": "ButtonTypes.buttonKind",
                "name": "other",
                "value": "custom"
              },
              "table": {
                "type": { "summary": "ButtonTypes.buttonKind" },
                "defaultValue": { "summary": "'primary'" }
              }
            },
            "shouldCloseAfterSubmit": {
              "control": { "type": "boolean" },
              "name": "shouldCloseAfterSubmit",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify if `Modal` should be closed after submitting.",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "primaryButtonText": "Save",
          "secondaryButtonText": "Cancel",
          "triggerButtonKind": "primary",
          "buttonTriggerText": "Open modal",
          "modalHeading": "Header Text",
          "withHeader": true
        },
        "argTypes": {
          "buttonTriggerText": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "buttonTriggerText",
            "required": false,
            "description": "Specify the text for the trigger `Button`.",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "modalHeading": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": false },
            "name": "modalHeading",
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "withHeader": {
            "control": { "type": "boolean" },
            "type": { "name": "boolean", "required": false },
            "name": "withHeader",
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "status": {
            "control": { "type": "text" },
            "name": "status",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "handleOpen": {
            "name": "handleOpen",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Specify a function to open the Modal.",
            "defaultValue": null,
            "sbType": { "name": "function" },
            "table": { "type": { "summary": "func" }, "defaultValue": null }
          },
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "customButton": {
            "control": { "type": "object" },
            "name": "customButton",
            "type": { "required": false, "name": "other", "value": "element" },
            "required": false,
            "description": "Specify a custom trigger `Button`.",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "element" },
            "table": { "type": { "summary": "element" }, "defaultValue": null }
          },
          "id": {
            "control": { "type": "text" },
            "name": "id",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "buttonTriggerClassName": {
            "control": { "type": "text" },
            "name": "buttonTriggerClassName",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify a `class` for the trigger `Button`.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "modalLabel": {
            "control": { "type": "text" },
            "name": "modalLabel",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "modalText": {
            "control": { "type": "text" },
            "name": "modalText",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "passiveModal": {
            "control": { "type": "boolean" },
            "name": "passiveModal",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "modalBeforeContent": {
            "control": { "type": "boolean" },
            "name": "modalBeforeContent",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "primaryButtonText": {
            "control": { "type": "text" },
            "name": "primaryButtonText",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": "Save",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "'Save'" }
            }
          },
          "secondaryButtonText": {
            "control": { "type": "text" },
            "name": "secondaryButtonText",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": "Cancel",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "'Cancel'" }
            }
          },
          "handleSubmit": {
            "name": "handleSubmit",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Specify a `function` which is triggered when submitting the `Modal`.",
            "defaultValue": null,
            "sbType": { "name": "function" },
            "table": { "type": { "summary": "func" }, "defaultValue": null }
          },
          "disabled": {
            "control": { "type": "boolean" },
            "name": "disabled",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "triggerButtonKind": {
            "control": { "type": "object" },
            "name": "triggerButtonKind",
            "type": {
              "required": false,
              "raw": "ButtonTypes.buttonKind",
              "name": "other",
              "value": "custom"
            },
            "required": false,
            "description": "",
            "defaultValue": "primary",
            "sbType": {
              "raw": "ButtonTypes.buttonKind",
              "name": "other",
              "value": "custom"
            },
            "table": {
              "type": { "summary": "ButtonTypes.buttonKind" },
              "defaultValue": { "summary": "'primary'" }
            }
          },
          "shouldCloseAfterSubmit": {
            "control": { "type": "boolean" },
            "name": "shouldCloseAfterSubmit",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify if `Modal` should be closed after submitting.",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          }
        },
        "initialArgs": {
          "primaryButtonText": "Save",
          "secondaryButtonText": "Cancel",
          "triggerButtonKind": "primary",
          "buttonTriggerText": "Open modal",
          "modalHeading": "Header Text",
          "withHeader": true
        }
      },
      "components-modalwrapper--modal-with-label": {
        "id": "components-modalwrapper--modal-with-label",
        "kind": "Components/ModalWrapper",
        "name": "Modal With Label",
        "story": "Modal With Label",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\n `withLabel` property when applied adds a Label text to modal.\n"
          },
          "storySource": {
            "source": "(args) => (\n  <ModalWrapper {...args}>This section is the body</ModalWrapper>\n)"
          },
          "__id": "components-modalwrapper--modal-with-label",
          "args": {
            "buttonTriggerText": "Open modal",
            "modalLabel": "modal Label",
            "withHeader": true
          },
          "argTypes": {
            "buttonTriggerText": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "buttonTriggerText",
              "required": false,
              "description": "Specify the text for the trigger `Button`.",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "modalLabel": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": false },
              "name": "modalLabel",
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "withHeader": {
              "control": { "type": "boolean" },
              "type": { "name": "boolean", "required": false },
              "name": "withHeader",
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "status": {
              "control": { "type": "text" },
              "name": "status",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "handleOpen": {
              "name": "handleOpen",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Specify a function to open the Modal.",
              "defaultValue": null,
              "sbType": { "name": "function" },
              "table": { "type": { "summary": "func" }, "defaultValue": null }
            },
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "customButton": {
              "control": { "type": "object" },
              "name": "customButton",
              "type": {
                "required": false,
                "name": "other",
                "value": "element"
              },
              "required": false,
              "description": "Specify a custom trigger `Button`.",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "element" },
              "table": {
                "type": { "summary": "element" },
                "defaultValue": null
              }
            },
            "id": {
              "control": { "type": "text" },
              "name": "id",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "buttonTriggerClassName": {
              "control": { "type": "text" },
              "name": "buttonTriggerClassName",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify a `class` for the trigger `Button`.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "modalHeading": {
              "control": { "type": "text" },
              "name": "modalHeading",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "modalText": {
              "control": { "type": "text" },
              "name": "modalText",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "passiveModal": {
              "control": { "type": "boolean" },
              "name": "passiveModal",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "modalBeforeContent": {
              "control": { "type": "boolean" },
              "name": "modalBeforeContent",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "primaryButtonText": {
              "control": { "type": "text" },
              "name": "primaryButtonText",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": "Save",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "'Save'" }
              }
            },
            "secondaryButtonText": {
              "control": { "type": "text" },
              "name": "secondaryButtonText",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": "Cancel",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "'Cancel'" }
              }
            },
            "handleSubmit": {
              "name": "handleSubmit",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Specify a `function` which is triggered when submitting the `Modal`.",
              "defaultValue": null,
              "sbType": { "name": "function" },
              "table": { "type": { "summary": "func" }, "defaultValue": null }
            },
            "disabled": {
              "control": { "type": "boolean" },
              "name": "disabled",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "triggerButtonKind": {
              "control": { "type": "object" },
              "name": "triggerButtonKind",
              "type": {
                "required": false,
                "raw": "ButtonTypes.buttonKind",
                "name": "other",
                "value": "custom"
              },
              "required": false,
              "description": "",
              "defaultValue": "primary",
              "sbType": {
                "raw": "ButtonTypes.buttonKind",
                "name": "other",
                "value": "custom"
              },
              "table": {
                "type": { "summary": "ButtonTypes.buttonKind" },
                "defaultValue": { "summary": "'primary'" }
              }
            },
            "shouldCloseAfterSubmit": {
              "control": { "type": "boolean" },
              "name": "shouldCloseAfterSubmit",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify if `Modal` should be closed after submitting.",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "primaryButtonText": "Save",
          "secondaryButtonText": "Cancel",
          "triggerButtonKind": "primary",
          "buttonTriggerText": "Open modal",
          "modalLabel": "modal Label",
          "withHeader": true
        },
        "argTypes": {
          "buttonTriggerText": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "buttonTriggerText",
            "required": false,
            "description": "Specify the text for the trigger `Button`.",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "modalLabel": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": false },
            "name": "modalLabel",
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "withHeader": {
            "control": { "type": "boolean" },
            "type": { "name": "boolean", "required": false },
            "name": "withHeader",
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "status": {
            "control": { "type": "text" },
            "name": "status",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "handleOpen": {
            "name": "handleOpen",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Specify a function to open the Modal.",
            "defaultValue": null,
            "sbType": { "name": "function" },
            "table": { "type": { "summary": "func" }, "defaultValue": null }
          },
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "customButton": {
            "control": { "type": "object" },
            "name": "customButton",
            "type": { "required": false, "name": "other", "value": "element" },
            "required": false,
            "description": "Specify a custom trigger `Button`.",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "element" },
            "table": { "type": { "summary": "element" }, "defaultValue": null }
          },
          "id": {
            "control": { "type": "text" },
            "name": "id",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "buttonTriggerClassName": {
            "control": { "type": "text" },
            "name": "buttonTriggerClassName",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify a `class` for the trigger `Button`.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "modalHeading": {
            "control": { "type": "text" },
            "name": "modalHeading",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "modalText": {
            "control": { "type": "text" },
            "name": "modalText",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "passiveModal": {
            "control": { "type": "boolean" },
            "name": "passiveModal",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "modalBeforeContent": {
            "control": { "type": "boolean" },
            "name": "modalBeforeContent",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "primaryButtonText": {
            "control": { "type": "text" },
            "name": "primaryButtonText",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": "Save",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "'Save'" }
            }
          },
          "secondaryButtonText": {
            "control": { "type": "text" },
            "name": "secondaryButtonText",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": "Cancel",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "'Cancel'" }
            }
          },
          "handleSubmit": {
            "name": "handleSubmit",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Specify a `function` which is triggered when submitting the `Modal`.",
            "defaultValue": null,
            "sbType": { "name": "function" },
            "table": { "type": { "summary": "func" }, "defaultValue": null }
          },
          "disabled": {
            "control": { "type": "boolean" },
            "name": "disabled",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "triggerButtonKind": {
            "control": { "type": "object" },
            "name": "triggerButtonKind",
            "type": {
              "required": false,
              "raw": "ButtonTypes.buttonKind",
              "name": "other",
              "value": "custom"
            },
            "required": false,
            "description": "",
            "defaultValue": "primary",
            "sbType": {
              "raw": "ButtonTypes.buttonKind",
              "name": "other",
              "value": "custom"
            },
            "table": {
              "type": { "summary": "ButtonTypes.buttonKind" },
              "defaultValue": { "summary": "'primary'" }
            }
          },
          "shouldCloseAfterSubmit": {
            "control": { "type": "boolean" },
            "name": "shouldCloseAfterSubmit",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify if `Modal` should be closed after submitting.",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          }
        },
        "initialArgs": {
          "primaryButtonText": "Save",
          "secondaryButtonText": "Cancel",
          "triggerButtonKind": "primary",
          "buttonTriggerText": "Open modal",
          "modalLabel": "modal Label",
          "withHeader": true
        }
      },
      "components-modalwrapper--disabled": {
        "id": "components-modalwrapper--disabled",
        "kind": "Components/ModalWrapper",
        "name": "Disabled",
        "story": "Disabled",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\n `withLabel` property set the modal trigger button to be disabled/non-interactive.\n"
          },
          "storySource": {
            "source": "(args) => (\n  <ModalWrapper {...args}>This section is the body</ModalWrapper>\n)"
          },
          "__id": "components-modalwrapper--disabled",
          "args": { "buttonTriggerText": "Open modal", "disabled": true },
          "argTypes": {
            "buttonTriggerText": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "buttonTriggerText",
              "required": false,
              "description": "Specify the text for the trigger `Button`.",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "disabled": {
              "control": { "type": "boolean" },
              "type": { "name": "boolean", "required": false },
              "name": "disabled",
              "required": false,
              "description": "",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "status": {
              "control": { "type": "text" },
              "name": "status",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "handleOpen": {
              "name": "handleOpen",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Specify a function to open the Modal.",
              "defaultValue": null,
              "sbType": { "name": "function" },
              "table": { "type": { "summary": "func" }, "defaultValue": null }
            },
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "customButton": {
              "control": { "type": "object" },
              "name": "customButton",
              "type": {
                "required": false,
                "name": "other",
                "value": "element"
              },
              "required": false,
              "description": "Specify a custom trigger `Button`.",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "element" },
              "table": {
                "type": { "summary": "element" },
                "defaultValue": null
              }
            },
            "id": {
              "control": { "type": "text" },
              "name": "id",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "buttonTriggerClassName": {
              "control": { "type": "text" },
              "name": "buttonTriggerClassName",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify a `class` for the trigger `Button`.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "modalLabel": {
              "control": { "type": "text" },
              "name": "modalLabel",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "modalHeading": {
              "control": { "type": "text" },
              "name": "modalHeading",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "modalText": {
              "control": { "type": "text" },
              "name": "modalText",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "passiveModal": {
              "control": { "type": "boolean" },
              "name": "passiveModal",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "withHeader": {
              "control": { "type": "boolean" },
              "name": "withHeader",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "modalBeforeContent": {
              "control": { "type": "boolean" },
              "name": "modalBeforeContent",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "primaryButtonText": {
              "control": { "type": "text" },
              "name": "primaryButtonText",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": "Save",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "'Save'" }
              }
            },
            "secondaryButtonText": {
              "control": { "type": "text" },
              "name": "secondaryButtonText",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": "Cancel",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "'Cancel'" }
              }
            },
            "handleSubmit": {
              "name": "handleSubmit",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Specify a `function` which is triggered when submitting the `Modal`.",
              "defaultValue": null,
              "sbType": { "name": "function" },
              "table": { "type": { "summary": "func" }, "defaultValue": null }
            },
            "triggerButtonKind": {
              "control": { "type": "object" },
              "name": "triggerButtonKind",
              "type": {
                "required": false,
                "raw": "ButtonTypes.buttonKind",
                "name": "other",
                "value": "custom"
              },
              "required": false,
              "description": "",
              "defaultValue": "primary",
              "sbType": {
                "raw": "ButtonTypes.buttonKind",
                "name": "other",
                "value": "custom"
              },
              "table": {
                "type": { "summary": "ButtonTypes.buttonKind" },
                "defaultValue": { "summary": "'primary'" }
              }
            },
            "shouldCloseAfterSubmit": {
              "control": { "type": "boolean" },
              "name": "shouldCloseAfterSubmit",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify if `Modal` should be closed after submitting.",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "primaryButtonText": "Save",
          "secondaryButtonText": "Cancel",
          "triggerButtonKind": "primary",
          "buttonTriggerText": "Open modal",
          "disabled": true
        },
        "argTypes": {
          "buttonTriggerText": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "buttonTriggerText",
            "required": false,
            "description": "Specify the text for the trigger `Button`.",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "disabled": {
            "control": { "type": "boolean" },
            "type": { "name": "boolean", "required": false },
            "name": "disabled",
            "required": false,
            "description": "",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "status": {
            "control": { "type": "text" },
            "name": "status",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "handleOpen": {
            "name": "handleOpen",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Specify a function to open the Modal.",
            "defaultValue": null,
            "sbType": { "name": "function" },
            "table": { "type": { "summary": "func" }, "defaultValue": null }
          },
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "customButton": {
            "control": { "type": "object" },
            "name": "customButton",
            "type": { "required": false, "name": "other", "value": "element" },
            "required": false,
            "description": "Specify a custom trigger `Button`.",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "element" },
            "table": { "type": { "summary": "element" }, "defaultValue": null }
          },
          "id": {
            "control": { "type": "text" },
            "name": "id",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "buttonTriggerClassName": {
            "control": { "type": "text" },
            "name": "buttonTriggerClassName",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify a `class` for the trigger `Button`.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "modalLabel": {
            "control": { "type": "text" },
            "name": "modalLabel",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "modalHeading": {
            "control": { "type": "text" },
            "name": "modalHeading",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "modalText": {
            "control": { "type": "text" },
            "name": "modalText",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "passiveModal": {
            "control": { "type": "boolean" },
            "name": "passiveModal",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "withHeader": {
            "control": { "type": "boolean" },
            "name": "withHeader",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "modalBeforeContent": {
            "control": { "type": "boolean" },
            "name": "modalBeforeContent",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "primaryButtonText": {
            "control": { "type": "text" },
            "name": "primaryButtonText",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": "Save",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "'Save'" }
            }
          },
          "secondaryButtonText": {
            "control": { "type": "text" },
            "name": "secondaryButtonText",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": "Cancel",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "'Cancel'" }
            }
          },
          "handleSubmit": {
            "name": "handleSubmit",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Specify a `function` which is triggered when submitting the `Modal`.",
            "defaultValue": null,
            "sbType": { "name": "function" },
            "table": { "type": { "summary": "func" }, "defaultValue": null }
          },
          "triggerButtonKind": {
            "control": { "type": "object" },
            "name": "triggerButtonKind",
            "type": {
              "required": false,
              "raw": "ButtonTypes.buttonKind",
              "name": "other",
              "value": "custom"
            },
            "required": false,
            "description": "",
            "defaultValue": "primary",
            "sbType": {
              "raw": "ButtonTypes.buttonKind",
              "name": "other",
              "value": "custom"
            },
            "table": {
              "type": { "summary": "ButtonTypes.buttonKind" },
              "defaultValue": { "summary": "'primary'" }
            }
          },
          "shouldCloseAfterSubmit": {
            "control": { "type": "boolean" },
            "name": "shouldCloseAfterSubmit",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify if `Modal` should be closed after submitting.",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          }
        },
        "initialArgs": {
          "primaryButtonText": "Save",
          "secondaryButtonText": "Cancel",
          "triggerButtonKind": "primary",
          "buttonTriggerText": "Open modal",
          "disabled": true
        }
      },
      "components-modalwrapper--wahhh": {
        "id": "components-modalwrapper--wahhh",
        "kind": "Components/ModalWrapper",
        "name": "Wahhh",
        "story": "Wahhh",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": {
            "source": "(args) => (\n  <ModalWrapper\n    customButton={<button>Open modal</button>}\n    handleSubmit={() => {\n      console.log('submit');\n      return true;\n    }}>\n    Modal Content\n  </ModalWrapper>\n)"
          },
          "__id": "components-modalwrapper--wahhh",
          "args": {},
          "argTypes": {
            "status": {
              "control": { "type": "text" },
              "name": "status",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "handleOpen": {
              "name": "handleOpen",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Specify a function to open the Modal.",
              "defaultValue": null,
              "sbType": { "name": "function" },
              "table": { "type": { "summary": "func" }, "defaultValue": null }
            },
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "customButton": {
              "control": { "type": "object" },
              "name": "customButton",
              "type": {
                "required": false,
                "name": "other",
                "value": "element"
              },
              "required": false,
              "description": "Specify a custom trigger `Button`.",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "element" },
              "table": {
                "type": { "summary": "element" },
                "defaultValue": null
              }
            },
            "id": {
              "control": { "type": "text" },
              "name": "id",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "buttonTriggerText": {
              "control": { "type": "object" },
              "name": "buttonTriggerText",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Specify the text for the trigger `Button`.",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "buttonTriggerClassName": {
              "control": { "type": "text" },
              "name": "buttonTriggerClassName",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify a `class` for the trigger `Button`.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "modalLabel": {
              "control": { "type": "text" },
              "name": "modalLabel",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "modalHeading": {
              "control": { "type": "text" },
              "name": "modalHeading",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "modalText": {
              "control": { "type": "text" },
              "name": "modalText",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "passiveModal": {
              "control": { "type": "boolean" },
              "name": "passiveModal",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "withHeader": {
              "control": { "type": "boolean" },
              "name": "withHeader",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "modalBeforeContent": {
              "control": { "type": "boolean" },
              "name": "modalBeforeContent",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "primaryButtonText": {
              "control": { "type": "text" },
              "name": "primaryButtonText",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": "Save",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "'Save'" }
              }
            },
            "secondaryButtonText": {
              "control": { "type": "text" },
              "name": "secondaryButtonText",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": "Cancel",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "'Cancel'" }
              }
            },
            "handleSubmit": {
              "name": "handleSubmit",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Specify a `function` which is triggered when submitting the `Modal`.",
              "defaultValue": null,
              "sbType": { "name": "function" },
              "table": { "type": { "summary": "func" }, "defaultValue": null }
            },
            "disabled": {
              "control": { "type": "boolean" },
              "name": "disabled",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "triggerButtonKind": {
              "control": { "type": "object" },
              "name": "triggerButtonKind",
              "type": {
                "required": false,
                "raw": "ButtonTypes.buttonKind",
                "name": "other",
                "value": "custom"
              },
              "required": false,
              "description": "",
              "defaultValue": "primary",
              "sbType": {
                "raw": "ButtonTypes.buttonKind",
                "name": "other",
                "value": "custom"
              },
              "table": {
                "type": { "summary": "ButtonTypes.buttonKind" },
                "defaultValue": { "summary": "'primary'" }
              }
            },
            "shouldCloseAfterSubmit": {
              "control": { "type": "boolean" },
              "name": "shouldCloseAfterSubmit",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify if `Modal` should be closed after submitting.",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "primaryButtonText": "Save",
          "secondaryButtonText": "Cancel",
          "triggerButtonKind": "primary"
        },
        "argTypes": {
          "status": {
            "control": { "type": "text" },
            "name": "status",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "handleOpen": {
            "name": "handleOpen",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Specify a function to open the Modal.",
            "defaultValue": null,
            "sbType": { "name": "function" },
            "table": { "type": { "summary": "func" }, "defaultValue": null }
          },
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "customButton": {
            "control": { "type": "object" },
            "name": "customButton",
            "type": { "required": false, "name": "other", "value": "element" },
            "required": false,
            "description": "Specify a custom trigger `Button`.",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "element" },
            "table": { "type": { "summary": "element" }, "defaultValue": null }
          },
          "id": {
            "control": { "type": "text" },
            "name": "id",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "buttonTriggerText": {
            "control": { "type": "object" },
            "name": "buttonTriggerText",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Specify the text for the trigger `Button`.",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "buttonTriggerClassName": {
            "control": { "type": "text" },
            "name": "buttonTriggerClassName",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify a `class` for the trigger `Button`.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "modalLabel": {
            "control": { "type": "text" },
            "name": "modalLabel",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "modalHeading": {
            "control": { "type": "text" },
            "name": "modalHeading",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "modalText": {
            "control": { "type": "text" },
            "name": "modalText",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "passiveModal": {
            "control": { "type": "boolean" },
            "name": "passiveModal",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "withHeader": {
            "control": { "type": "boolean" },
            "name": "withHeader",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "modalBeforeContent": {
            "control": { "type": "boolean" },
            "name": "modalBeforeContent",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "primaryButtonText": {
            "control": { "type": "text" },
            "name": "primaryButtonText",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": "Save",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "'Save'" }
            }
          },
          "secondaryButtonText": {
            "control": { "type": "text" },
            "name": "secondaryButtonText",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": "Cancel",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "'Cancel'" }
            }
          },
          "handleSubmit": {
            "name": "handleSubmit",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Specify a `function` which is triggered when submitting the `Modal`.",
            "defaultValue": null,
            "sbType": { "name": "function" },
            "table": { "type": { "summary": "func" }, "defaultValue": null }
          },
          "disabled": {
            "control": { "type": "boolean" },
            "name": "disabled",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "triggerButtonKind": {
            "control": { "type": "object" },
            "name": "triggerButtonKind",
            "type": {
              "required": false,
              "raw": "ButtonTypes.buttonKind",
              "name": "other",
              "value": "custom"
            },
            "required": false,
            "description": "",
            "defaultValue": "primary",
            "sbType": {
              "raw": "ButtonTypes.buttonKind",
              "name": "other",
              "value": "custom"
            },
            "table": {
              "type": { "summary": "ButtonTypes.buttonKind" },
              "defaultValue": { "summary": "'primary'" }
            }
          },
          "shouldCloseAfterSubmit": {
            "control": { "type": "boolean" },
            "name": "shouldCloseAfterSubmit",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify if `Modal` should be closed after submitting.",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          }
        },
        "initialArgs": {
          "primaryButtonText": "Save",
          "secondaryButtonText": "Cancel",
          "triggerButtonKind": "primary"
        }
      },
      "components-module--regular": {
        "id": "components-module--regular",
        "kind": "Components/Module",
        "name": "Regular",
        "story": "Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\nYou can customize the content by using `BannerNavigation`.\n"
          },
          "storySource": {
            "source": "(args) => (\n  <Module {...args}>\n    <ModuleHeader>Module example</ModuleHeader>\n    <ModuleBody>\n      <BodyContent />\n    </ModuleBody>\n    <ModuleFooter>Module footer</ModuleFooter>\n  </Module>\n)"
          },
          "__id": "components-module--regular",
          "args": {},
          "argTypes": {
            "centered": {
              "control": { "type": "object" },
              "name": "centered",
              "type": { "required": false },
              "required": false,
              "defaultValue": false,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": { "summary": "false" }
              }
            },
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false },
              "required": false,
              "description": "Specify the content of the `Module`, usually a `ModuleHeader` `ModuleBody` and `ModuleFooter`component.",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "className": {
              "control": { "type": "object" },
              "name": "className",
              "type": { "required": false },
              "required": false,
              "description": "The CSS class name for the slider.",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "noMargin": {
              "control": { "type": "object" },
              "name": "noMargin",
              "type": { "required": false },
              "required": false,
              "description": "Disables the default margin",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "fullHeight": {
              "control": { "type": "object" },
              "name": "fullHeight",
              "type": { "required": false },
              "required": false,
              "description": "Use 100% height of parent container",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "light": {
              "control": { "type": "object" },
              "name": "light",
              "type": { "required": false },
              "required": false,
              "description": "Light appearance (for white backgrounds)",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "dark": {
              "control": { "type": "object" },
              "name": "dark",
              "type": { "required": false },
              "required": false,
              "description": "Dark appearance",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "withHover": {
              "control": { "type": "object" },
              "name": "withHover",
              "type": { "required": false },
              "required": false,
              "description": "Additional hover styling",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            }
          },
          "__isArgsStory": true
        },
        "args": {},
        "argTypes": {
          "centered": {
            "control": { "type": "object" },
            "name": "centered",
            "type": { "required": false },
            "required": false,
            "defaultValue": false,
            "table": {
              "type": { "summary": "unknown" },
              "defaultValue": { "summary": "false" }
            }
          },
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false },
            "required": false,
            "description": "Specify the content of the `Module`, usually a `ModuleHeader` `ModuleBody` and `ModuleFooter`component.",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "object" },
            "name": "className",
            "type": { "required": false },
            "required": false,
            "description": "The CSS class name for the slider.",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "noMargin": {
            "control": { "type": "object" },
            "name": "noMargin",
            "type": { "required": false },
            "required": false,
            "description": "Disables the default margin",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "fullHeight": {
            "control": { "type": "object" },
            "name": "fullHeight",
            "type": { "required": false },
            "required": false,
            "description": "Use 100% height of parent container",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "light": {
            "control": { "type": "object" },
            "name": "light",
            "type": { "required": false },
            "required": false,
            "description": "Light appearance (for white backgrounds)",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "dark": {
            "control": { "type": "object" },
            "name": "dark",
            "type": { "required": false },
            "required": false,
            "description": "Dark appearance",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "withHover": {
            "control": { "type": "object" },
            "name": "withHover",
            "type": { "required": false },
            "required": false,
            "description": "Additional hover styling",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          }
        },
        "initialArgs": {}
      },
      "components-module--dark": {
        "id": "components-module--dark",
        "kind": "Components/Module",
        "name": "Dark",
        "story": "Dark",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "Use the `dark` prop to highlight a module."
          },
          "storySource": {
            "source": "(args) => (\n  <Module dark>\n    <ModuleHeader>Dark module example</ModuleHeader>\n    <ModuleBody>\n      <BodyContent />\n    </ModuleBody>\n    <ModuleFooter>Module footer</ModuleFooter>\n  </Module>\n)"
          },
          "__id": "components-module--dark",
          "args": {},
          "argTypes": {
            "centered": {
              "control": { "type": "object" },
              "name": "centered",
              "type": { "required": false },
              "required": false,
              "defaultValue": false,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": { "summary": "false" }
              }
            },
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false },
              "required": false,
              "description": "Specify the content of the `Module`, usually a `ModuleHeader` `ModuleBody` and `ModuleFooter`component.",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "className": {
              "control": { "type": "object" },
              "name": "className",
              "type": { "required": false },
              "required": false,
              "description": "The CSS class name for the slider.",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "noMargin": {
              "control": { "type": "object" },
              "name": "noMargin",
              "type": { "required": false },
              "required": false,
              "description": "Disables the default margin",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "fullHeight": {
              "control": { "type": "object" },
              "name": "fullHeight",
              "type": { "required": false },
              "required": false,
              "description": "Use 100% height of parent container",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "light": {
              "control": { "type": "object" },
              "name": "light",
              "type": { "required": false },
              "required": false,
              "description": "Light appearance (for white backgrounds)",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "dark": {
              "control": { "type": "object" },
              "name": "dark",
              "type": { "required": false },
              "required": false,
              "description": "Dark appearance",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "withHover": {
              "control": { "type": "object" },
              "name": "withHover",
              "type": { "required": false },
              "required": false,
              "description": "Additional hover styling",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            }
          },
          "__isArgsStory": true
        },
        "args": {},
        "argTypes": {
          "centered": {
            "control": { "type": "object" },
            "name": "centered",
            "type": { "required": false },
            "required": false,
            "defaultValue": false,
            "table": {
              "type": { "summary": "unknown" },
              "defaultValue": { "summary": "false" }
            }
          },
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false },
            "required": false,
            "description": "Specify the content of the `Module`, usually a `ModuleHeader` `ModuleBody` and `ModuleFooter`component.",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "object" },
            "name": "className",
            "type": { "required": false },
            "required": false,
            "description": "The CSS class name for the slider.",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "noMargin": {
            "control": { "type": "object" },
            "name": "noMargin",
            "type": { "required": false },
            "required": false,
            "description": "Disables the default margin",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "fullHeight": {
            "control": { "type": "object" },
            "name": "fullHeight",
            "type": { "required": false },
            "required": false,
            "description": "Use 100% height of parent container",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "light": {
            "control": { "type": "object" },
            "name": "light",
            "type": { "required": false },
            "required": false,
            "description": "Light appearance (for white backgrounds)",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "dark": {
            "control": { "type": "object" },
            "name": "dark",
            "type": { "required": false },
            "required": false,
            "description": "Dark appearance",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "withHover": {
            "control": { "type": "object" },
            "name": "withHover",
            "type": { "required": false },
            "required": false,
            "description": "Additional hover styling",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          }
        },
        "initialArgs": {}
      },
      "components-module--light": {
        "id": "components-module--light",
        "kind": "Components/Module",
        "name": "Light",
        "story": "Light",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "Use the `light` prop to show a module on a white background."
          },
          "storySource": {
            "source": "(args) => (\n  <Module light>\n    <ModuleHeader>Dark module example</ModuleHeader>\n    <ModuleBody>\n      <BodyContent />\n    </ModuleBody>\n    <ModuleFooter>Module footer</ModuleFooter>\n  </Module>\n)"
          },
          "__id": "components-module--light",
          "args": {},
          "argTypes": {
            "centered": {
              "control": { "type": "object" },
              "name": "centered",
              "type": { "required": false },
              "required": false,
              "defaultValue": false,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": { "summary": "false" }
              }
            },
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false },
              "required": false,
              "description": "Specify the content of the `Module`, usually a `ModuleHeader` `ModuleBody` and `ModuleFooter`component.",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "className": {
              "control": { "type": "object" },
              "name": "className",
              "type": { "required": false },
              "required": false,
              "description": "The CSS class name for the slider.",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "noMargin": {
              "control": { "type": "object" },
              "name": "noMargin",
              "type": { "required": false },
              "required": false,
              "description": "Disables the default margin",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "fullHeight": {
              "control": { "type": "object" },
              "name": "fullHeight",
              "type": { "required": false },
              "required": false,
              "description": "Use 100% height of parent container",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "light": {
              "control": { "type": "object" },
              "name": "light",
              "type": { "required": false },
              "required": false,
              "description": "Light appearance (for white backgrounds)",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "dark": {
              "control": { "type": "object" },
              "name": "dark",
              "type": { "required": false },
              "required": false,
              "description": "Dark appearance",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "withHover": {
              "control": { "type": "object" },
              "name": "withHover",
              "type": { "required": false },
              "required": false,
              "description": "Additional hover styling",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            }
          },
          "__isArgsStory": true
        },
        "args": {},
        "argTypes": {
          "centered": {
            "control": { "type": "object" },
            "name": "centered",
            "type": { "required": false },
            "required": false,
            "defaultValue": false,
            "table": {
              "type": { "summary": "unknown" },
              "defaultValue": { "summary": "false" }
            }
          },
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false },
            "required": false,
            "description": "Specify the content of the `Module`, usually a `ModuleHeader` `ModuleBody` and `ModuleFooter`component.",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "object" },
            "name": "className",
            "type": { "required": false },
            "required": false,
            "description": "The CSS class name for the slider.",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "noMargin": {
            "control": { "type": "object" },
            "name": "noMargin",
            "type": { "required": false },
            "required": false,
            "description": "Disables the default margin",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "fullHeight": {
            "control": { "type": "object" },
            "name": "fullHeight",
            "type": { "required": false },
            "required": false,
            "description": "Use 100% height of parent container",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "light": {
            "control": { "type": "object" },
            "name": "light",
            "type": { "required": false },
            "required": false,
            "description": "Light appearance (for white backgrounds)",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "dark": {
            "control": { "type": "object" },
            "name": "dark",
            "type": { "required": false },
            "required": false,
            "description": "Dark appearance",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "withHover": {
            "control": { "type": "object" },
            "name": "withHover",
            "type": { "required": false },
            "required": false,
            "description": "Additional hover styling",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          }
        },
        "initialArgs": {}
      },
      "components-module--with-hover": {
        "id": "components-module--with-hover",
        "kind": "Components/Module",
        "name": "With Hover",
        "story": "With Hover",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "Use the `light` prop to show a module on a white background."
          },
          "storySource": {
            "source": "(args) => (\n  <Module light withHover>\n    <ModuleBody>\n      <BodyContent />\n    </ModuleBody>\n  </Module>\n)"
          },
          "__id": "components-module--with-hover",
          "args": {},
          "argTypes": {
            "centered": {
              "control": { "type": "object" },
              "name": "centered",
              "type": { "required": false },
              "required": false,
              "defaultValue": false,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": { "summary": "false" }
              }
            },
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false },
              "required": false,
              "description": "Specify the content of the `Module`, usually a `ModuleHeader` `ModuleBody` and `ModuleFooter`component.",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "className": {
              "control": { "type": "object" },
              "name": "className",
              "type": { "required": false },
              "required": false,
              "description": "The CSS class name for the slider.",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "noMargin": {
              "control": { "type": "object" },
              "name": "noMargin",
              "type": { "required": false },
              "required": false,
              "description": "Disables the default margin",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "fullHeight": {
              "control": { "type": "object" },
              "name": "fullHeight",
              "type": { "required": false },
              "required": false,
              "description": "Use 100% height of parent container",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "light": {
              "control": { "type": "object" },
              "name": "light",
              "type": { "required": false },
              "required": false,
              "description": "Light appearance (for white backgrounds)",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "dark": {
              "control": { "type": "object" },
              "name": "dark",
              "type": { "required": false },
              "required": false,
              "description": "Dark appearance",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "withHover": {
              "control": { "type": "object" },
              "name": "withHover",
              "type": { "required": false },
              "required": false,
              "description": "Additional hover styling",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            }
          },
          "__isArgsStory": true
        },
        "args": {},
        "argTypes": {
          "centered": {
            "control": { "type": "object" },
            "name": "centered",
            "type": { "required": false },
            "required": false,
            "defaultValue": false,
            "table": {
              "type": { "summary": "unknown" },
              "defaultValue": { "summary": "false" }
            }
          },
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false },
            "required": false,
            "description": "Specify the content of the `Module`, usually a `ModuleHeader` `ModuleBody` and `ModuleFooter`component.",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "object" },
            "name": "className",
            "type": { "required": false },
            "required": false,
            "description": "The CSS class name for the slider.",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "noMargin": {
            "control": { "type": "object" },
            "name": "noMargin",
            "type": { "required": false },
            "required": false,
            "description": "Disables the default margin",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "fullHeight": {
            "control": { "type": "object" },
            "name": "fullHeight",
            "type": { "required": false },
            "required": false,
            "description": "Use 100% height of parent container",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "light": {
            "control": { "type": "object" },
            "name": "light",
            "type": { "required": false },
            "required": false,
            "description": "Light appearance (for white backgrounds)",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "dark": {
            "control": { "type": "object" },
            "name": "dark",
            "type": { "required": false },
            "required": false,
            "description": "Dark appearance",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "withHover": {
            "control": { "type": "object" },
            "name": "withHover",
            "type": { "required": false },
            "required": false,
            "description": "Additional hover styling",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          }
        },
        "initialArgs": {}
      },
      "components-notification--regular": {
        "id": "components-notification--regular",
        "kind": "Components/Notification",
        "name": "Regular",
        "story": "Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": {
            "source": "(args) => {\n  const notify = () => {\n    toast('A regular message');\n  };\n\n  const notifyAll = () => {\n    toast.success(\n      <span>\n        <Icon icon={iconCheckmarkGlyph} /> Wow so easy!\n      </span>\n    );\n    toast.success('Wow so easy!');\n    toast.warn('Please check again!');\n    toast.error('Something went terribly wrong!');\n  };\n  return (\n    <>\n      <Button onClick={notify}>Regular notification</Button>{' '}\n      <Button kind=\"secondary\" onClick={notifyAll}>\n        All Notifications\n      </Button>\n      <ToastContainer {...notificationStyle} {...args} />\n    </>\n  );\n}"
          },
          "__id": "components-notification--regular",
          "args": {},
          "argTypes": {},
          "__isArgsStory": true
        },
        "args": {},
        "argTypes": {},
        "initialArgs": {}
      },
      "forms-numberinput--regular": {
        "id": "forms-numberinput--regular",
        "kind": "Forms/NumberInput",
        "name": "Regular",
        "story": "Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": { "source": "(args) => <NumberInput {...args} />" },
          "__id": "forms-numberinput--regular",
          "args": {
            "name": "inputname",
            "helperText": "Optional helperText",
            "labelText": "The labelText"
          },
          "argTypes": {
            "name": {
              "control": { "type": "text" },
              "type": { "name": "string" },
              "name": "name"
            },
            "helperText": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "helperText",
              "required": false,
              "description": "Provide text that is used alongside the control label for additional help",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "labelText": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "labelText",
              "required": false,
              "description": "Generic `label` that will be used as the textual representation of what\nthis field is for",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify an optional className to be applied to the wrapper node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "formItemClassName": {
              "control": { "type": "text" },
              "name": "formItemClassName",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify an optional className to be applied to the form-item node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "disabled": {
              "control": { "type": "boolean" },
              "name": "disabled",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify if the control should be disabled, or not",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "hideLabel": {
              "control": { "type": "boolean" },
              "name": "hideLabel",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether you want the underlying label to be visually hidden",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "iconDescription": {
              "control": { "type": "text" },
              "name": "iconDescription",
              "type": { "required": true, "name": "string" },
              "required": true,
              "description": "Provide a description for up/down icons that can be read by screen readers",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "id": {
              "control": { "type": "text" },
              "name": "id",
              "type": { "required": true, "name": "string" },
              "required": true,
              "description": "Specify a custom `id` for the input",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "max": {
              "control": { "type": "number" },
              "name": "max",
              "type": { "required": false, "name": "number" },
              "required": false,
              "description": "The maximum value.",
              "defaultValue": null,
              "sbType": { "name": "number" },
              "table": { "type": { "summary": "number" }, "defaultValue": null }
            },
            "min": {
              "control": { "type": "number" },
              "name": "min",
              "type": { "required": false, "name": "number" },
              "required": false,
              "description": "The minimum value.",
              "defaultValue": null,
              "sbType": { "name": "number" },
              "table": { "type": { "summary": "number" }, "defaultValue": null }
            },
            "onChange": {
              "name": "onChange",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "The new value is available in 'imaginaryTarget.value'\ni.e. to get the value: evt.imaginaryTarget.value",
              "defaultValue": null,
              "sbType": { "name": "function" },
              "table": { "type": { "summary": "func" }, "defaultValue": null }
            },
            "onClick": {
              "name": "onClick",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Provide an optional function to be called when the up/down button is clicked",
              "defaultValue": null,
              "sbType": { "name": "function" },
              "table": { "type": { "summary": "func" }, "defaultValue": null }
            },
            "step": {
              "control": { "type": "number" },
              "name": "step",
              "type": { "required": false, "name": "number" },
              "required": false,
              "description": "Specify how much the valus should increase/decrease upon clicking on up/down button",
              "defaultValue": null,
              "sbType": { "name": "number" },
              "table": { "type": { "summary": "number" }, "defaultValue": null }
            },
            "value": {
              "control": { "type": "object" },
              "name": "value",
              "type": {
                "required": false,
                "name": "union",
                "value": [
                  {
                    "raw": "PropTypeEmptyString",
                    "name": "other",
                    "value": "custom"
                  },
                  { "name": "number" }
                ]
              },
              "required": false,
              "description": "Specify the value of the input, if undefined or null the value is empty",
              "defaultValue": null,
              "sbType": {
                "name": "union",
                "value": [
                  {
                    "raw": "PropTypeEmptyString",
                    "name": "other",
                    "value": "custom"
                  },
                  { "name": "number" }
                ]
              },
              "table": {
                "type": { "summary": "PropTypeEmptyString | number" },
                "defaultValue": null
              }
            },
            "invalid": {
              "control": { "type": "boolean" },
              "name": "invalid",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify if the currently value is invalid.",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "invalidText": {
              "control": { "type": "text" },
              "name": "invalidText",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Message which is displayed if the value is invalid.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "additional": {
              "control": { "type": "object" },
              "name": "additional",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Provide additional component that is used alongside the input for customization",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "light": {
              "control": { "type": "boolean" },
              "name": "light",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "`true` to use the light version.",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "allowEmpty": {
              "control": { "type": "boolean" },
              "name": "allowEmpty",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "`true` to allow empty string.",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "name": "inputname",
          "helperText": "Optional helperText",
          "labelText": "The labelText"
        },
        "argTypes": {
          "name": {
            "control": { "type": "text" },
            "type": { "name": "string" },
            "name": "name"
          },
          "helperText": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "helperText",
            "required": false,
            "description": "Provide text that is used alongside the control label for additional help",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "labelText": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "labelText",
            "required": false,
            "description": "Generic `label` that will be used as the textual representation of what\nthis field is for",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify an optional className to be applied to the wrapper node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "formItemClassName": {
            "control": { "type": "text" },
            "name": "formItemClassName",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify an optional className to be applied to the form-item node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "disabled": {
            "control": { "type": "boolean" },
            "name": "disabled",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify if the control should be disabled, or not",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "hideLabel": {
            "control": { "type": "boolean" },
            "name": "hideLabel",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether you want the underlying label to be visually hidden",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "iconDescription": {
            "control": { "type": "text" },
            "name": "iconDescription",
            "type": { "required": true, "name": "string" },
            "required": true,
            "description": "Provide a description for up/down icons that can be read by screen readers",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "id": {
            "control": { "type": "text" },
            "name": "id",
            "type": { "required": true, "name": "string" },
            "required": true,
            "description": "Specify a custom `id` for the input",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "max": {
            "control": { "type": "number" },
            "name": "max",
            "type": { "required": false, "name": "number" },
            "required": false,
            "description": "The maximum value.",
            "defaultValue": null,
            "sbType": { "name": "number" },
            "table": { "type": { "summary": "number" }, "defaultValue": null }
          },
          "min": {
            "control": { "type": "number" },
            "name": "min",
            "type": { "required": false, "name": "number" },
            "required": false,
            "description": "The minimum value.",
            "defaultValue": null,
            "sbType": { "name": "number" },
            "table": { "type": { "summary": "number" }, "defaultValue": null }
          },
          "onChange": {
            "name": "onChange",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "The new value is available in 'imaginaryTarget.value'\ni.e. to get the value: evt.imaginaryTarget.value",
            "defaultValue": null,
            "sbType": { "name": "function" },
            "table": { "type": { "summary": "func" }, "defaultValue": null }
          },
          "onClick": {
            "name": "onClick",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Provide an optional function to be called when the up/down button is clicked",
            "defaultValue": null,
            "sbType": { "name": "function" },
            "table": { "type": { "summary": "func" }, "defaultValue": null }
          },
          "step": {
            "control": { "type": "number" },
            "name": "step",
            "type": { "required": false, "name": "number" },
            "required": false,
            "description": "Specify how much the valus should increase/decrease upon clicking on up/down button",
            "defaultValue": null,
            "sbType": { "name": "number" },
            "table": { "type": { "summary": "number" }, "defaultValue": null }
          },
          "value": {
            "control": { "type": "object" },
            "name": "value",
            "type": {
              "required": false,
              "name": "union",
              "value": [
                {
                  "raw": "PropTypeEmptyString",
                  "name": "other",
                  "value": "custom"
                },
                { "name": "number" }
              ]
            },
            "required": false,
            "description": "Specify the value of the input, if undefined or null the value is empty",
            "defaultValue": null,
            "sbType": {
              "name": "union",
              "value": [
                {
                  "raw": "PropTypeEmptyString",
                  "name": "other",
                  "value": "custom"
                },
                { "name": "number" }
              ]
            },
            "table": {
              "type": { "summary": "PropTypeEmptyString | number" },
              "defaultValue": null
            }
          },
          "invalid": {
            "control": { "type": "boolean" },
            "name": "invalid",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify if the currently value is invalid.",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "invalidText": {
            "control": { "type": "text" },
            "name": "invalidText",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Message which is displayed if the value is invalid.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "additional": {
            "control": { "type": "object" },
            "name": "additional",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Provide additional component that is used alongside the input for customization",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "light": {
            "control": { "type": "boolean" },
            "name": "light",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "`true` to use the light version.",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "allowEmpty": {
            "control": { "type": "boolean" },
            "name": "allowEmpty",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "`true` to allow empty string.",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          }
        },
        "initialArgs": {
          "name": "inputname",
          "helperText": "Optional helperText",
          "labelText": "The labelText"
        }
      },
      "forms-numberinput--disabled": {
        "id": "forms-numberinput--disabled",
        "kind": "Forms/NumberInput",
        "name": "Disabled",
        "story": "Disabled",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "`disabled` property specify the input to be disabled or not. Set `disabled` to true to make input non-interative "
          },
          "storySource": { "source": "(args) => <NumberInput {...args} />" },
          "__id": "forms-numberinput--disabled",
          "args": {
            "name": "inputname",
            "helperText": "Optional helperText",
            "labelText": "The labelText",
            "disabled": true
          },
          "argTypes": {
            "name": {
              "control": { "type": "text" },
              "type": { "name": "string" },
              "name": "name"
            },
            "helperText": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "helperText",
              "required": false,
              "description": "Provide text that is used alongside the control label for additional help",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "labelText": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "labelText",
              "required": false,
              "description": "Generic `label` that will be used as the textual representation of what\nthis field is for",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "disabled": {
              "control": { "type": "boolean" },
              "type": { "name": "boolean", "required": false },
              "name": "disabled",
              "required": false,
              "description": "Specify if the control should be disabled, or not",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify an optional className to be applied to the wrapper node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "formItemClassName": {
              "control": { "type": "text" },
              "name": "formItemClassName",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify an optional className to be applied to the form-item node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "hideLabel": {
              "control": { "type": "boolean" },
              "name": "hideLabel",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether you want the underlying label to be visually hidden",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "iconDescription": {
              "control": { "type": "text" },
              "name": "iconDescription",
              "type": { "required": true, "name": "string" },
              "required": true,
              "description": "Provide a description for up/down icons that can be read by screen readers",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "id": {
              "control": { "type": "text" },
              "name": "id",
              "type": { "required": true, "name": "string" },
              "required": true,
              "description": "Specify a custom `id` for the input",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "max": {
              "control": { "type": "number" },
              "name": "max",
              "type": { "required": false, "name": "number" },
              "required": false,
              "description": "The maximum value.",
              "defaultValue": null,
              "sbType": { "name": "number" },
              "table": { "type": { "summary": "number" }, "defaultValue": null }
            },
            "min": {
              "control": { "type": "number" },
              "name": "min",
              "type": { "required": false, "name": "number" },
              "required": false,
              "description": "The minimum value.",
              "defaultValue": null,
              "sbType": { "name": "number" },
              "table": { "type": { "summary": "number" }, "defaultValue": null }
            },
            "onChange": {
              "name": "onChange",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "The new value is available in 'imaginaryTarget.value'\ni.e. to get the value: evt.imaginaryTarget.value",
              "defaultValue": null,
              "sbType": { "name": "function" },
              "table": { "type": { "summary": "func" }, "defaultValue": null }
            },
            "onClick": {
              "name": "onClick",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Provide an optional function to be called when the up/down button is clicked",
              "defaultValue": null,
              "sbType": { "name": "function" },
              "table": { "type": { "summary": "func" }, "defaultValue": null }
            },
            "step": {
              "control": { "type": "number" },
              "name": "step",
              "type": { "required": false, "name": "number" },
              "required": false,
              "description": "Specify how much the valus should increase/decrease upon clicking on up/down button",
              "defaultValue": null,
              "sbType": { "name": "number" },
              "table": { "type": { "summary": "number" }, "defaultValue": null }
            },
            "value": {
              "control": { "type": "object" },
              "name": "value",
              "type": {
                "required": false,
                "name": "union",
                "value": [
                  {
                    "raw": "PropTypeEmptyString",
                    "name": "other",
                    "value": "custom"
                  },
                  { "name": "number" }
                ]
              },
              "required": false,
              "description": "Specify the value of the input, if undefined or null the value is empty",
              "defaultValue": null,
              "sbType": {
                "name": "union",
                "value": [
                  {
                    "raw": "PropTypeEmptyString",
                    "name": "other",
                    "value": "custom"
                  },
                  { "name": "number" }
                ]
              },
              "table": {
                "type": { "summary": "PropTypeEmptyString | number" },
                "defaultValue": null
              }
            },
            "invalid": {
              "control": { "type": "boolean" },
              "name": "invalid",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify if the currently value is invalid.",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "invalidText": {
              "control": { "type": "text" },
              "name": "invalidText",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Message which is displayed if the value is invalid.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "additional": {
              "control": { "type": "object" },
              "name": "additional",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Provide additional component that is used alongside the input for customization",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "light": {
              "control": { "type": "boolean" },
              "name": "light",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "`true` to use the light version.",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "allowEmpty": {
              "control": { "type": "boolean" },
              "name": "allowEmpty",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "`true` to allow empty string.",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "name": "inputname",
          "helperText": "Optional helperText",
          "labelText": "The labelText",
          "disabled": true
        },
        "argTypes": {
          "name": {
            "control": { "type": "text" },
            "type": { "name": "string" },
            "name": "name"
          },
          "helperText": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "helperText",
            "required": false,
            "description": "Provide text that is used alongside the control label for additional help",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "labelText": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "labelText",
            "required": false,
            "description": "Generic `label` that will be used as the textual representation of what\nthis field is for",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "disabled": {
            "control": { "type": "boolean" },
            "type": { "name": "boolean", "required": false },
            "name": "disabled",
            "required": false,
            "description": "Specify if the control should be disabled, or not",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify an optional className to be applied to the wrapper node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "formItemClassName": {
            "control": { "type": "text" },
            "name": "formItemClassName",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify an optional className to be applied to the form-item node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "hideLabel": {
            "control": { "type": "boolean" },
            "name": "hideLabel",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether you want the underlying label to be visually hidden",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "iconDescription": {
            "control": { "type": "text" },
            "name": "iconDescription",
            "type": { "required": true, "name": "string" },
            "required": true,
            "description": "Provide a description for up/down icons that can be read by screen readers",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "id": {
            "control": { "type": "text" },
            "name": "id",
            "type": { "required": true, "name": "string" },
            "required": true,
            "description": "Specify a custom `id` for the input",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "max": {
            "control": { "type": "number" },
            "name": "max",
            "type": { "required": false, "name": "number" },
            "required": false,
            "description": "The maximum value.",
            "defaultValue": null,
            "sbType": { "name": "number" },
            "table": { "type": { "summary": "number" }, "defaultValue": null }
          },
          "min": {
            "control": { "type": "number" },
            "name": "min",
            "type": { "required": false, "name": "number" },
            "required": false,
            "description": "The minimum value.",
            "defaultValue": null,
            "sbType": { "name": "number" },
            "table": { "type": { "summary": "number" }, "defaultValue": null }
          },
          "onChange": {
            "name": "onChange",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "The new value is available in 'imaginaryTarget.value'\ni.e. to get the value: evt.imaginaryTarget.value",
            "defaultValue": null,
            "sbType": { "name": "function" },
            "table": { "type": { "summary": "func" }, "defaultValue": null }
          },
          "onClick": {
            "name": "onClick",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Provide an optional function to be called when the up/down button is clicked",
            "defaultValue": null,
            "sbType": { "name": "function" },
            "table": { "type": { "summary": "func" }, "defaultValue": null }
          },
          "step": {
            "control": { "type": "number" },
            "name": "step",
            "type": { "required": false, "name": "number" },
            "required": false,
            "description": "Specify how much the valus should increase/decrease upon clicking on up/down button",
            "defaultValue": null,
            "sbType": { "name": "number" },
            "table": { "type": { "summary": "number" }, "defaultValue": null }
          },
          "value": {
            "control": { "type": "object" },
            "name": "value",
            "type": {
              "required": false,
              "name": "union",
              "value": [
                {
                  "raw": "PropTypeEmptyString",
                  "name": "other",
                  "value": "custom"
                },
                { "name": "number" }
              ]
            },
            "required": false,
            "description": "Specify the value of the input, if undefined or null the value is empty",
            "defaultValue": null,
            "sbType": {
              "name": "union",
              "value": [
                {
                  "raw": "PropTypeEmptyString",
                  "name": "other",
                  "value": "custom"
                },
                { "name": "number" }
              ]
            },
            "table": {
              "type": { "summary": "PropTypeEmptyString | number" },
              "defaultValue": null
            }
          },
          "invalid": {
            "control": { "type": "boolean" },
            "name": "invalid",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify if the currently value is invalid.",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "invalidText": {
            "control": { "type": "text" },
            "name": "invalidText",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Message which is displayed if the value is invalid.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "additional": {
            "control": { "type": "object" },
            "name": "additional",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Provide additional component that is used alongside the input for customization",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "light": {
            "control": { "type": "boolean" },
            "name": "light",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "`true` to use the light version.",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "allowEmpty": {
            "control": { "type": "boolean" },
            "name": "allowEmpty",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "`true` to allow empty string.",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          }
        },
        "initialArgs": {
          "name": "inputname",
          "helperText": "Optional helperText",
          "labelText": "The labelText",
          "disabled": true
        }
      },
      "forms-numberinput--hide-label": {
        "id": "forms-numberinput--hide-label",
        "kind": "Forms/NumberInput",
        "name": "Hide Label",
        "story": "Hide Label",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "`hideLabel` property specify hides the label text specified to describe the input"
          },
          "storySource": { "source": "(args) => <NumberInput {...args} />" },
          "__id": "forms-numberinput--hide-label",
          "args": {
            "name": "inputname",
            "helperText": "Optional helperText",
            "labelText": "The labelText",
            "hideLabel": true
          },
          "argTypes": {
            "name": {
              "control": { "type": "text" },
              "type": { "name": "string" },
              "name": "name"
            },
            "helperText": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "helperText",
              "required": false,
              "description": "Provide text that is used alongside the control label for additional help",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "labelText": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "labelText",
              "required": false,
              "description": "Generic `label` that will be used as the textual representation of what\nthis field is for",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "hideLabel": {
              "control": { "type": "boolean" },
              "type": { "name": "boolean", "required": false },
              "name": "hideLabel",
              "required": false,
              "description": "Specify whether you want the underlying label to be visually hidden",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify an optional className to be applied to the wrapper node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "formItemClassName": {
              "control": { "type": "text" },
              "name": "formItemClassName",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify an optional className to be applied to the form-item node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "disabled": {
              "control": { "type": "boolean" },
              "name": "disabled",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify if the control should be disabled, or not",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "iconDescription": {
              "control": { "type": "text" },
              "name": "iconDescription",
              "type": { "required": true, "name": "string" },
              "required": true,
              "description": "Provide a description for up/down icons that can be read by screen readers",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "id": {
              "control": { "type": "text" },
              "name": "id",
              "type": { "required": true, "name": "string" },
              "required": true,
              "description": "Specify a custom `id` for the input",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "max": {
              "control": { "type": "number" },
              "name": "max",
              "type": { "required": false, "name": "number" },
              "required": false,
              "description": "The maximum value.",
              "defaultValue": null,
              "sbType": { "name": "number" },
              "table": { "type": { "summary": "number" }, "defaultValue": null }
            },
            "min": {
              "control": { "type": "number" },
              "name": "min",
              "type": { "required": false, "name": "number" },
              "required": false,
              "description": "The minimum value.",
              "defaultValue": null,
              "sbType": { "name": "number" },
              "table": { "type": { "summary": "number" }, "defaultValue": null }
            },
            "onChange": {
              "name": "onChange",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "The new value is available in 'imaginaryTarget.value'\ni.e. to get the value: evt.imaginaryTarget.value",
              "defaultValue": null,
              "sbType": { "name": "function" },
              "table": { "type": { "summary": "func" }, "defaultValue": null }
            },
            "onClick": {
              "name": "onClick",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Provide an optional function to be called when the up/down button is clicked",
              "defaultValue": null,
              "sbType": { "name": "function" },
              "table": { "type": { "summary": "func" }, "defaultValue": null }
            },
            "step": {
              "control": { "type": "number" },
              "name": "step",
              "type": { "required": false, "name": "number" },
              "required": false,
              "description": "Specify how much the valus should increase/decrease upon clicking on up/down button",
              "defaultValue": null,
              "sbType": { "name": "number" },
              "table": { "type": { "summary": "number" }, "defaultValue": null }
            },
            "value": {
              "control": { "type": "object" },
              "name": "value",
              "type": {
                "required": false,
                "name": "union",
                "value": [
                  {
                    "raw": "PropTypeEmptyString",
                    "name": "other",
                    "value": "custom"
                  },
                  { "name": "number" }
                ]
              },
              "required": false,
              "description": "Specify the value of the input, if undefined or null the value is empty",
              "defaultValue": null,
              "sbType": {
                "name": "union",
                "value": [
                  {
                    "raw": "PropTypeEmptyString",
                    "name": "other",
                    "value": "custom"
                  },
                  { "name": "number" }
                ]
              },
              "table": {
                "type": { "summary": "PropTypeEmptyString | number" },
                "defaultValue": null
              }
            },
            "invalid": {
              "control": { "type": "boolean" },
              "name": "invalid",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify if the currently value is invalid.",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "invalidText": {
              "control": { "type": "text" },
              "name": "invalidText",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Message which is displayed if the value is invalid.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "additional": {
              "control": { "type": "object" },
              "name": "additional",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Provide additional component that is used alongside the input for customization",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "light": {
              "control": { "type": "boolean" },
              "name": "light",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "`true` to use the light version.",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "allowEmpty": {
              "control": { "type": "boolean" },
              "name": "allowEmpty",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "`true` to allow empty string.",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "name": "inputname",
          "helperText": "Optional helperText",
          "labelText": "The labelText",
          "hideLabel": true
        },
        "argTypes": {
          "name": {
            "control": { "type": "text" },
            "type": { "name": "string" },
            "name": "name"
          },
          "helperText": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "helperText",
            "required": false,
            "description": "Provide text that is used alongside the control label for additional help",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "labelText": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "labelText",
            "required": false,
            "description": "Generic `label` that will be used as the textual representation of what\nthis field is for",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "hideLabel": {
            "control": { "type": "boolean" },
            "type": { "name": "boolean", "required": false },
            "name": "hideLabel",
            "required": false,
            "description": "Specify whether you want the underlying label to be visually hidden",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify an optional className to be applied to the wrapper node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "formItemClassName": {
            "control": { "type": "text" },
            "name": "formItemClassName",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify an optional className to be applied to the form-item node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "disabled": {
            "control": { "type": "boolean" },
            "name": "disabled",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify if the control should be disabled, or not",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "iconDescription": {
            "control": { "type": "text" },
            "name": "iconDescription",
            "type": { "required": true, "name": "string" },
            "required": true,
            "description": "Provide a description for up/down icons that can be read by screen readers",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "id": {
            "control": { "type": "text" },
            "name": "id",
            "type": { "required": true, "name": "string" },
            "required": true,
            "description": "Specify a custom `id` for the input",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "max": {
            "control": { "type": "number" },
            "name": "max",
            "type": { "required": false, "name": "number" },
            "required": false,
            "description": "The maximum value.",
            "defaultValue": null,
            "sbType": { "name": "number" },
            "table": { "type": { "summary": "number" }, "defaultValue": null }
          },
          "min": {
            "control": { "type": "number" },
            "name": "min",
            "type": { "required": false, "name": "number" },
            "required": false,
            "description": "The minimum value.",
            "defaultValue": null,
            "sbType": { "name": "number" },
            "table": { "type": { "summary": "number" }, "defaultValue": null }
          },
          "onChange": {
            "name": "onChange",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "The new value is available in 'imaginaryTarget.value'\ni.e. to get the value: evt.imaginaryTarget.value",
            "defaultValue": null,
            "sbType": { "name": "function" },
            "table": { "type": { "summary": "func" }, "defaultValue": null }
          },
          "onClick": {
            "name": "onClick",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Provide an optional function to be called when the up/down button is clicked",
            "defaultValue": null,
            "sbType": { "name": "function" },
            "table": { "type": { "summary": "func" }, "defaultValue": null }
          },
          "step": {
            "control": { "type": "number" },
            "name": "step",
            "type": { "required": false, "name": "number" },
            "required": false,
            "description": "Specify how much the valus should increase/decrease upon clicking on up/down button",
            "defaultValue": null,
            "sbType": { "name": "number" },
            "table": { "type": { "summary": "number" }, "defaultValue": null }
          },
          "value": {
            "control": { "type": "object" },
            "name": "value",
            "type": {
              "required": false,
              "name": "union",
              "value": [
                {
                  "raw": "PropTypeEmptyString",
                  "name": "other",
                  "value": "custom"
                },
                { "name": "number" }
              ]
            },
            "required": false,
            "description": "Specify the value of the input, if undefined or null the value is empty",
            "defaultValue": null,
            "sbType": {
              "name": "union",
              "value": [
                {
                  "raw": "PropTypeEmptyString",
                  "name": "other",
                  "value": "custom"
                },
                { "name": "number" }
              ]
            },
            "table": {
              "type": { "summary": "PropTypeEmptyString | number" },
              "defaultValue": null
            }
          },
          "invalid": {
            "control": { "type": "boolean" },
            "name": "invalid",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify if the currently value is invalid.",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "invalidText": {
            "control": { "type": "text" },
            "name": "invalidText",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Message which is displayed if the value is invalid.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "additional": {
            "control": { "type": "object" },
            "name": "additional",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Provide additional component that is used alongside the input for customization",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "light": {
            "control": { "type": "boolean" },
            "name": "light",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "`true` to use the light version.",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "allowEmpty": {
            "control": { "type": "boolean" },
            "name": "allowEmpty",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "`true` to allow empty string.",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          }
        },
        "initialArgs": {
          "name": "inputname",
          "helperText": "Optional helperText",
          "labelText": "The labelText",
          "hideLabel": true
        }
      },
      "forms-numberinput--invalid": {
        "id": "forms-numberinput--invalid",
        "kind": "Forms/NumberInput",
        "name": "Invalid",
        "story": "Invalid",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\n`invalid` property is applied to the `NumberInput` when the value expected is invalid.\n"
          },
          "storySource": { "source": "(args) => <NumberInput {...args} />" },
          "__id": "forms-numberinput--invalid",
          "args": {
            "name": "inputname",
            "helperText": "Optional helperText",
            "labelText": "The labelText",
            "invalid": { "message": "Please enter your number" }
          },
          "argTypes": {
            "name": {
              "control": { "type": "text" },
              "type": { "name": "string" },
              "name": "name"
            },
            "helperText": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "helperText",
              "required": false,
              "description": "Provide text that is used alongside the control label for additional help",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "labelText": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "labelText",
              "required": false,
              "description": "Generic `label` that will be used as the textual representation of what\nthis field is for",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "invalid": {
              "control": { "type": "boolean" },
              "type": {
                "name": "boolean",
                "value": { "message": { "name": "string" } },
                "required": false
              },
              "name": "invalid",
              "required": false,
              "description": "Specify if the currently value is invalid.",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify an optional className to be applied to the wrapper node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "formItemClassName": {
              "control": { "type": "text" },
              "name": "formItemClassName",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify an optional className to be applied to the form-item node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "disabled": {
              "control": { "type": "boolean" },
              "name": "disabled",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify if the control should be disabled, or not",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "hideLabel": {
              "control": { "type": "boolean" },
              "name": "hideLabel",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether you want the underlying label to be visually hidden",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "iconDescription": {
              "control": { "type": "text" },
              "name": "iconDescription",
              "type": { "required": true, "name": "string" },
              "required": true,
              "description": "Provide a description for up/down icons that can be read by screen readers",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "id": {
              "control": { "type": "text" },
              "name": "id",
              "type": { "required": true, "name": "string" },
              "required": true,
              "description": "Specify a custom `id` for the input",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "max": {
              "control": { "type": "number" },
              "name": "max",
              "type": { "required": false, "name": "number" },
              "required": false,
              "description": "The maximum value.",
              "defaultValue": null,
              "sbType": { "name": "number" },
              "table": { "type": { "summary": "number" }, "defaultValue": null }
            },
            "min": {
              "control": { "type": "number" },
              "name": "min",
              "type": { "required": false, "name": "number" },
              "required": false,
              "description": "The minimum value.",
              "defaultValue": null,
              "sbType": { "name": "number" },
              "table": { "type": { "summary": "number" }, "defaultValue": null }
            },
            "onChange": {
              "name": "onChange",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "The new value is available in 'imaginaryTarget.value'\ni.e. to get the value: evt.imaginaryTarget.value",
              "defaultValue": null,
              "sbType": { "name": "function" },
              "table": { "type": { "summary": "func" }, "defaultValue": null }
            },
            "onClick": {
              "name": "onClick",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Provide an optional function to be called when the up/down button is clicked",
              "defaultValue": null,
              "sbType": { "name": "function" },
              "table": { "type": { "summary": "func" }, "defaultValue": null }
            },
            "step": {
              "control": { "type": "number" },
              "name": "step",
              "type": { "required": false, "name": "number" },
              "required": false,
              "description": "Specify how much the valus should increase/decrease upon clicking on up/down button",
              "defaultValue": null,
              "sbType": { "name": "number" },
              "table": { "type": { "summary": "number" }, "defaultValue": null }
            },
            "value": {
              "control": { "type": "object" },
              "name": "value",
              "type": {
                "required": false,
                "name": "union",
                "value": [
                  {
                    "raw": "PropTypeEmptyString",
                    "name": "other",
                    "value": "custom"
                  },
                  { "name": "number" }
                ]
              },
              "required": false,
              "description": "Specify the value of the input, if undefined or null the value is empty",
              "defaultValue": null,
              "sbType": {
                "name": "union",
                "value": [
                  {
                    "raw": "PropTypeEmptyString",
                    "name": "other",
                    "value": "custom"
                  },
                  { "name": "number" }
                ]
              },
              "table": {
                "type": { "summary": "PropTypeEmptyString | number" },
                "defaultValue": null
              }
            },
            "invalidText": {
              "control": { "type": "text" },
              "name": "invalidText",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Message which is displayed if the value is invalid.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "additional": {
              "control": { "type": "object" },
              "name": "additional",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Provide additional component that is used alongside the input for customization",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "light": {
              "control": { "type": "boolean" },
              "name": "light",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "`true` to use the light version.",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "allowEmpty": {
              "control": { "type": "boolean" },
              "name": "allowEmpty",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "`true` to allow empty string.",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "name": "inputname",
          "helperText": "Optional helperText",
          "labelText": "The labelText",
          "invalid": { "message": "Please enter your number" }
        },
        "argTypes": {
          "name": {
            "control": { "type": "text" },
            "type": { "name": "string" },
            "name": "name"
          },
          "helperText": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "helperText",
            "required": false,
            "description": "Provide text that is used alongside the control label for additional help",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "labelText": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "labelText",
            "required": false,
            "description": "Generic `label` that will be used as the textual representation of what\nthis field is for",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "invalid": {
            "control": { "type": "boolean" },
            "type": {
              "name": "boolean",
              "value": { "message": { "name": "string" } },
              "required": false
            },
            "name": "invalid",
            "required": false,
            "description": "Specify if the currently value is invalid.",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify an optional className to be applied to the wrapper node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "formItemClassName": {
            "control": { "type": "text" },
            "name": "formItemClassName",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify an optional className to be applied to the form-item node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "disabled": {
            "control": { "type": "boolean" },
            "name": "disabled",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify if the control should be disabled, or not",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "hideLabel": {
            "control": { "type": "boolean" },
            "name": "hideLabel",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether you want the underlying label to be visually hidden",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "iconDescription": {
            "control": { "type": "text" },
            "name": "iconDescription",
            "type": { "required": true, "name": "string" },
            "required": true,
            "description": "Provide a description for up/down icons that can be read by screen readers",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "id": {
            "control": { "type": "text" },
            "name": "id",
            "type": { "required": true, "name": "string" },
            "required": true,
            "description": "Specify a custom `id` for the input",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "max": {
            "control": { "type": "number" },
            "name": "max",
            "type": { "required": false, "name": "number" },
            "required": false,
            "description": "The maximum value.",
            "defaultValue": null,
            "sbType": { "name": "number" },
            "table": { "type": { "summary": "number" }, "defaultValue": null }
          },
          "min": {
            "control": { "type": "number" },
            "name": "min",
            "type": { "required": false, "name": "number" },
            "required": false,
            "description": "The minimum value.",
            "defaultValue": null,
            "sbType": { "name": "number" },
            "table": { "type": { "summary": "number" }, "defaultValue": null }
          },
          "onChange": {
            "name": "onChange",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "The new value is available in 'imaginaryTarget.value'\ni.e. to get the value: evt.imaginaryTarget.value",
            "defaultValue": null,
            "sbType": { "name": "function" },
            "table": { "type": { "summary": "func" }, "defaultValue": null }
          },
          "onClick": {
            "name": "onClick",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Provide an optional function to be called when the up/down button is clicked",
            "defaultValue": null,
            "sbType": { "name": "function" },
            "table": { "type": { "summary": "func" }, "defaultValue": null }
          },
          "step": {
            "control": { "type": "number" },
            "name": "step",
            "type": { "required": false, "name": "number" },
            "required": false,
            "description": "Specify how much the valus should increase/decrease upon clicking on up/down button",
            "defaultValue": null,
            "sbType": { "name": "number" },
            "table": { "type": { "summary": "number" }, "defaultValue": null }
          },
          "value": {
            "control": { "type": "object" },
            "name": "value",
            "type": {
              "required": false,
              "name": "union",
              "value": [
                {
                  "raw": "PropTypeEmptyString",
                  "name": "other",
                  "value": "custom"
                },
                { "name": "number" }
              ]
            },
            "required": false,
            "description": "Specify the value of the input, if undefined or null the value is empty",
            "defaultValue": null,
            "sbType": {
              "name": "union",
              "value": [
                {
                  "raw": "PropTypeEmptyString",
                  "name": "other",
                  "value": "custom"
                },
                { "name": "number" }
              ]
            },
            "table": {
              "type": { "summary": "PropTypeEmptyString | number" },
              "defaultValue": null
            }
          },
          "invalidText": {
            "control": { "type": "text" },
            "name": "invalidText",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Message which is displayed if the value is invalid.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "additional": {
            "control": { "type": "object" },
            "name": "additional",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Provide additional component that is used alongside the input for customization",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "light": {
            "control": { "type": "boolean" },
            "name": "light",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "`true` to use the light version.",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "allowEmpty": {
            "control": { "type": "boolean" },
            "name": "allowEmpty",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "`true` to allow empty string.",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          }
        },
        "initialArgs": {
          "name": "inputname",
          "helperText": "Optional helperText",
          "labelText": "The labelText",
          "invalid": { "message": "Please enter your number" }
        }
      },
      "components-pagination--regular": {
        "id": "components-pagination--regular",
        "kind": "Components/Pagination",
        "name": "Regular",
        "story": "Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\nYou can customize the content by using `BannerNavigation`.\n"
          },
          "storySource": {
            "source": "(args) => <Pagination {...args}>Text</Pagination>"
          },
          "__id": "components-pagination--regular",
          "args": { "totalItems": 30 },
          "argTypes": {
            "totalItems": {
              "control": { "type": "number" },
              "type": { "name": "number", "required": false },
              "name": "totalItems",
              "required": false,
              "description": "The total number of items.",
              "defaultValue": null,
              "sbType": { "name": "number" },
              "table": { "type": { "summary": "number" }, "defaultValue": null }
            },
            "onChange": {
              "type": { "name": "function", "required": false },
              "name": "onChange",
              "required": false,
              "description": "The callback function called when the current page changes.",
              "defaultValue": null,
              "sbType": { "name": "function" },
              "table": { "type": { "summary": "func" }, "defaultValue": null }
            },
            "backwardText": {
              "control": { "type": "text" },
              "name": "backwardText",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The description for the backward icon.",
              "defaultValue": "Backward",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "'Backward'" }
              }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The CSS class names.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "itemRangeText": {
              "name": "itemRangeText",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "The function returning a translatable text showing where the current page is,\nin a manner of the range of items.",
              "sbType": { "name": "function" },
              "table": {
                "type": { "summary": "func" },
                "defaultValue": {
                  "summary": "func",
                  "detail": "(min, max, total) => `${ min }-${ max } of ${ total } items`"
                }
              }
            },
            "forwardText": {
              "control": { "type": "text" },
              "name": "forwardText",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The description for the forward icon.",
              "defaultValue": "Forward",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "'Forward'" }
              }
            },
            "id": {
              "control": { "type": "object" },
              "name": "id",
              "type": {
                "required": false,
                "name": "union",
                "value": [{ "name": "string" }, { "name": "number" }]
              },
              "required": false,
              "description": "The unique ID of this component instance.",
              "defaultValue": null,
              "sbType": {
                "name": "union",
                "value": [{ "name": "string" }, { "name": "number" }]
              },
              "table": {
                "type": { "summary": "string | number" },
                "defaultValue": null
              }
            },
            "itemsPerPageText": {
              "control": { "type": "text" },
              "name": "itemsPerPageText",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The translatable text indicating the number of items per page.",
              "defaultValue": "Items per page:",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "'Items per page:'" }
              }
            },
            "itemsPerPageFollowsText": {
              "control": { "type": "text" },
              "name": "itemsPerPageFollowsText",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "A variant of `itemsPerPageText`, with a sign indicating that the number follows, e.g. ':'.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "itemText": {
              "name": "itemText",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "A variant of `itemRangeText`, used if the total number of items is unknown.",
              "sbType": { "name": "function" },
              "table": {
                "type": { "summary": "func" },
                "defaultValue": {
                  "summary": "(min, max) => `${ min }-${ max } items`"
                }
              }
            },
            "pageNumberText": {
              "control": { "type": "text" },
              "name": "pageNumberText",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": "Page Number",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "'Page Number'" }
              }
            },
            "pageRangeText": {
              "name": "pageRangeText",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "A function returning PII showing where the current page is.",
              "sbType": { "name": "function" },
              "table": {
                "type": { "summary": "func" },
                "defaultValue": {
                  "summary": "func",
                  "detail": "(current, total) => `${ current } of ${ total } pages`"
                }
              }
            },
            "pageText": {
              "name": "pageText",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "The translatable text showing the current page.",
              "sbType": { "name": "function" },
              "table": {
                "type": { "summary": "func" },
                "defaultValue": { "summary": "page => `page ${ page }`" }
              }
            },
            "pageSizes": {
              "control": { "type": "array" },
              "name": "pageSizes",
              "type": {
                "required": false,
                "name": "array",
                "value": { "name": "number" }
              },
              "required": false,
              "description": "The choices for `pageSize`.",
              "defaultValue": [10, 20, 50],
              "sbType": { "name": "array", "value": { "name": "number" } },
              "table": {
                "type": { "summary": "number[]" },
                "defaultValue": { "summary": "[10,    20,    50]" }
              }
            },
            "pageSizesDisabled": {
              "control": { "type": "boolean" },
              "name": "pageSizesDisabled",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "`true` if ture the pageSizes should be not visible.",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "disabled": {
              "control": { "type": "boolean" },
              "name": "disabled",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "`true` if the backward/forward buttons should be disabled.",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "page": {
              "control": { "type": "number" },
              "name": "page",
              "type": { "required": false, "name": "number" },
              "required": false,
              "description": "The current page.",
              "defaultValue": 1,
              "sbType": { "name": "number" },
              "table": {
                "type": { "summary": "number" },
                "defaultValue": { "summary": "1" }
              }
            },
            "pageSize": {
              "control": { "type": "number" },
              "name": "pageSize",
              "type": { "required": false, "name": "number" },
              "required": false,
              "description": "The number dictating how many items a page contains.",
              "defaultValue": 10,
              "sbType": { "name": "number" },
              "table": {
                "type": { "summary": "number" },
                "defaultValue": { "summary": "10" }
              }
            },
            "pagesUnknown": {
              "control": { "type": "boolean" },
              "name": "pagesUnknown",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "`true` if the total number of items is unknown.",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "isLastPage": {
              "control": { "type": "boolean" },
              "name": "isLastPage",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "`true` if the current page should be the last page.",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "pageInputDisabled": {
              "control": { "type": "boolean" },
              "name": "pageInputDisabled",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "`true` if the select box to change the page should be disabled.",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "backwardText": "Backward",
          "forwardText": "Forward",
          "itemsPerPageText": "Items per page:",
          "pageNumberText": "Page Number",
          "pageSizes": [10, 20, 50],
          "page": 1,
          "pageSize": 10,
          "totalItems": 30
        },
        "argTypes": {
          "totalItems": {
            "control": { "type": "number" },
            "type": { "name": "number", "required": false },
            "name": "totalItems",
            "required": false,
            "description": "The total number of items.",
            "defaultValue": null,
            "sbType": { "name": "number" },
            "table": { "type": { "summary": "number" }, "defaultValue": null }
          },
          "onChange": {
            "type": { "name": "function", "required": false },
            "name": "onChange",
            "required": false,
            "description": "The callback function called when the current page changes.",
            "defaultValue": null,
            "sbType": { "name": "function" },
            "table": { "type": { "summary": "func" }, "defaultValue": null }
          },
          "backwardText": {
            "control": { "type": "text" },
            "name": "backwardText",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The description for the backward icon.",
            "defaultValue": "Backward",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "'Backward'" }
            }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The CSS class names.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "itemRangeText": {
            "name": "itemRangeText",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "The function returning a translatable text showing where the current page is,\nin a manner of the range of items.",
            "sbType": { "name": "function" },
            "table": {
              "type": { "summary": "func" },
              "defaultValue": {
                "summary": "func",
                "detail": "(min, max, total) => `${ min }-${ max } of ${ total } items`"
              }
            }
          },
          "forwardText": {
            "control": { "type": "text" },
            "name": "forwardText",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The description for the forward icon.",
            "defaultValue": "Forward",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "'Forward'" }
            }
          },
          "id": {
            "control": { "type": "object" },
            "name": "id",
            "type": {
              "required": false,
              "name": "union",
              "value": [{ "name": "string" }, { "name": "number" }]
            },
            "required": false,
            "description": "The unique ID of this component instance.",
            "defaultValue": null,
            "sbType": {
              "name": "union",
              "value": [{ "name": "string" }, { "name": "number" }]
            },
            "table": {
              "type": { "summary": "string | number" },
              "defaultValue": null
            }
          },
          "itemsPerPageText": {
            "control": { "type": "text" },
            "name": "itemsPerPageText",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The translatable text indicating the number of items per page.",
            "defaultValue": "Items per page:",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "'Items per page:'" }
            }
          },
          "itemsPerPageFollowsText": {
            "control": { "type": "text" },
            "name": "itemsPerPageFollowsText",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "A variant of `itemsPerPageText`, with a sign indicating that the number follows, e.g. ':'.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "itemText": {
            "name": "itemText",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "A variant of `itemRangeText`, used if the total number of items is unknown.",
            "sbType": { "name": "function" },
            "table": {
              "type": { "summary": "func" },
              "defaultValue": {
                "summary": "(min, max) => `${ min }-${ max } items`"
              }
            }
          },
          "pageNumberText": {
            "control": { "type": "text" },
            "name": "pageNumberText",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": "Page Number",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "'Page Number'" }
            }
          },
          "pageRangeText": {
            "name": "pageRangeText",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "A function returning PII showing where the current page is.",
            "sbType": { "name": "function" },
            "table": {
              "type": { "summary": "func" },
              "defaultValue": {
                "summary": "func",
                "detail": "(current, total) => `${ current } of ${ total } pages`"
              }
            }
          },
          "pageText": {
            "name": "pageText",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "The translatable text showing the current page.",
            "sbType": { "name": "function" },
            "table": {
              "type": { "summary": "func" },
              "defaultValue": { "summary": "page => `page ${ page }`" }
            }
          },
          "pageSizes": {
            "control": { "type": "array" },
            "name": "pageSizes",
            "type": {
              "required": false,
              "name": "array",
              "value": { "name": "number" }
            },
            "required": false,
            "description": "The choices for `pageSize`.",
            "defaultValue": [10, 20, 50],
            "sbType": { "name": "array", "value": { "name": "number" } },
            "table": {
              "type": { "summary": "number[]" },
              "defaultValue": { "summary": "[10,    20,    50]" }
            }
          },
          "pageSizesDisabled": {
            "control": { "type": "boolean" },
            "name": "pageSizesDisabled",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "`true` if ture the pageSizes should be not visible.",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "disabled": {
            "control": { "type": "boolean" },
            "name": "disabled",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "`true` if the backward/forward buttons should be disabled.",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "page": {
            "control": { "type": "number" },
            "name": "page",
            "type": { "required": false, "name": "number" },
            "required": false,
            "description": "The current page.",
            "defaultValue": 1,
            "sbType": { "name": "number" },
            "table": {
              "type": { "summary": "number" },
              "defaultValue": { "summary": "1" }
            }
          },
          "pageSize": {
            "control": { "type": "number" },
            "name": "pageSize",
            "type": { "required": false, "name": "number" },
            "required": false,
            "description": "The number dictating how many items a page contains.",
            "defaultValue": 10,
            "sbType": { "name": "number" },
            "table": {
              "type": { "summary": "number" },
              "defaultValue": { "summary": "10" }
            }
          },
          "pagesUnknown": {
            "control": { "type": "boolean" },
            "name": "pagesUnknown",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "`true` if the total number of items is unknown.",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "isLastPage": {
            "control": { "type": "boolean" },
            "name": "isLastPage",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "`true` if the current page should be the last page.",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "pageInputDisabled": {
            "control": { "type": "boolean" },
            "name": "pageInputDisabled",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "`true` if the select box to change the page should be disabled.",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          }
        },
        "initialArgs": {
          "backwardText": "Backward",
          "forwardText": "Forward",
          "itemsPerPageText": "Items per page:",
          "pageNumberText": "Page Number",
          "pageSizes": [10, 20, 50],
          "page": 1,
          "pageSize": 10,
          "totalItems": 30
        }
      },
      "components-radiobutton--regular": {
        "id": "components-radiobutton--regular",
        "kind": "Components/RadioButton",
        "name": "Regular",
        "story": "Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\nYou can customize the content by using `BannerNavigation`.\n"
          },
          "storySource": { "source": "(args) => <RadioButton {...args} />" },
          "__id": "components-radiobutton--regular",
          "args": { "labelText": "Radio button" },
          "argTypes": {
            "labelText": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": true, "value": "node" },
              "name": "labelText",
              "required": true,
              "description": "Provide label text to be read by screen readers when interacting with the\ncontrol",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "checked": {
              "control": { "type": "boolean" },
              "name": "checked",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the <RadioButton> is currently checked",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Provide an optional className to be applied to the containing node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "defaultChecked": {
              "control": { "type": "boolean" },
              "name": "defaultChecked",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the <RadioButton> should be checked by default",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "disabled": {
              "control": { "type": "boolean" },
              "name": "disabled",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the control is disabled",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "id": {
              "control": { "type": "text" },
              "name": "id",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Provide a unique id for the underlying `input` node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "name": {
              "control": { "type": "text" },
              "name": "name",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Provide a name for the underlying `input` node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "onChange": {
              "name": "onChange",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Provide an optional `onChange` hook that is called each time the value of\nthe underlying `input` changes",
              "sbType": { "name": "function" },
              "table": {
                "type": { "summary": "func" },
                "defaultValue": { "summary": "() => {}" }
              }
            },
            "value": {
              "control": { "type": "object" },
              "name": "value",
              "type": {
                "required": true,
                "name": "union",
                "value": [{ "name": "string" }, { "name": "number" }]
              },
              "required": true,
              "description": "Specify the value of the <RadioButton>",
              "defaultValue": null,
              "sbType": {
                "name": "union",
                "value": [{ "name": "string" }, { "name": "number" }]
              },
              "table": {
                "type": { "summary": "string | number" },
                "defaultValue": null
              }
            }
          },
          "__isArgsStory": true
        },
        "args": { "labelText": "Radio button" },
        "argTypes": {
          "labelText": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": true, "value": "node" },
            "name": "labelText",
            "required": true,
            "description": "Provide label text to be read by screen readers when interacting with the\ncontrol",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "checked": {
            "control": { "type": "boolean" },
            "name": "checked",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the <RadioButton> is currently checked",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Provide an optional className to be applied to the containing node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "defaultChecked": {
            "control": { "type": "boolean" },
            "name": "defaultChecked",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the <RadioButton> should be checked by default",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "disabled": {
            "control": { "type": "boolean" },
            "name": "disabled",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the control is disabled",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "id": {
            "control": { "type": "text" },
            "name": "id",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Provide a unique id for the underlying `input` node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "name": {
            "control": { "type": "text" },
            "name": "name",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Provide a name for the underlying `input` node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "onChange": {
            "name": "onChange",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Provide an optional `onChange` hook that is called each time the value of\nthe underlying `input` changes",
            "sbType": { "name": "function" },
            "table": {
              "type": { "summary": "func" },
              "defaultValue": { "summary": "() => {}" }
            }
          },
          "value": {
            "control": { "type": "object" },
            "name": "value",
            "type": {
              "required": true,
              "name": "union",
              "value": [{ "name": "string" }, { "name": "number" }]
            },
            "required": true,
            "description": "Specify the value of the <RadioButton>",
            "defaultValue": null,
            "sbType": {
              "name": "union",
              "value": [{ "name": "string" }, { "name": "number" }]
            },
            "table": {
              "type": { "summary": "string | number" },
              "defaultValue": null
            }
          }
        },
        "initialArgs": { "labelText": "Radio button" }
      },
      "forms-fileuploader-react-dropzone--regular": {
        "id": "forms-fileuploader-react-dropzone--regular",
        "kind": "Forms/FileUploader (react-dropzone)",
        "name": "Regular",
        "story": "Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": {
            "source": "(args) => (\n  <Dropzone onDrop={(acceptedFiles) => console.log(acceptedFiles)}>\n    {({ getRootProps, getInputProps }) => (\n      <section className=\"wfp--dropzone\">\n        <div {...getRootProps({ className: 'wfp--dropzone__input' })}>\n          <input {...getInputProps()} />\n          <div>Drag 'n' drop some files here, or click to select files</div>\n        </div>\n      </section>\n    )}\n  </Dropzone>\n)"
          },
          "html": false,
          "docs": {
            "source": {
              "code": "<Dropzone onDrop={(acceptedFiles) => console.log(acceptedFiles)}>\n      {({ getRootProps, getInputProps }) => (\n        <section className=\"wfp--dropzone\">\n          <div {...getRootProps({ className: 'wfp--dropzone__input' })}>\n            <input {...getInputProps()} />\n            <div>Drag 'n' drop some files here, or click to select files</div>\n          </div>\n        </section>\n      )}\n    </Dropzone>"
            }
          },
          "__id": "forms-fileuploader-react-dropzone--regular",
          "args": {},
          "argTypes": {},
          "__isArgsStory": true
        },
        "args": {},
        "argTypes": {},
        "initialArgs": {}
      },
      "forms-fileuploader-react-dropzone--advanced": {
        "id": "forms-fileuploader-react-dropzone--advanced",
        "kind": "Forms/FileUploader (react-dropzone)",
        "name": "Advanced",
        "story": "Advanced",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": {
            "source": "(args) => {\n  const {\n    acceptedFiles,\n    getRootProps,\n    getInputProps,\n    isDragActive,\n  } = useDropzone();\n\n  const files = acceptedFiles.map((file) => (\n    <ListItem key={file.path}>\n      {file.path} - {Math.round(file.size / 1000)} kB\n    </ListItem>\n  ));\n\n  const className = classNames('wfp--dropzone__input', {\n    'wfp--dropzone__input--drag-active': isDragActive,\n    [className]: className,\n  });\n\n  return (\n    <section className=\"wfp--dropzone\">\n      <div {...getRootProps({ isDragActive, className: className })}>\n        <input {...getInputProps()} />\n        <Icon className=\"wfp--dropzone__icon\" icon={iconUpload} />\n        <div>Drop files or click here to upload</div>\n      </div>\n      <aside className=\"wfp--dropzone__file-list\">\n        <h4>Files</h4>\n        <List>{files}</List>\n      </aside>\n    </section>\n  );\n}"
          },
          "html": false,
          "docs": {
            "source": {
              "code": "export const Advanced = (args) => {\n        const {\n          acceptedFiles,\n          getRootProps,\n          getInputProps,\n          isDragActive,\n        } = useDropzone();\n      \n        const files = acceptedFiles.map((file) => (\n          <ListItem key={file.path}>\n            {file.path} - {Math.round(file.size / 1000)} kB\n          </ListItem>\n        ));\n      \n        const className = classNames('wfp--dropzone__input', {\n          'wfp--dropzone__input--drag-active': isDragActive,\n          [className]: className,\n        });\n      \n        return (\n          <section className=\"wfp--dropzone\">\n            <div {...getRootProps({ isDragActive, className: className })}>\n              <input {...getInputProps()} />\n              <Icon className=\"wfp--dropzone__icon\" icon={iconUpload} />\n              <div>Drop files or click here to upload</div>\n            </div>\n            <aside className=\"wfp--dropzone__file-list\">\n              <h4>Files</h4>\n              <List>{files}</List>\n            </aside>\n          </section>\n        );\n      }"
            }
          },
          "__id": "forms-fileuploader-react-dropzone--advanced",
          "args": {},
          "argTypes": {},
          "__isArgsStory": true
        },
        "args": {},
        "argTypes": {},
        "initialArgs": {}
      },
      "forms-reactselect--default": {
        "id": "forms-reactselect--default",
        "kind": "Forms/ReactSelect",
        "name": "Default",
        "story": "Default",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "info": { "source": false, "propTables": false },
          "storySource": {
            "source": "(args) => (\n  <div className=\"wfp--form-item\" style={{ minWidth: '400px' }}>\n    <label htmlFor=\"abc\" className=\"wfp--label\">\n      The Label\n    </label>\n    <ReactSelect\n      className=\"wfp--react-select-container\"\n      classNamePrefix=\"wfp--react-select\"\n      isMulti\n      id=\"abc\"\n      options={options}\n      {...args}\n    />\n  </div>\n)"
          },
          "__id": "forms-reactselect--default",
          "args": {
            "placeholder": "Placeholder",
            "isSearch": true,
            "isMulti": true,
            "isDisabled": false
          },
          "argTypes": {
            "placeholder": {
              "control": { "type": "text" },
              "type": { "name": "string" },
              "name": "placeholder"
            },
            "isSearch": {
              "control": { "type": "boolean" },
              "type": { "name": "boolean" },
              "name": "isSearch"
            },
            "isMulti": {
              "control": { "type": "boolean" },
              "type": { "name": "boolean" },
              "name": "isMulti"
            },
            "isDisabled": {
              "control": { "type": "boolean" },
              "type": { "name": "boolean" },
              "name": "isDisabled"
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "placeholder": "Placeholder",
          "isSearch": true,
          "isMulti": true,
          "isDisabled": false
        },
        "argTypes": {
          "placeholder": {
            "control": { "type": "text" },
            "type": { "name": "string" },
            "name": "placeholder"
          },
          "isSearch": {
            "control": { "type": "boolean" },
            "type": { "name": "boolean" },
            "name": "isSearch"
          },
          "isMulti": {
            "control": { "type": "boolean" },
            "type": { "name": "boolean" },
            "name": "isMulti"
          },
          "isDisabled": {
            "control": { "type": "boolean" },
            "type": { "name": "boolean" },
            "name": "isDisabled"
          }
        },
        "initialArgs": {
          "placeholder": "Placeholder",
          "isSearch": true,
          "isMulti": true,
          "isDisabled": false
        }
      },
      "components-readmore--regular": {
        "id": "components-readmore--regular",
        "kind": "Components/ReadMore",
        "name": "Regular",
        "story": "Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\nYou can customize the content by using `BannerNavigation`.\n"
          },
          "storySource": {
            "source": "(args) => <ReadMore {...args}>Text</ReadMore>"
          },
          "__id": "components-readmore--regular",
          "args": {},
          "argTypes": {
            "expandText": {
              "control": { "type": "object" },
              "name": "expandText",
              "type": { "required": false },
              "required": false,
              "defaultValue": "Read more",
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": { "summary": "'Read more'" }
              }
            },
            "collapseText": {
              "control": { "type": "object" },
              "name": "collapseText",
              "type": { "required": false },
              "required": false,
              "defaultValue": "Read less",
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": { "summary": "'Read less'" }
              }
            },
            "className": {
              "control": { "type": "object" },
              "name": "className",
              "type": { "required": false },
              "required": false,
              "description": "Specify an optional className to be applied to the wrapper node",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": true },
              "required": true,
              "description": "The content of the expanded element",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "collapsed": {
              "control": { "type": "object" },
              "name": "collapsed",
              "type": { "required": false },
              "required": false,
              "description": "The content of the collapsed content (optional)",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "collapseLink": {
              "control": { "type": "object" },
              "name": "collapseLink",
              "type": { "required": false },
              "required": false,
              "description": "A custom link for collapsing",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "expandLink": {
              "control": { "type": "object" },
              "name": "expandLink",
              "type": { "required": false },
              "required": false,
              "description": "A custom link for expanding",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "fade": {
              "control": { "type": "object" },
              "name": "fade",
              "type": { "required": false },
              "required": false,
              "description": "Enables the fade effect when the content is collapsed (optional) when enabled collapsed will be ignored",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "maxHeight": {
              "control": { "type": "object" },
              "name": "maxHeight",
              "type": { "required": false },
              "required": false,
              "description": "The maximum height when the content is collapsed (optional)",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            }
          },
          "__isArgsStory": true
        },
        "args": { "expandText": "Read more", "collapseText": "Read less" },
        "argTypes": {
          "expandText": {
            "control": { "type": "object" },
            "name": "expandText",
            "type": { "required": false },
            "required": false,
            "defaultValue": "Read more",
            "table": {
              "type": { "summary": "unknown" },
              "defaultValue": { "summary": "'Read more'" }
            }
          },
          "collapseText": {
            "control": { "type": "object" },
            "name": "collapseText",
            "type": { "required": false },
            "required": false,
            "defaultValue": "Read less",
            "table": {
              "type": { "summary": "unknown" },
              "defaultValue": { "summary": "'Read less'" }
            }
          },
          "className": {
            "control": { "type": "object" },
            "name": "className",
            "type": { "required": false },
            "required": false,
            "description": "Specify an optional className to be applied to the wrapper node",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": true },
            "required": true,
            "description": "The content of the expanded element",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "collapsed": {
            "control": { "type": "object" },
            "name": "collapsed",
            "type": { "required": false },
            "required": false,
            "description": "The content of the collapsed content (optional)",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "collapseLink": {
            "control": { "type": "object" },
            "name": "collapseLink",
            "type": { "required": false },
            "required": false,
            "description": "A custom link for collapsing",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "expandLink": {
            "control": { "type": "object" },
            "name": "expandLink",
            "type": { "required": false },
            "required": false,
            "description": "A custom link for expanding",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "fade": {
            "control": { "type": "object" },
            "name": "fade",
            "type": { "required": false },
            "required": false,
            "description": "Enables the fade effect when the content is collapsed (optional) when enabled collapsed will be ignored",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "maxHeight": {
            "control": { "type": "object" },
            "name": "maxHeight",
            "type": { "required": false },
            "required": false,
            "description": "The maximum height when the content is collapsed (optional)",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          }
        },
        "initialArgs": {
          "expandText": "Read more",
          "collapseText": "Read less"
        }
      },
      "components-search--regular": {
        "id": "components-search--regular",
        "kind": "Components/Search",
        "name": "Regular",
        "story": "Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\nYou can customize the content by using `BannerNavigation`.\n"
          },
          "storySource": { "source": "(args) => <Search {...args} />" },
          "__id": "components-search--regular",
          "args": {},
          "argTypes": {
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "type": {
              "control": { "type": "text" },
              "name": "type",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": "text",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "'text'" }
              }
            },
            "small": {
              "control": { "type": "boolean" },
              "name": "small",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Input type should be `search` or `text`",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "placeHolderText": {
              "control": { "type": "text" },
              "name": "placeHolderText",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": "",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "''" }
              }
            },
            "labelText": {
              "control": { "type": "object" },
              "name": "labelText",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "id": {
              "control": { "type": "text" },
              "name": "id",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "onChange": {
              "name": "onChange",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "",
              "sbType": { "name": "function" },
              "table": {
                "type": { "summary": "func" },
                "defaultValue": { "summary": "() => {}" }
              }
            },
            "onSearchIconClick": {
              "name": "onSearchIconClick",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "",
              "sbType": { "name": "function" },
              "table": {
                "type": { "summary": "func" },
                "defaultValue": { "summary": "() => {}" }
              }
            },
            "closeButtonLabelText": {
              "control": { "type": "text" },
              "name": "closeButtonLabelText",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "kind": {
              "control": {
                "type": "select",
                "options": [
                  "undefined",
                  "large",
                  "small",
                  "banner",
                  "main",
                  "light"
                ]
              },
              "name": "kind",
              "type": {
                "required": false,
                "name": "enum",
                "value": [
                  "undefined",
                  "large",
                  "small",
                  "banner",
                  "main",
                  "light"
                ]
              },
              "required": false,
              "description": "Different styling options are available `large`, `small`, `banner`, `main`, `light`",
              "defaultValue": "large",
              "sbType": {
                "name": "enum",
                "value": [
                  "undefined",
                  "large",
                  "small",
                  "banner",
                  "main",
                  "light"
                ]
              },
              "table": {
                "type": {
                  "summary": "undefined | 'large' | 'small' | 'banner' | 'main' | 'light'"
                },
                "defaultValue": { "summary": "'large'" }
              }
            }
          },
          "__isArgsStory": true
        },
        "args": { "type": "text", "kind": "large" },
        "argTypes": {
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "type": {
            "control": { "type": "text" },
            "name": "type",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": "text",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "'text'" }
            }
          },
          "small": {
            "control": { "type": "boolean" },
            "name": "small",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Input type should be `search` or `text`",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "placeHolderText": {
            "control": { "type": "text" },
            "name": "placeHolderText",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": "",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "''" }
            }
          },
          "labelText": {
            "control": { "type": "object" },
            "name": "labelText",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "id": {
            "control": { "type": "text" },
            "name": "id",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "onChange": {
            "name": "onChange",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "",
            "sbType": { "name": "function" },
            "table": {
              "type": { "summary": "func" },
              "defaultValue": { "summary": "() => {}" }
            }
          },
          "onSearchIconClick": {
            "name": "onSearchIconClick",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "",
            "sbType": { "name": "function" },
            "table": {
              "type": { "summary": "func" },
              "defaultValue": { "summary": "() => {}" }
            }
          },
          "closeButtonLabelText": {
            "control": { "type": "text" },
            "name": "closeButtonLabelText",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "kind": {
            "control": {
              "type": "select",
              "options": [
                "undefined",
                "large",
                "small",
                "banner",
                "main",
                "light"
              ]
            },
            "name": "kind",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "undefined",
                "large",
                "small",
                "banner",
                "main",
                "light"
              ]
            },
            "required": false,
            "description": "Different styling options are available `large`, `small`, `banner`, `main`, `light`",
            "defaultValue": "large",
            "sbType": {
              "name": "enum",
              "value": [
                "undefined",
                "large",
                "small",
                "banner",
                "main",
                "light"
              ]
            },
            "table": {
              "type": {
                "summary": "undefined | 'large' | 'small' | 'banner' | 'main' | 'light'"
              },
              "defaultValue": { "summary": "'large'" }
            }
          }
        },
        "initialArgs": { "type": "text", "kind": "large" }
      },
      "components-search--small-search": {
        "id": "components-search--small-search",
        "kind": "Components/Search",
        "name": "Small Search",
        "story": "Small Search",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "There are diffent ways to render the `Search` input by changing the `kind` prop."
          },
          "storySource": { "source": "(args) => <Search {...args} />" },
          "__id": "components-search--small-search",
          "args": { "kind": "small" },
          "argTypes": {
            "kind": {
              "control": {
                "type": "select",
                "options": [
                  "undefined",
                  "large",
                  "small",
                  "banner",
                  "main",
                  "light"
                ]
              },
              "type": {
                "name": "enum",
                "required": false,
                "value": [
                  "undefined",
                  "large",
                  "small",
                  "banner",
                  "main",
                  "light"
                ]
              },
              "name": "kind",
              "required": false,
              "description": "Different styling options are available `large`, `small`, `banner`, `main`, `light`",
              "defaultValue": "large",
              "sbType": {
                "name": "enum",
                "value": [
                  "undefined",
                  "large",
                  "small",
                  "banner",
                  "main",
                  "light"
                ]
              },
              "table": {
                "type": {
                  "summary": "undefined | 'large' | 'small' | 'banner' | 'main' | 'light'"
                },
                "defaultValue": { "summary": "'large'" }
              }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "type": {
              "control": { "type": "text" },
              "name": "type",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": "text",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "'text'" }
              }
            },
            "small": {
              "control": { "type": "boolean" },
              "name": "small",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Input type should be `search` or `text`",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "placeHolderText": {
              "control": { "type": "text" },
              "name": "placeHolderText",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": "",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "''" }
              }
            },
            "labelText": {
              "control": { "type": "object" },
              "name": "labelText",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "id": {
              "control": { "type": "text" },
              "name": "id",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "onChange": {
              "name": "onChange",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "",
              "sbType": { "name": "function" },
              "table": {
                "type": { "summary": "func" },
                "defaultValue": { "summary": "() => {}" }
              }
            },
            "onSearchIconClick": {
              "name": "onSearchIconClick",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "",
              "sbType": { "name": "function" },
              "table": {
                "type": { "summary": "func" },
                "defaultValue": { "summary": "() => {}" }
              }
            },
            "closeButtonLabelText": {
              "control": { "type": "text" },
              "name": "closeButtonLabelText",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": { "kind": "small", "type": "text" },
        "argTypes": {
          "kind": {
            "control": {
              "type": "select",
              "options": [
                "undefined",
                "large",
                "small",
                "banner",
                "main",
                "light"
              ]
            },
            "type": {
              "name": "enum",
              "required": false,
              "value": [
                "undefined",
                "large",
                "small",
                "banner",
                "main",
                "light"
              ]
            },
            "name": "kind",
            "required": false,
            "description": "Different styling options are available `large`, `small`, `banner`, `main`, `light`",
            "defaultValue": "large",
            "sbType": {
              "name": "enum",
              "value": [
                "undefined",
                "large",
                "small",
                "banner",
                "main",
                "light"
              ]
            },
            "table": {
              "type": {
                "summary": "undefined | 'large' | 'small' | 'banner' | 'main' | 'light'"
              },
              "defaultValue": { "summary": "'large'" }
            }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "type": {
            "control": { "type": "text" },
            "name": "type",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": "text",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "'text'" }
            }
          },
          "small": {
            "control": { "type": "boolean" },
            "name": "small",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Input type should be `search` or `text`",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "placeHolderText": {
            "control": { "type": "text" },
            "name": "placeHolderText",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": "",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "''" }
            }
          },
          "labelText": {
            "control": { "type": "object" },
            "name": "labelText",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "id": {
            "control": { "type": "text" },
            "name": "id",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "onChange": {
            "name": "onChange",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "",
            "sbType": { "name": "function" },
            "table": {
              "type": { "summary": "func" },
              "defaultValue": { "summary": "() => {}" }
            }
          },
          "onSearchIconClick": {
            "name": "onSearchIconClick",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "",
            "sbType": { "name": "function" },
            "table": {
              "type": { "summary": "func" },
              "defaultValue": { "summary": "() => {}" }
            }
          },
          "closeButtonLabelText": {
            "control": { "type": "text" },
            "name": "closeButtonLabelText",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          }
        },
        "initialArgs": { "kind": "small", "type": "text" }
      },
      "components-secondarynavigation--regular": {
        "id": "components-secondarynavigation--regular",
        "kind": "Components/SecondaryNavigation",
        "name": "Regular",
        "story": "Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\nYou can customize the content by using `BannerNavigation`.\n"
          },
          "storySource": {
            "source": "(args) => (\n  <SecondaryNavigation {...args} additional=\"additional Information\">\n    <Breadcrumb>\n      <BreadcrumbItem>\n        <a href=\"/#\">\n          <BreadcrumbHome />\n        </a>\n      </BreadcrumbItem>\n      <BreadcrumbItem href=\"#\">Breadcrumb 2</BreadcrumbItem>\n      <BreadcrumbItem href=\"#\">Breadcrumb 3</BreadcrumbItem>\n    </Breadcrumb>\n    <SecondaryNavigationTitle>The Page Title</SecondaryNavigationTitle>\n    <Tabs customTabContent={true}>\n      <Tab label=\"Tab label 1\" href=\"#\" />\n      <Tab label=\"Tab label 2\" href=\"#\" />\n      <Tab label=\"Tab label 3\" href=\"#\" />\n      <Tab label=\"Tab label 4\" href=\"#\" />\n    </Tabs>\n  </SecondaryNavigation>\n)"
          },
          "__id": "components-secondarynavigation--regular",
          "args": {},
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": true, "name": "other", "value": "node" },
              "required": true,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The CSS class name to be placed on the wrapping element.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "id": {
              "control": { "type": "text" },
              "name": "id",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "pageWidth": {
              "control": {
                "type": "radio",
                "options": ["xs", "sm", "md", "lg", "full"]
              },
              "name": "pageWidth",
              "type": {
                "required": false,
                "name": "enum",
                "value": ["xs", "sm", "md", "lg", "full"]
              },
              "required": false,
              "description": "The width of the SecondaryNavigation (same as Wrapper)",
              "defaultValue": "narrower",
              "sbType": {
                "name": "enum",
                "value": ["xs", "sm", "md", "lg", "full"]
              },
              "table": {
                "type": { "summary": "'xs' | 'sm' | 'md' | 'lg' | 'full'" },
                "defaultValue": { "summary": "'narrower'" }
              }
            },
            "wrapperClassName": {
              "control": { "type": "text" },
              "name": "wrapperClassName",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": { "pageWidth": "narrower" },
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": true, "name": "other", "value": "node" },
            "required": true,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The CSS class name to be placed on the wrapping element.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "id": {
            "control": { "type": "text" },
            "name": "id",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "pageWidth": {
            "control": {
              "type": "radio",
              "options": ["xs", "sm", "md", "lg", "full"]
            },
            "name": "pageWidth",
            "type": {
              "required": false,
              "name": "enum",
              "value": ["xs", "sm", "md", "lg", "full"]
            },
            "required": false,
            "description": "The width of the SecondaryNavigation (same as Wrapper)",
            "defaultValue": "narrower",
            "sbType": {
              "name": "enum",
              "value": ["xs", "sm", "md", "lg", "full"]
            },
            "table": {
              "type": { "summary": "'xs' | 'sm' | 'md' | 'lg' | 'full'" },
              "defaultValue": { "summary": "'narrower'" }
            }
          },
          "wrapperClassName": {
            "control": { "type": "text" },
            "name": "wrapperClassName",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          }
        },
        "initialArgs": { "pageWidth": "narrower" }
      },
      "components-secondarynavigation--heading-only": {
        "id": "components-secondarynavigation--heading-only",
        "kind": "Components/SecondaryNavigation",
        "name": "Heading Only",
        "story": "Heading Only",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\nThe content of `SecondaryNavigation` can be customized. In this example `SecondaryNavigation` is used without the `Tabs`.\n"
          },
          "storySource": {
            "source": "(args) => (\n  <SecondaryNavigation additional=\"additional Information\">\n    <Breadcrumb>\n      <BreadcrumbItem>\n        <a href=\"/#\">\n          <BreadcrumbHome />\n        </a>\n      </BreadcrumbItem>\n      <BreadcrumbItem href=\"#\">Breadcrumb 2</BreadcrumbItem>\n      <BreadcrumbItem href=\"#\">Breadcrumb 3</BreadcrumbItem>\n    </Breadcrumb>\n    <SecondaryNavigationTitle>The Page Title</SecondaryNavigationTitle>\n  </SecondaryNavigation>\n)"
          },
          "__id": "components-secondarynavigation--heading-only",
          "args": {},
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": true, "name": "other", "value": "node" },
              "required": true,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The CSS class name to be placed on the wrapping element.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "id": {
              "control": { "type": "text" },
              "name": "id",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "pageWidth": {
              "control": {
                "type": "radio",
                "options": ["xs", "sm", "md", "lg", "full"]
              },
              "name": "pageWidth",
              "type": {
                "required": false,
                "name": "enum",
                "value": ["xs", "sm", "md", "lg", "full"]
              },
              "required": false,
              "description": "The width of the SecondaryNavigation (same as Wrapper)",
              "defaultValue": "narrower",
              "sbType": {
                "name": "enum",
                "value": ["xs", "sm", "md", "lg", "full"]
              },
              "table": {
                "type": { "summary": "'xs' | 'sm' | 'md' | 'lg' | 'full'" },
                "defaultValue": { "summary": "'narrower'" }
              }
            },
            "wrapperClassName": {
              "control": { "type": "text" },
              "name": "wrapperClassName",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": { "pageWidth": "narrower" },
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": true, "name": "other", "value": "node" },
            "required": true,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The CSS class name to be placed on the wrapping element.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "id": {
            "control": { "type": "text" },
            "name": "id",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "pageWidth": {
            "control": {
              "type": "radio",
              "options": ["xs", "sm", "md", "lg", "full"]
            },
            "name": "pageWidth",
            "type": {
              "required": false,
              "name": "enum",
              "value": ["xs", "sm", "md", "lg", "full"]
            },
            "required": false,
            "description": "The width of the SecondaryNavigation (same as Wrapper)",
            "defaultValue": "narrower",
            "sbType": {
              "name": "enum",
              "value": ["xs", "sm", "md", "lg", "full"]
            },
            "table": {
              "type": { "summary": "'xs' | 'sm' | 'md' | 'lg' | 'full'" },
              "defaultValue": { "summary": "'narrower'" }
            }
          },
          "wrapperClassName": {
            "control": { "type": "text" },
            "name": "wrapperClassName",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          }
        },
        "initialArgs": { "pageWidth": "narrower" }
      },
      "forms-select--select-default": {
        "id": "forms-select--select-default",
        "kind": "Forms/Select",
        "name": "Select Default",
        "story": "Select Default",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\nImagine this to be a `much` longer block of text that spans\nseveral lines.\n"
          },
          "storySource": {
            "source": "(args) => {\n  return (\n    <Select {...args}>\n      <SelectItem value=\"option-1\" text=\"Option 1\" />\n      <SelectItem value=\"option-2\" text=\"Option 2\" />\n    </Select>\n  );\n}"
          },
          "__id": "forms-select--select-default",
          "args": {
            "labelText": "Label text",
            "helperText": "This is a helper text"
          },
          "argTypes": {
            "labelText": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "labelText",
              "required": false,
              "description": "Provide label text to be read by screen readers when interacting with the\ncontrol",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "helperText": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "helperText",
              "required": false,
              "description": "Provide text that is used alongside the control label for additional help",
              "defaultValue": "",
              "sbType": { "name": "other", "value": "node" },
              "table": {
                "type": { "summary": "node" },
                "defaultValue": { "summary": "''" }
              }
            },
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Provide the contents of your Select",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify an optional className to be applied to the node containing the label and the select box",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "id": {
              "control": { "type": "text" },
              "name": "id",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify a custom `id` for the `<select>`",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "inline": {
              "control": { "type": "boolean" },
              "name": "inline",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether you want the inline version of this control",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "onChange": {
              "name": "onChange",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Provide an optional `onChange` hook that is called each time the value of\nthe underlying <input> changes",
              "defaultValue": null,
              "sbType": { "name": "function" },
              "table": { "type": { "summary": "func" }, "defaultValue": null }
            },
            "disabled": {
              "control": { "type": "boolean" },
              "name": "disabled",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the control is disabled",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "defaultValue": {
              "control": { "type": "object" },
              "name": "defaultValue",
              "type": { "required": false, "name": "other", "value": "any" },
              "required": false,
              "description": "Optionally provide the default value of the `<select>`",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "any" },
              "table": { "type": { "summary": "any" }, "defaultValue": null }
            },
            "iconDescription": {
              "control": { "type": "text" },
              "name": "iconDescription",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Provide a description for the twistie icon that can be read by screen readers",
              "defaultValue": "open list of options",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "'open list of options'" }
              }
            },
            "hideLabel": {
              "control": { "type": "boolean" },
              "name": "hideLabel",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the label should be hidden, or not",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "invalid": {
              "control": { "type": "boolean" },
              "name": "invalid",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify if the currently value is invalid.",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "invalidText": {
              "control": { "type": "text" },
              "name": "invalidText",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Message which is displayed if the value is invalid.",
              "defaultValue": "",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "''" }
              }
            },
            "light": {
              "control": { "type": "boolean" },
              "name": "light",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether you want the light version of this control",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "small": {
              "control": { "type": "boolean" },
              "name": "small",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether you want the small version of this control",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "iconDescription": "open list of options",
          "labelText": "Label text",
          "helperText": "This is a helper text"
        },
        "argTypes": {
          "labelText": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "labelText",
            "required": false,
            "description": "Provide label text to be read by screen readers when interacting with the\ncontrol",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "helperText": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "helperText",
            "required": false,
            "description": "Provide text that is used alongside the control label for additional help",
            "defaultValue": "",
            "sbType": { "name": "other", "value": "node" },
            "table": {
              "type": { "summary": "node" },
              "defaultValue": { "summary": "''" }
            }
          },
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Provide the contents of your Select",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify an optional className to be applied to the node containing the label and the select box",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "id": {
            "control": { "type": "text" },
            "name": "id",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify a custom `id` for the `<select>`",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "inline": {
            "control": { "type": "boolean" },
            "name": "inline",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether you want the inline version of this control",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "onChange": {
            "name": "onChange",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Provide an optional `onChange` hook that is called each time the value of\nthe underlying <input> changes",
            "defaultValue": null,
            "sbType": { "name": "function" },
            "table": { "type": { "summary": "func" }, "defaultValue": null }
          },
          "disabled": {
            "control": { "type": "boolean" },
            "name": "disabled",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the control is disabled",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "defaultValue": {
            "control": { "type": "object" },
            "name": "defaultValue",
            "type": { "required": false, "name": "other", "value": "any" },
            "required": false,
            "description": "Optionally provide the default value of the `<select>`",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "any" },
            "table": { "type": { "summary": "any" }, "defaultValue": null }
          },
          "iconDescription": {
            "control": { "type": "text" },
            "name": "iconDescription",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Provide a description for the twistie icon that can be read by screen readers",
            "defaultValue": "open list of options",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "'open list of options'" }
            }
          },
          "hideLabel": {
            "control": { "type": "boolean" },
            "name": "hideLabel",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the label should be hidden, or not",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "invalid": {
            "control": { "type": "boolean" },
            "name": "invalid",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify if the currently value is invalid.",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "invalidText": {
            "control": { "type": "text" },
            "name": "invalidText",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Message which is displayed if the value is invalid.",
            "defaultValue": "",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "''" }
            }
          },
          "light": {
            "control": { "type": "boolean" },
            "name": "light",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether you want the light version of this control",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "small": {
            "control": { "type": "boolean" },
            "name": "small",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether you want the small version of this control",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          }
        },
        "initialArgs": {
          "iconDescription": "open list of options",
          "labelText": "Label text",
          "helperText": "This is a helper text"
        }
      },
      "components-stepnavigation--step-navigation-regular": {
        "id": "components-stepnavigation--step-navigation-regular",
        "kind": "Components/StepNavigation",
        "name": "Step Navigation Regular",
        "story": "Step Navigation Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": {
            "source": "(args) => (\n  <StepNavigation {...args}>\n    <StepNavigationItem label=\"Item without Status\" page={0} />\n    <StepNavigationItem label=\"Active Item\" page={1} />\n    <StepNavigationItem\n      label=\"Not started Item\"\n      page={2}\n      status=\"not-started\"\n    />\n  </StepNavigation>\n)"
          },
          "__id": "components-stepnavigation--step-navigation-regular",
          "args": { "children": "StepNavigation", "href": "#" },
          "argTypes": {
            "children": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": false },
              "name": "children",
              "required": false,
              "description": "Pass in a collection of <StepNavigationItem> children to be rendered depending on the\ncurrently selected tab",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "href": {
              "control": { "type": "text" },
              "type": { "name": "string" },
              "name": "href"
            },
            "iconDescription": {
              "control": { "type": "object" },
              "name": "iconDescription",
              "type": { "required": false },
              "required": false,
              "defaultValue": "show menu options",
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": { "summary": "'show menu options'" }
              }
            },
            "role": {
              "control": { "type": "object" },
              "name": "role",
              "type": { "required": false },
              "required": false,
              "description": "By default, this value is \"navigation\". You can also provide an alternate\nrole if it makes sense from the accessibility-side",
              "defaultValue": "navigation",
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": { "summary": "'navigation'" }
              }
            },
            "triggerHref": {
              "control": { "type": "object" },
              "name": "triggerHref",
              "type": { "required": false },
              "required": false,
              "defaultValue": "#",
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": { "summary": "'#'" }
              }
            },
            "selected": {
              "control": { "type": "object" },
              "name": "selected",
              "type": { "required": false },
              "required": false,
              "description": "Optionally provide an index for the currently selected <Tab>",
              "defaultValue": 0,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": { "summary": "0" }
              }
            },
            "ariaLabel": {
              "control": { "type": "object" },
              "name": "ariaLabel",
              "type": { "required": false },
              "required": false,
              "defaultValue": "listbox",
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": { "summary": "'listbox'" }
              }
            },
            "className": {
              "control": { "type": "object" },
              "name": "className",
              "type": { "required": false },
              "required": false,
              "description": "Provide a className that is applied to the root <nav> component for the\n<Tabs>",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "customTabContent": {
              "control": { "type": "object" },
              "name": "customTabContent",
              "type": { "required": false },
              "required": false,
              "description": "Provide a customTabContent by using independent action triggers\ninside the Tabs",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "small": {
              "control": { "type": "object" },
              "name": "small",
              "type": { "required": false },
              "required": false,
              "description": "Specify whether the StepNavigation will be displayed small",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "vertical": {
              "control": { "type": "object" },
              "name": "vertical",
              "type": { "required": false },
              "required": false,
              "description": "Specify whether the StepNavigation will be displayed vertically",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "onClick": {
              "control": { "type": "object" },
              "name": "onClick",
              "type": { "required": false },
              "required": false,
              "description": "Optionally provide an `onClick` handler that is invoked when a <Tab> is\nclicked",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "onSelectionChange": {
              "control": { "type": "object" },
              "name": "onSelectionChange",
              "type": { "required": false },
              "required": false,
              "description": "Provide an optional handler that is called whenever the selection\nchanges. This method is called with the index of the tab that was\nselected",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "iconDescription": "show menu options",
          "role": "navigation",
          "triggerHref": "#",
          "ariaLabel": "listbox",
          "children": "StepNavigation",
          "href": "#"
        },
        "argTypes": {
          "children": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": false },
            "name": "children",
            "required": false,
            "description": "Pass in a collection of <StepNavigationItem> children to be rendered depending on the\ncurrently selected tab",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "href": {
            "control": { "type": "text" },
            "type": { "name": "string" },
            "name": "href"
          },
          "iconDescription": {
            "control": { "type": "object" },
            "name": "iconDescription",
            "type": { "required": false },
            "required": false,
            "defaultValue": "show menu options",
            "table": {
              "type": { "summary": "unknown" },
              "defaultValue": { "summary": "'show menu options'" }
            }
          },
          "role": {
            "control": { "type": "object" },
            "name": "role",
            "type": { "required": false },
            "required": false,
            "description": "By default, this value is \"navigation\". You can also provide an alternate\nrole if it makes sense from the accessibility-side",
            "defaultValue": "navigation",
            "table": {
              "type": { "summary": "unknown" },
              "defaultValue": { "summary": "'navigation'" }
            }
          },
          "triggerHref": {
            "control": { "type": "object" },
            "name": "triggerHref",
            "type": { "required": false },
            "required": false,
            "defaultValue": "#",
            "table": {
              "type": { "summary": "unknown" },
              "defaultValue": { "summary": "'#'" }
            }
          },
          "selected": {
            "control": { "type": "object" },
            "name": "selected",
            "type": { "required": false },
            "required": false,
            "description": "Optionally provide an index for the currently selected <Tab>",
            "defaultValue": 0,
            "table": {
              "type": { "summary": "unknown" },
              "defaultValue": { "summary": "0" }
            }
          },
          "ariaLabel": {
            "control": { "type": "object" },
            "name": "ariaLabel",
            "type": { "required": false },
            "required": false,
            "defaultValue": "listbox",
            "table": {
              "type": { "summary": "unknown" },
              "defaultValue": { "summary": "'listbox'" }
            }
          },
          "className": {
            "control": { "type": "object" },
            "name": "className",
            "type": { "required": false },
            "required": false,
            "description": "Provide a className that is applied to the root <nav> component for the\n<Tabs>",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "customTabContent": {
            "control": { "type": "object" },
            "name": "customTabContent",
            "type": { "required": false },
            "required": false,
            "description": "Provide a customTabContent by using independent action triggers\ninside the Tabs",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "small": {
            "control": { "type": "object" },
            "name": "small",
            "type": { "required": false },
            "required": false,
            "description": "Specify whether the StepNavigation will be displayed small",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "vertical": {
            "control": { "type": "object" },
            "name": "vertical",
            "type": { "required": false },
            "required": false,
            "description": "Specify whether the StepNavigation will be displayed vertically",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "onClick": {
            "control": { "type": "object" },
            "name": "onClick",
            "type": { "required": false },
            "required": false,
            "description": "Optionally provide an `onClick` handler that is invoked when a <Tab> is\nclicked",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "onSelectionChange": {
            "control": { "type": "object" },
            "name": "onSelectionChange",
            "type": { "required": false },
            "required": false,
            "description": "Provide an optional handler that is called whenever the selection\nchanges. This method is called with the index of the tab that was\nselected",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          }
        },
        "initialArgs": {
          "iconDescription": "show menu options",
          "role": "navigation",
          "triggerHref": "#",
          "ariaLabel": "listbox",
          "children": "StepNavigation",
          "href": "#"
        }
      },
      "components-stepnavigation--different-states": {
        "id": "components-stepnavigation--different-states",
        "kind": "Components/StepNavigation",
        "name": "Different States",
        "story": "Different States",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\n\n#### Default types of state\n\n| kind   |  Description  |\n|----------|-------------|\n| `warning` | warning that there is information missing |\n| `error` | experimental   |\n| `not-started` | currently empty, because not yet started |\n| `locked` | can't be accessed at the moment |\n| `skip` | skipped step |\n| `disabled` | disabled step |\n| `complete` | completed step |\n"
          },
          "storySource": {
            "source": "(args) => (\n  <StepNavigation {...args}>\n    <StepNavigationItem label=\"Item without Status\" page={0} />\n    <StepNavigationItem label=\"Active Item\" page={1} />\n    <StepNavigationItem\n      label=\"Not started Item\"\n      page={2}\n      status=\"not-started\"\n    />\n    <StepNavigationItem label=\"Warning Item\" page={3} status=\"warning\" />\n    <StepNavigationItem label=\"Complete Item\" page={4} status=\"complete\" />\n    <StepNavigationItem label=\"Skipped Item\" page={4} status=\"skip\" />\n    <StepNavigationItem label=\"Disabled Item\" page={5} status=\"disabled\" />\n    <StepNavigationItem label=\"Locked Item\" page={6} status=\"locked\" />\n  </StepNavigation>\n)"
          },
          "__id": "components-stepnavigation--different-states",
          "args": {},
          "argTypes": {
            "iconDescription": {
              "control": { "type": "object" },
              "name": "iconDescription",
              "type": { "required": false },
              "required": false,
              "defaultValue": "show menu options",
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": { "summary": "'show menu options'" }
              }
            },
            "role": {
              "control": { "type": "object" },
              "name": "role",
              "type": { "required": false },
              "required": false,
              "description": "By default, this value is \"navigation\". You can also provide an alternate\nrole if it makes sense from the accessibility-side",
              "defaultValue": "navigation",
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": { "summary": "'navigation'" }
              }
            },
            "triggerHref": {
              "control": { "type": "object" },
              "name": "triggerHref",
              "type": { "required": false },
              "required": false,
              "defaultValue": "#",
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": { "summary": "'#'" }
              }
            },
            "selected": {
              "control": { "type": "object" },
              "name": "selected",
              "type": { "required": false },
              "required": false,
              "description": "Optionally provide an index for the currently selected <Tab>",
              "defaultValue": 0,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": { "summary": "0" }
              }
            },
            "ariaLabel": {
              "control": { "type": "object" },
              "name": "ariaLabel",
              "type": { "required": false },
              "required": false,
              "defaultValue": "listbox",
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": { "summary": "'listbox'" }
              }
            },
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false },
              "required": false,
              "description": "Pass in a collection of <StepNavigationItem> children to be rendered depending on the\ncurrently selected tab",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "className": {
              "control": { "type": "object" },
              "name": "className",
              "type": { "required": false },
              "required": false,
              "description": "Provide a className that is applied to the root <nav> component for the\n<Tabs>",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "customTabContent": {
              "control": { "type": "object" },
              "name": "customTabContent",
              "type": { "required": false },
              "required": false,
              "description": "Provide a customTabContent by using independent action triggers\ninside the Tabs",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "small": {
              "control": { "type": "object" },
              "name": "small",
              "type": { "required": false },
              "required": false,
              "description": "Specify whether the StepNavigation will be displayed small",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "vertical": {
              "control": { "type": "object" },
              "name": "vertical",
              "type": { "required": false },
              "required": false,
              "description": "Specify whether the StepNavigation will be displayed vertically",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "onClick": {
              "control": { "type": "object" },
              "name": "onClick",
              "type": { "required": false },
              "required": false,
              "description": "Optionally provide an `onClick` handler that is invoked when a <Tab> is\nclicked",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "onSelectionChange": {
              "control": { "type": "object" },
              "name": "onSelectionChange",
              "type": { "required": false },
              "required": false,
              "description": "Provide an optional handler that is called whenever the selection\nchanges. This method is called with the index of the tab that was\nselected",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "iconDescription": "show menu options",
          "role": "navigation",
          "triggerHref": "#",
          "ariaLabel": "listbox"
        },
        "argTypes": {
          "iconDescription": {
            "control": { "type": "object" },
            "name": "iconDescription",
            "type": { "required": false },
            "required": false,
            "defaultValue": "show menu options",
            "table": {
              "type": { "summary": "unknown" },
              "defaultValue": { "summary": "'show menu options'" }
            }
          },
          "role": {
            "control": { "type": "object" },
            "name": "role",
            "type": { "required": false },
            "required": false,
            "description": "By default, this value is \"navigation\". You can also provide an alternate\nrole if it makes sense from the accessibility-side",
            "defaultValue": "navigation",
            "table": {
              "type": { "summary": "unknown" },
              "defaultValue": { "summary": "'navigation'" }
            }
          },
          "triggerHref": {
            "control": { "type": "object" },
            "name": "triggerHref",
            "type": { "required": false },
            "required": false,
            "defaultValue": "#",
            "table": {
              "type": { "summary": "unknown" },
              "defaultValue": { "summary": "'#'" }
            }
          },
          "selected": {
            "control": { "type": "object" },
            "name": "selected",
            "type": { "required": false },
            "required": false,
            "description": "Optionally provide an index for the currently selected <Tab>",
            "defaultValue": 0,
            "table": {
              "type": { "summary": "unknown" },
              "defaultValue": { "summary": "0" }
            }
          },
          "ariaLabel": {
            "control": { "type": "object" },
            "name": "ariaLabel",
            "type": { "required": false },
            "required": false,
            "defaultValue": "listbox",
            "table": {
              "type": { "summary": "unknown" },
              "defaultValue": { "summary": "'listbox'" }
            }
          },
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false },
            "required": false,
            "description": "Pass in a collection of <StepNavigationItem> children to be rendered depending on the\ncurrently selected tab",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "object" },
            "name": "className",
            "type": { "required": false },
            "required": false,
            "description": "Provide a className that is applied to the root <nav> component for the\n<Tabs>",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "customTabContent": {
            "control": { "type": "object" },
            "name": "customTabContent",
            "type": { "required": false },
            "required": false,
            "description": "Provide a customTabContent by using independent action triggers\ninside the Tabs",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "small": {
            "control": { "type": "object" },
            "name": "small",
            "type": { "required": false },
            "required": false,
            "description": "Specify whether the StepNavigation will be displayed small",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "vertical": {
            "control": { "type": "object" },
            "name": "vertical",
            "type": { "required": false },
            "required": false,
            "description": "Specify whether the StepNavigation will be displayed vertically",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "onClick": {
            "control": { "type": "object" },
            "name": "onClick",
            "type": { "required": false },
            "required": false,
            "description": "Optionally provide an `onClick` handler that is invoked when a <Tab> is\nclicked",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "onSelectionChange": {
            "control": { "type": "object" },
            "name": "onSelectionChange",
            "type": { "required": false },
            "required": false,
            "description": "Provide an optional handler that is called whenever the selection\nchanges. This method is called with the index of the tab that was\nselected",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          }
        },
        "initialArgs": {
          "iconDescription": "show menu options",
          "role": "navigation",
          "triggerHref": "#",
          "ariaLabel": "listbox"
        }
      },
      "components-stepnavigation--vertical": {
        "id": "components-stepnavigation--vertical",
        "kind": "Components/StepNavigation",
        "name": "Vertical",
        "story": "Vertical",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": { "storyDescription": "" },
          "storySource": {
            "source": "(args) => (\n  <StepNavigation {...args}>\n    <StepNavigationItem label=\"Item without Status\" page={0} />\n    <StepNavigationItem label=\"Active Item\" page={1} />\n    <StepNavigationItem\n      label=\"Not started Item\"\n      page={2}\n      status=\"not-started\"\n    />\n    <StepNavigationItem label=\"Warning Item\" page={3} status=\"warning\" />\n    <StepNavigationItem label=\"Complete Item\" page={4} status=\"complete\" />\n    <StepNavigationItem label=\"Skipped Item\" page={4} status=\"skip\" />\n    <StepNavigationItem label=\"Disabled Item\" page={5} status=\"disabled\" />\n    <StepNavigationItem label=\"Locked Item\" page={6} status=\"locked\" />\n  </StepNavigation>\n)"
          },
          "__id": "components-stepnavigation--vertical",
          "args": { "vertical": true },
          "argTypes": {
            "vertical": {
              "control": { "type": "boolean" },
              "type": { "name": "boolean", "required": false },
              "name": "vertical",
              "required": false,
              "description": "Specify whether the StepNavigation will be displayed vertically",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "iconDescription": {
              "control": { "type": "object" },
              "name": "iconDescription",
              "type": { "required": false },
              "required": false,
              "defaultValue": "show menu options",
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": { "summary": "'show menu options'" }
              }
            },
            "role": {
              "control": { "type": "object" },
              "name": "role",
              "type": { "required": false },
              "required": false,
              "description": "By default, this value is \"navigation\". You can also provide an alternate\nrole if it makes sense from the accessibility-side",
              "defaultValue": "navigation",
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": { "summary": "'navigation'" }
              }
            },
            "triggerHref": {
              "control": { "type": "object" },
              "name": "triggerHref",
              "type": { "required": false },
              "required": false,
              "defaultValue": "#",
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": { "summary": "'#'" }
              }
            },
            "selected": {
              "control": { "type": "object" },
              "name": "selected",
              "type": { "required": false },
              "required": false,
              "description": "Optionally provide an index for the currently selected <Tab>",
              "defaultValue": 0,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": { "summary": "0" }
              }
            },
            "ariaLabel": {
              "control": { "type": "object" },
              "name": "ariaLabel",
              "type": { "required": false },
              "required": false,
              "defaultValue": "listbox",
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": { "summary": "'listbox'" }
              }
            },
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false },
              "required": false,
              "description": "Pass in a collection of <StepNavigationItem> children to be rendered depending on the\ncurrently selected tab",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "className": {
              "control": { "type": "object" },
              "name": "className",
              "type": { "required": false },
              "required": false,
              "description": "Provide a className that is applied to the root <nav> component for the\n<Tabs>",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "customTabContent": {
              "control": { "type": "object" },
              "name": "customTabContent",
              "type": { "required": false },
              "required": false,
              "description": "Provide a customTabContent by using independent action triggers\ninside the Tabs",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "small": {
              "control": { "type": "object" },
              "name": "small",
              "type": { "required": false },
              "required": false,
              "description": "Specify whether the StepNavigation will be displayed small",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "onClick": {
              "control": { "type": "object" },
              "name": "onClick",
              "type": { "required": false },
              "required": false,
              "description": "Optionally provide an `onClick` handler that is invoked when a <Tab> is\nclicked",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            },
            "onSelectionChange": {
              "control": { "type": "object" },
              "name": "onSelectionChange",
              "type": { "required": false },
              "required": false,
              "description": "Provide an optional handler that is called whenever the selection\nchanges. This method is called with the index of the tab that was\nselected",
              "defaultValue": null,
              "table": {
                "type": { "summary": "unknown" },
                "defaultValue": null
              }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "iconDescription": "show menu options",
          "role": "navigation",
          "triggerHref": "#",
          "ariaLabel": "listbox",
          "vertical": true
        },
        "argTypes": {
          "vertical": {
            "control": { "type": "boolean" },
            "type": { "name": "boolean", "required": false },
            "name": "vertical",
            "required": false,
            "description": "Specify whether the StepNavigation will be displayed vertically",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "iconDescription": {
            "control": { "type": "object" },
            "name": "iconDescription",
            "type": { "required": false },
            "required": false,
            "defaultValue": "show menu options",
            "table": {
              "type": { "summary": "unknown" },
              "defaultValue": { "summary": "'show menu options'" }
            }
          },
          "role": {
            "control": { "type": "object" },
            "name": "role",
            "type": { "required": false },
            "required": false,
            "description": "By default, this value is \"navigation\". You can also provide an alternate\nrole if it makes sense from the accessibility-side",
            "defaultValue": "navigation",
            "table": {
              "type": { "summary": "unknown" },
              "defaultValue": { "summary": "'navigation'" }
            }
          },
          "triggerHref": {
            "control": { "type": "object" },
            "name": "triggerHref",
            "type": { "required": false },
            "required": false,
            "defaultValue": "#",
            "table": {
              "type": { "summary": "unknown" },
              "defaultValue": { "summary": "'#'" }
            }
          },
          "selected": {
            "control": { "type": "object" },
            "name": "selected",
            "type": { "required": false },
            "required": false,
            "description": "Optionally provide an index for the currently selected <Tab>",
            "defaultValue": 0,
            "table": {
              "type": { "summary": "unknown" },
              "defaultValue": { "summary": "0" }
            }
          },
          "ariaLabel": {
            "control": { "type": "object" },
            "name": "ariaLabel",
            "type": { "required": false },
            "required": false,
            "defaultValue": "listbox",
            "table": {
              "type": { "summary": "unknown" },
              "defaultValue": { "summary": "'listbox'" }
            }
          },
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false },
            "required": false,
            "description": "Pass in a collection of <StepNavigationItem> children to be rendered depending on the\ncurrently selected tab",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "object" },
            "name": "className",
            "type": { "required": false },
            "required": false,
            "description": "Provide a className that is applied to the root <nav> component for the\n<Tabs>",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "customTabContent": {
            "control": { "type": "object" },
            "name": "customTabContent",
            "type": { "required": false },
            "required": false,
            "description": "Provide a customTabContent by using independent action triggers\ninside the Tabs",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "small": {
            "control": { "type": "object" },
            "name": "small",
            "type": { "required": false },
            "required": false,
            "description": "Specify whether the StepNavigation will be displayed small",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "onClick": {
            "control": { "type": "object" },
            "name": "onClick",
            "type": { "required": false },
            "required": false,
            "description": "Optionally provide an `onClick` handler that is invoked when a <Tab> is\nclicked",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          },
          "onSelectionChange": {
            "control": { "type": "object" },
            "name": "onSelectionChange",
            "type": { "required": false },
            "required": false,
            "description": "Provide an optional handler that is called whenever the selection\nchanges. This method is called with the index of the tab that was\nselected",
            "defaultValue": null,
            "table": { "type": { "summary": "unknown" }, "defaultValue": null }
          }
        },
        "initialArgs": {
          "iconDescription": "show menu options",
          "role": "navigation",
          "triggerHref": "#",
          "ariaLabel": "listbox",
          "vertical": true
        }
      },
      "components-story--story-text": {
        "id": "components-story--story-text",
        "kind": "Components/Story",
        "name": "Story Text",
        "story": "Story Text",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\nYou can customize the content by using `BannerNavigation`.\n"
          },
          "storySource": {
            "source": "(args) => (\n  <Story {...args}>\n    {' '}\n    <h2 className=\"wfp--story__subtitle\">\n      Funding facility allows for scale-up of emergency operation\n    </h2>\n    <h1 className=\"wfp--story__title\">WFP’s Immediate Response Account</h1>\n    <p className=\"wfp--markup\">\n      In mid-2016, widespread inter-ethnic tensions and conflict descended on\n      the Kasai region of the <a href=\"#\">Democratic Republic of Congo (DRC)</a>\n      , claiming countless lives and causing massive displacement. The Kasai\n      crisis unfolded within a country already struggling with a protracted and\n      underfunded emergency in the east. Since the emergence of the Kasai\n      crisis, funding shortfalls proved to be a major challenge to WFP’s\n      response.\n    </p>\n    <h2>Secondary heading</h2>\n    <p>\n      The scale of the food security and nutrition crisis in Kasai is immense.\n      In <a href=\"#\">September 2017</a>, the{' '}\n      <span className=\"wfp--inline-highlight\">\n        World Food Programme (WFP)’s Emergency Food Security Assessment\n      </span>{' '}\n      found that there were 3.2 million severely food insecure people in this\n      region alone. In addition, 400,000 children are at risk of dying from\n      severe acute malnutrition without urgent life-saving assistance.\n    </p>\n    <h3>\n      Smaller Heading (h3) with <a href=\"#\">link</a>\n    </h3>\n    <ul className=\"wfp--story__list\">\n      <li>Lorem ipsum dolor sit amet</li>\n      <li>Consetetur sadipscing elitr</li>\n      <li>Sed diam nonumy eirmod tempor invidunt ut labore et dolore</li>\n    </ul>\n    <p>\n      The scale of the food security and nutrition crisis in Kasai is immense.\n      In September 2017, the World Food Programme (WFP)’s Emergency Food\n      Security Assessment found that there were 3.2 million severely food\n      insecure people in this region alone. In addition, 400,000 children are at\n      risk of dying from severe acute malnutrition without urgent life-saving\n      assistance.\n    </p>\n    <hr className=\"wfp--story__divider\" />\n    <p>\n      The scale of the food security and nutrition crisis in Kasai is immense.\n      In September 2017, the World Food Programme (WFP)’s Emergency Food\n      Security Assessment found that there were 3.2 million severely food\n      insecure people in this region alone. In addition, 400,000 children are at\n      risk of dying from severe acute malnutrition without urgent life-saving\n      assistance.\n    </p>\n    <hr className=\"wfp--story__divider--lg\" />\n    <p>\n      The scale of the food security and nutrition crisis in Kasai is immense.\n      In September 2017, the World Food Programme (WFP)’s Emergency Food\n      Security Assessment found that there were 3.2 million severely food\n      insecure people in this region alone. In addition, 400,000 children are at\n      risk of dying from severe acute malnutrition without urgent life-saving\n      assistance.\n    </p>\n  </Story>\n)"
          },
          "__id": "components-story--story-text",
          "args": {},
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "The Story content",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Additional className for Story",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {},
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "The Story content",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Additional className for Story",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          }
        },
        "initialArgs": {}
      },
      "components-subnavigation--regular-sub-navigation": {
        "id": "components-subnavigation--regular-sub-navigation",
        "kind": "Components/SubNavigation",
        "name": "Regular",
        "story": "Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\nYou can customize the content by using `BannerNavigation`.\n"
          },
          "storySource": {
            "source": "(args) => (\n  <SubNavigation {...args}>\n    {' '}\n    <SubNavigationHeader>\n      <SubNavigationTitle>The Title</SubNavigationTitle>\n      <SubNavigationLink>\n        <Button small>The SubPage Link</Button>\n      </SubNavigationLink>\n\n      <SubNavigationFilter>\n        <Search\n          className=\"some-class\"\n          small\n          id=\"search-2\"\n          labelText=\"Filter\"\n          placeHolderText=\"Filter\"\n          onChange={() => {\n            alert('Apply Filter');\n          }}\n        />\n      </SubNavigationFilter>\n    </SubNavigationHeader>\n    <SubNavigationContent>\n      <SubNavigationList>\n        <SubNavigationGroup title=\"First List\" columns>\n          <SubNavigationItem>\n            <Link href=\"https://go.docs.wfp.org\" target=\"_blank\">\n              GoDocs\n            </Link>\n          </SubNavigationItem>\n          <SubNavigationItem>\n            <Link href=\"https://go.docs.wfp.org\" target=\"_blank\">\n              GoDocs\n            </Link>\n          </SubNavigationItem>\n          <SubNavigationItem>\n            <Link href=\"https://go.docs.wfp.org\" target=\"_blank\">\n              GoDocs\n            </Link>\n          </SubNavigationItem>\n          <SubNavigationItem>\n            <Link href=\"https://go.docs.wfp.org\" target=\"_blank\">\n              GoDocs\n            </Link>\n          </SubNavigationItem>\n          <SubNavigationItem>\n            <Link href=\"https://go.docs.wfp.org\" target=\"_blank\">\n              GoDocs\n            </Link>\n          </SubNavigationItem>\n          <SubNavigationItem>\n            <Link href=\"https://go.docs.wfp.org\" target=\"_blank\">\n              GoDocs\n            </Link>\n          </SubNavigationItem>\n          <SubNavigationItem>\n            <Link href=\"https://go.docs.wfp.org\" target=\"_blank\">\n              GoDocs\n            </Link>\n          </SubNavigationItem>\n          <SubNavigationItem>\n            <Link href=\"https://go.docs.wfp.org\" target=\"_blank\">\n              GoDocs\n            </Link>\n          </SubNavigationItem>\n          <SubNavigationItem>\n            <Link href=\"https://go.docs.wfp.org\" target=\"_blank\">\n              GoDocs\n            </Link>\n          </SubNavigationItem>\n        </SubNavigationGroup>\n        <SubNavigationGroup title=\"Second List of Items\">\n          <SubNavigationItem>\n            <Link href=\"https://go.docs.wfp.org\" target=\"_blank\">\n              GoDocs\n            </Link>\n          </SubNavigationItem>\n          <SubNavigationItem>\n            <Link href=\"https://go.docs.wfp.org\" target=\"_blank\">\n              GoDocs\n            </Link>\n          </SubNavigationItem>\n          <SubNavigationItem>\n            <Link href=\"https://go.docs.wfp.org\" target=\"_blank\">\n              GoDocs\n            </Link>\n          </SubNavigationItem>\n          <SubNavigationItem>\n            <Link href=\"https://go.docs.wfp.org\" target=\"_blank\">\n              GoDocs\n            </Link>\n          </SubNavigationItem>\n          <SubNavigationItem>\n            <Link href=\"https://go.docs.wfp.org\" target=\"_blank\">\n              GoDocs\n            </Link>\n          </SubNavigationItem>\n          <SubNavigationItem>\n            <Link href=\"https://go.docs.wfp.org\" target=\"_blank\">\n              GoDocs\n            </Link>\n          </SubNavigationItem>\n          <SubNavigationItem>\n            <Link href=\"https://go.docs.wfp.org\" target=\"_blank\">\n              GoDocs\n            </Link>\n          </SubNavigationItem>\n          <SubNavigationItem>\n            <Link href=\"https://go.docs.wfp.org\" target=\"_blank\">\n              GoDocs\n            </Link>\n          </SubNavigationItem>\n          <SubNavigationItem>\n            <Link href=\"https://go.docs.wfp.org\" target=\"_blank\">\n              GoDocs\n            </Link>\n          </SubNavigationItem>\n        </SubNavigationGroup>\n      </SubNavigationList>\n    </SubNavigationContent>\n  </SubNavigation>\n)"
          },
          "__id": "components-subnavigation--regular-sub-navigation",
          "args": {},
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": true, "name": "other", "value": "node" },
              "required": true,
              "description": "",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {},
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": true, "name": "other", "value": "node" },
            "required": true,
            "description": "",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          }
        },
        "initialArgs": {}
      },
      "components-table--regular": {
        "id": "components-table--regular",
        "kind": "Components/Table",
        "name": "Regular",
        "story": "Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": {
            "source": "(args) => (\n  <Table>\n    <thead>\n      <tr>\n        <th>Header content 1</th>\n        <th>Header content 2</th>\n      </tr>\n    </thead>\n    <tfoot>\n      <tr>\n        <td>Footer content 1</td>\n        <td>Footer content 2</td>\n      </tr>\n    </tfoot>\n    <tbody>\n      <tr>\n        <td>Body content 1</td>\n        <td>Body content 2</td>\n      </tr>\n    </tbody>\n  </Table>\n)"
          },
          "__id": "components-table--regular",
          "args": {},
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Provide the content for the Table, usually `<thead />` or `<tbody/>`",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Provide a custom className to be applied to the containing `<table />` node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "responsive": {
              "control": { "type": "boolean" },
              "name": "responsive",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Displays the `<table />` as a responsive layout on small devices",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "withBorder": {
              "control": { "type": "boolean" },
              "name": "withBorder",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Displays a border around the `<table />` node",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {},
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Provide the content for the Table, usually `<thead />` or `<tbody/>`",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Provide a custom className to be applied to the containing `<table />` node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "responsive": {
            "control": { "type": "boolean" },
            "name": "responsive",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Displays the `<table />` as a responsive layout on small devices",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "withBorder": {
            "control": { "type": "boolean" },
            "name": "withBorder",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Displays a border around the `<table />` node",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          }
        },
        "initialArgs": {}
      },
      "components-table--using-react-table": {
        "id": "components-table--using-react-table",
        "kind": "Components/Table",
        "name": "Using React Table",
        "story": "Using React Table",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\nWe recommend [React-Table](https://react-table.js.org/) for tables with additional complexity. If you need Excel like features like cell editing row selection and copy/paste we recommend [ag-grid](https://www.ag-grid.com/).\n"
          },
          "storySource": {
            "source": "(args) => {\n  const columns = React.useMemo(() => sampleColumns, []);\n\n  const data = React.useMemo(() => makeData(3), []);\n  return <ReactTable {...args} columns={columns} data={data} />;\n}"
          },
          "__id": "components-table--using-react-table",
          "args": {},
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Provide the content for the Table, usually `<thead />` or `<tbody/>`",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Provide a custom className to be applied to the containing `<table />` node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "responsive": {
              "control": { "type": "boolean" },
              "name": "responsive",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Displays the `<table />` as a responsive layout on small devices",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "withBorder": {
              "control": { "type": "boolean" },
              "name": "withBorder",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Displays a border around the `<table />` node",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {},
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Provide the content for the Table, usually `<thead />` or `<tbody/>`",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Provide a custom className to be applied to the containing `<table />` node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "responsive": {
            "control": { "type": "boolean" },
            "name": "responsive",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Displays the `<table />` as a responsive layout on small devices",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "withBorder": {
            "control": { "type": "boolean" },
            "name": "withBorder",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Displays a border around the `<table />` node",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          }
        },
        "initialArgs": {}
      },
      "components-table--table-sorting-header": {
        "id": "components-table--table-sorting-header",
        "kind": "Components/Table",
        "name": "Table Sorting Header",
        "story": "Table Sorting Header",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": { "storyDescription": "Sorting" },
          "storySource": {
            "source": "(args) => {\n  const columns = React.useMemo(() => sampleColumns, []);\n\n  const data = React.useMemo(() => makeData(8), []);\n  return <ReactTableSorting {...args} columns={columns} data={data} />;\n}"
          },
          "__id": "components-table--table-sorting-header",
          "args": {},
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Provide the content for the Table, usually `<thead />` or `<tbody/>`",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Provide a custom className to be applied to the containing `<table />` node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "responsive": {
              "control": { "type": "boolean" },
              "name": "responsive",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Displays the `<table />` as a responsive layout on small devices",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "withBorder": {
              "control": { "type": "boolean" },
              "name": "withBorder",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Displays a border around the `<table />` node",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {},
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Provide the content for the Table, usually `<thead />` or `<tbody/>`",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Provide a custom className to be applied to the containing `<table />` node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "responsive": {
            "control": { "type": "boolean" },
            "name": "responsive",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Displays the `<table />` as a responsive layout on small devices",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "withBorder": {
            "control": { "type": "boolean" },
            "name": "withBorder",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Displays a border around the `<table />` node",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          }
        },
        "initialArgs": {}
      },
      "components-table--table-pagination": {
        "id": "components-table--table-pagination",
        "kind": "Components/Table",
        "name": "Table Pagination",
        "story": "Table Pagination",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\nTo use the custom Pagination you can use the TablePagination component. Additional props for the TablePagination can be directly added to the `ReactTable` component (see Pagination component).\n\n\n```js\nimport { TablePagination } from '@wfp/ui';\n\n// Replacing the Pagination Component of React-Table\n\n<ReactTable\n  {...yourTableProps}\n  PaginationComponent={TablePagination}\n  {...otherPropsForThePaginationToo}\n/>\n```\n"
          },
          "storySource": {
            "source": "(args) => {\n  const columns = React.useMemo(() => sampleColumns, []);\n\n  const data = React.useMemo(() => makeData(25), []);\n\n  return <ReactTablePagination {...args} columns={columns} data={data} />;\n}"
          },
          "__id": "components-table--table-pagination",
          "args": {},
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Provide the content for the Table, usually `<thead />` or `<tbody/>`",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Provide a custom className to be applied to the containing `<table />` node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "responsive": {
              "control": { "type": "boolean" },
              "name": "responsive",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Displays the `<table />` as a responsive layout on small devices",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "withBorder": {
              "control": { "type": "boolean" },
              "name": "withBorder",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Displays a border around the `<table />` node",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {},
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Provide the content for the Table, usually `<thead />` or `<tbody/>`",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Provide a custom className to be applied to the containing `<table />` node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "responsive": {
            "control": { "type": "boolean" },
            "name": "responsive",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Displays the `<table />` as a responsive layout on small devices",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "withBorder": {
            "control": { "type": "boolean" },
            "name": "withBorder",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Displays a border around the `<table />` node",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          }
        },
        "initialArgs": {}
      },
      "components-tabs--regular": {
        "id": "components-tabs--regular",
        "kind": "Components/Tabs",
        "name": "Regular",
        "story": "Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": {
            "source": "(args) => (\n  <Tabs {...args}>\n    <Tab label={`${tab.label} 1`}>\n      <div className=\"some-content\">Content for first tab goes here.</div>\n    </Tab>\n    <Tab label={`${tab.label} 2`}>\n      <div className=\"some-content\">Content for second tab goes here.</div>\n    </Tab>\n    <Tab label={`${tab.label} 3`}>\n      <div className=\"some-content\">Content for third tab goes here.</div>\n    </Tab>\n    <Tab disabled label={`${tab.label} 4 disabled`}>\n      <div className=\"some-content\">Content for fourth tab goes here.</div>\n    </Tab>\n  </Tabs>\n)"
          },
          "__id": "components-tabs--regular",
          "args": {},
          "argTypes": {
            "ariaLabel": {
              "control": { "type": "text" },
              "name": "ariaLabel",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify the text to be read by screen-readers when visiting the <Tabs>\ncomponent",
              "defaultValue": "listbox",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "'listbox'" }
              }
            },
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Pass in a collection of <Tab> children to be rendered depending on the\ncurrently selected tab",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Provide a className that is applied to the root <nav> component for the\n<Tabs>",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "customTabContent": {
              "control": { "type": "boolean" },
              "name": "customTabContent",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Provide a customTabContent by using independent action triggers\ninside the Tabs",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "disableAnimation": {
              "control": { "type": "boolean" },
              "name": "disableAnimation",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the animation should be used",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "inline": {
              "control": { "type": "boolean" },
              "name": "inline",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the Tabs are displayed inline",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "hidden": {
              "control": { "type": "boolean" },
              "name": "hidden",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the Tab content is hidden",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "role": {
              "control": { "type": "text" },
              "name": "role",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "By default, this value is \"navigation\". You can also provide an alternate\nrole if it makes sense from the accessibility-side",
              "defaultValue": "navigation",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "'navigation'" }
              }
            },
            "onClick": {
              "name": "onClick",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Optionally provide an `onClick` handler that is invoked when a <Tab> is\nclicked",
              "defaultValue": null,
              "sbType": { "name": "function" },
              "table": { "type": { "summary": "func" }, "defaultValue": null }
            },
            "onKeyDown": {
              "name": "onKeyDown",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Optionally provide an `onKeyDown` handler that is invoked when keyed\nnavigation is triggered",
              "defaultValue": null,
              "sbType": { "name": "function" },
              "table": { "type": { "summary": "func" }, "defaultValue": null }
            },
            "onSelectionChange": {
              "name": "onSelectionChange",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Provide an optional handler that is called whenever the selection\nchanges. This method is called with the index of the tab that was\nselected",
              "defaultValue": null,
              "sbType": { "name": "function" },
              "table": { "type": { "summary": "func" }, "defaultValue": null }
            },
            "triggerHref": {
              "control": { "type": "text" },
              "name": "triggerHref",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Provide a string that represents the `href` for the triggered <Tab>",
              "defaultValue": "#",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "'#'" }
              }
            },
            "selected": {
              "control": { "type": "number" },
              "name": "selected",
              "type": { "required": false, "name": "number" },
              "required": false,
              "description": "Optionally provide an index for the currently selected <Tab>",
              "defaultValue": 0,
              "sbType": { "name": "number" },
              "table": {
                "type": { "summary": "number" },
                "defaultValue": { "summary": "0" }
              }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "ariaLabel": "listbox",
          "role": "navigation",
          "triggerHref": "#"
        },
        "argTypes": {
          "ariaLabel": {
            "control": { "type": "text" },
            "name": "ariaLabel",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify the text to be read by screen-readers when visiting the <Tabs>\ncomponent",
            "defaultValue": "listbox",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "'listbox'" }
            }
          },
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Pass in a collection of <Tab> children to be rendered depending on the\ncurrently selected tab",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Provide a className that is applied to the root <nav> component for the\n<Tabs>",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "customTabContent": {
            "control": { "type": "boolean" },
            "name": "customTabContent",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Provide a customTabContent by using independent action triggers\ninside the Tabs",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "disableAnimation": {
            "control": { "type": "boolean" },
            "name": "disableAnimation",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the animation should be used",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "inline": {
            "control": { "type": "boolean" },
            "name": "inline",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the Tabs are displayed inline",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "hidden": {
            "control": { "type": "boolean" },
            "name": "hidden",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the Tab content is hidden",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "role": {
            "control": { "type": "text" },
            "name": "role",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "By default, this value is \"navigation\". You can also provide an alternate\nrole if it makes sense from the accessibility-side",
            "defaultValue": "navigation",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "'navigation'" }
            }
          },
          "onClick": {
            "name": "onClick",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Optionally provide an `onClick` handler that is invoked when a <Tab> is\nclicked",
            "defaultValue": null,
            "sbType": { "name": "function" },
            "table": { "type": { "summary": "func" }, "defaultValue": null }
          },
          "onKeyDown": {
            "name": "onKeyDown",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Optionally provide an `onKeyDown` handler that is invoked when keyed\nnavigation is triggered",
            "defaultValue": null,
            "sbType": { "name": "function" },
            "table": { "type": { "summary": "func" }, "defaultValue": null }
          },
          "onSelectionChange": {
            "name": "onSelectionChange",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Provide an optional handler that is called whenever the selection\nchanges. This method is called with the index of the tab that was\nselected",
            "defaultValue": null,
            "sbType": { "name": "function" },
            "table": { "type": { "summary": "func" }, "defaultValue": null }
          },
          "triggerHref": {
            "control": { "type": "text" },
            "name": "triggerHref",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Provide a string that represents the `href` for the triggered <Tab>",
            "defaultValue": "#",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "'#'" }
            }
          },
          "selected": {
            "control": { "type": "number" },
            "name": "selected",
            "type": { "required": false, "name": "number" },
            "required": false,
            "description": "Optionally provide an index for the currently selected <Tab>",
            "defaultValue": 0,
            "sbType": { "name": "number" },
            "table": {
              "type": { "summary": "number" },
              "defaultValue": { "summary": "0" }
            }
          }
        },
        "initialArgs": {
          "ariaLabel": "listbox",
          "role": "navigation",
          "triggerHref": "#"
        }
      },
      "components-tabs--without-animation": {
        "id": "components-tabs--without-animation",
        "kind": "Components/Tabs",
        "name": "Without Animation",
        "story": "Without Animation",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\nYou can customize the content by using `BannerNavigation`.\n"
          },
          "storySource": {
            "source": "(args) => (\n  <Tabs {...args}>\n    <Tab label={`${tab.label} 1`}>\n      <div className=\"some-content\">Content for first tab goes here.</div>\n    </Tab>\n    <Tab label={`${tab.label} 2`}>\n      <div className=\"some-content\">Content for second tab goes here.</div>\n    </Tab>\n    <Tab label={`${tab.label} 3`}>\n      <div className=\"some-content\">Content for third tab goes here.</div>\n    </Tab>\n    <Tab disabled label={`${tab.label} 4 disabled`}>\n      <div className=\"some-content\">Content for fourth tab goes here.</div>\n    </Tab>\n  </Tabs>\n)"
          },
          "__id": "components-tabs--without-animation",
          "args": {},
          "argTypes": {
            "ariaLabel": {
              "control": { "type": "text" },
              "name": "ariaLabel",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify the text to be read by screen-readers when visiting the <Tabs>\ncomponent",
              "defaultValue": "listbox",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "'listbox'" }
              }
            },
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Pass in a collection of <Tab> children to be rendered depending on the\ncurrently selected tab",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Provide a className that is applied to the root <nav> component for the\n<Tabs>",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "customTabContent": {
              "control": { "type": "boolean" },
              "name": "customTabContent",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Provide a customTabContent by using independent action triggers\ninside the Tabs",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "disableAnimation": {
              "control": { "type": "boolean" },
              "name": "disableAnimation",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the animation should be used",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "inline": {
              "control": { "type": "boolean" },
              "name": "inline",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the Tabs are displayed inline",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "hidden": {
              "control": { "type": "boolean" },
              "name": "hidden",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the Tab content is hidden",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "role": {
              "control": { "type": "text" },
              "name": "role",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "By default, this value is \"navigation\". You can also provide an alternate\nrole if it makes sense from the accessibility-side",
              "defaultValue": "navigation",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "'navigation'" }
              }
            },
            "onClick": {
              "name": "onClick",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Optionally provide an `onClick` handler that is invoked when a <Tab> is\nclicked",
              "defaultValue": null,
              "sbType": { "name": "function" },
              "table": { "type": { "summary": "func" }, "defaultValue": null }
            },
            "onKeyDown": {
              "name": "onKeyDown",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Optionally provide an `onKeyDown` handler that is invoked when keyed\nnavigation is triggered",
              "defaultValue": null,
              "sbType": { "name": "function" },
              "table": { "type": { "summary": "func" }, "defaultValue": null }
            },
            "onSelectionChange": {
              "name": "onSelectionChange",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Provide an optional handler that is called whenever the selection\nchanges. This method is called with the index of the tab that was\nselected",
              "defaultValue": null,
              "sbType": { "name": "function" },
              "table": { "type": { "summary": "func" }, "defaultValue": null }
            },
            "triggerHref": {
              "control": { "type": "text" },
              "name": "triggerHref",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Provide a string that represents the `href` for the triggered <Tab>",
              "defaultValue": "#",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "'#'" }
              }
            },
            "selected": {
              "control": { "type": "number" },
              "name": "selected",
              "type": { "required": false, "name": "number" },
              "required": false,
              "description": "Optionally provide an index for the currently selected <Tab>",
              "defaultValue": 0,
              "sbType": { "name": "number" },
              "table": {
                "type": { "summary": "number" },
                "defaultValue": { "summary": "0" }
              }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "ariaLabel": "listbox",
          "role": "navigation",
          "triggerHref": "#"
        },
        "argTypes": {
          "ariaLabel": {
            "control": { "type": "text" },
            "name": "ariaLabel",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify the text to be read by screen-readers when visiting the <Tabs>\ncomponent",
            "defaultValue": "listbox",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "'listbox'" }
            }
          },
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Pass in a collection of <Tab> children to be rendered depending on the\ncurrently selected tab",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Provide a className that is applied to the root <nav> component for the\n<Tabs>",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "customTabContent": {
            "control": { "type": "boolean" },
            "name": "customTabContent",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Provide a customTabContent by using independent action triggers\ninside the Tabs",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "disableAnimation": {
            "control": { "type": "boolean" },
            "name": "disableAnimation",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the animation should be used",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "inline": {
            "control": { "type": "boolean" },
            "name": "inline",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the Tabs are displayed inline",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "hidden": {
            "control": { "type": "boolean" },
            "name": "hidden",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the Tab content is hidden",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "role": {
            "control": { "type": "text" },
            "name": "role",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "By default, this value is \"navigation\". You can also provide an alternate\nrole if it makes sense from the accessibility-side",
            "defaultValue": "navigation",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "'navigation'" }
            }
          },
          "onClick": {
            "name": "onClick",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Optionally provide an `onClick` handler that is invoked when a <Tab> is\nclicked",
            "defaultValue": null,
            "sbType": { "name": "function" },
            "table": { "type": { "summary": "func" }, "defaultValue": null }
          },
          "onKeyDown": {
            "name": "onKeyDown",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Optionally provide an `onKeyDown` handler that is invoked when keyed\nnavigation is triggered",
            "defaultValue": null,
            "sbType": { "name": "function" },
            "table": { "type": { "summary": "func" }, "defaultValue": null }
          },
          "onSelectionChange": {
            "name": "onSelectionChange",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Provide an optional handler that is called whenever the selection\nchanges. This method is called with the index of the tab that was\nselected",
            "defaultValue": null,
            "sbType": { "name": "function" },
            "table": { "type": { "summary": "func" }, "defaultValue": null }
          },
          "triggerHref": {
            "control": { "type": "text" },
            "name": "triggerHref",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Provide a string that represents the `href` for the triggered <Tab>",
            "defaultValue": "#",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "'#'" }
            }
          },
          "selected": {
            "control": { "type": "number" },
            "name": "selected",
            "type": { "required": false, "name": "number" },
            "required": false,
            "description": "Optionally provide an index for the currently selected <Tab>",
            "defaultValue": 0,
            "sbType": { "name": "number" },
            "table": {
              "type": { "summary": "number" },
              "defaultValue": { "summary": "0" }
            }
          }
        },
        "initialArgs": {
          "ariaLabel": "listbox",
          "role": "navigation",
          "triggerHref": "#"
        }
      },
      "components-tag--regular": {
        "id": "components-tag--regular",
        "kind": "Components/Tag",
        "name": "Regular",
        "story": "Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\nYou can customize the content by using `BannerNavigation`.\n"
          },
          "storySource": { "source": "(args) => <Tag {...args}>Text</Tag>" },
          "__id": "components-tag--regular",
          "args": {},
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Provide content to be rendered inside of a <Tag>",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Provide a custom className that is applied to the containing <span>",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "type": {
              "control": {
                "type": "select",
                "options": [
                  "beta",
                  "custom",
                  "wfp",
                  "error",
                  "success",
                  "warning"
                ]
              },
              "name": "type",
              "type": {
                "required": false,
                "name": "enum",
                "value": [
                  "beta",
                  "custom",
                  "wfp",
                  "error",
                  "success",
                  "warning"
                ]
              },
              "required": false,
              "description": "Specify the type of the <Tag>",
              "defaultValue": "wfp",
              "sbType": {
                "name": "enum",
                "value": [
                  "beta",
                  "custom",
                  "wfp",
                  "error",
                  "success",
                  "warning"
                ]
              },
              "table": {
                "type": {
                  "summary": "\"beta\" | \"custom\" | \"wfp\" | \"error\" | \"success\" | \"warning\""
                },
                "defaultValue": { "summary": "'wfp'" }
              }
            }
          },
          "__isArgsStory": true
        },
        "args": { "type": "wfp" },
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Provide content to be rendered inside of a <Tag>",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Provide a custom className that is applied to the containing <span>",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "type": {
            "control": {
              "type": "select",
              "options": [
                "beta",
                "custom",
                "wfp",
                "error",
                "success",
                "warning"
              ]
            },
            "name": "type",
            "type": {
              "required": false,
              "name": "enum",
              "value": ["beta", "custom", "wfp", "error", "success", "warning"]
            },
            "required": false,
            "description": "Specify the type of the <Tag>",
            "defaultValue": "wfp",
            "sbType": {
              "name": "enum",
              "value": ["beta", "custom", "wfp", "error", "success", "warning"]
            },
            "table": {
              "type": {
                "summary": "\"beta\" | \"custom\" | \"wfp\" | \"error\" | \"success\" | \"warning\""
              },
              "defaultValue": { "summary": "'wfp'" }
            }
          }
        },
        "initialArgs": { "type": "wfp" }
      },
      "components-text--regular": {
        "id": "components-text--regular",
        "kind": "Components/Text",
        "name": "Regular",
        "story": "Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": { "source": "(args) => <Text {...args} />" },
          "__id": "components-text--regular",
          "args": { "children": "Content", "kind": "h1" },
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "children",
              "required": false,
              "description": "The Text content",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "kind": {
              "control": {
                "type": "select",
                "options": [
                  "h1",
                  "h2",
                  "h3",
                  "h4",
                  "h5",
                  "h6",
                  "title",
                  "subtitle",
                  "p",
                  "i",
                  "bold",
                  "strong",
                  "sup",
                  "a",
                  "code"
                ]
              },
              "type": {
                "name": "enum",
                "required": false,
                "value": [
                  "h1",
                  "h2",
                  "h3",
                  "h4",
                  "h5",
                  "h6",
                  "title",
                  "subtitle",
                  "p",
                  "i",
                  "bold",
                  "strong",
                  "sup",
                  "a",
                  "code"
                ]
              },
              "name": "kind",
              "required": false,
              "description": "Additional className for Story",
              "defaultValue": null,
              "sbType": {
                "name": "enum",
                "value": [
                  "h1",
                  "h2",
                  "h3",
                  "h4",
                  "h5",
                  "h6",
                  "title",
                  "subtitle",
                  "p",
                  "i",
                  "bold",
                  "strong",
                  "sup",
                  "a",
                  "code"
                ]
              },
              "table": {
                "type": {
                  "summary": "'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'title' | 'subtitle' | 'p' | 'i' | 'bold' | 'strong' | 'sup' | 'a' | 'code'"
                },
                "defaultValue": null
              }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Additional className for Story",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "spacingTop": {
              "control": {
                "type": "select",
                "options": [
                  "3xs",
                  "2xs",
                  "xs",
                  "md",
                  "lg",
                  "xl",
                  "2xl",
                  "3xl",
                  "4xl"
                ]
              },
              "name": "spacingTop",
              "type": {
                "required": false,
                "name": "enum",
                "value": [
                  "3xs",
                  "2xs",
                  "xs",
                  "md",
                  "lg",
                  "xl",
                  "2xl",
                  "3xl",
                  "4xl"
                ]
              },
              "required": false,
              "description": "Override spacing on top",
              "defaultValue": null,
              "sbType": {
                "name": "enum",
                "value": [
                  "3xs",
                  "2xs",
                  "xs",
                  "md",
                  "lg",
                  "xl",
                  "2xl",
                  "3xl",
                  "4xl"
                ]
              },
              "table": {
                "type": {
                  "summary": "'3xs' | '2xs' | 'xs' | 'md' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl'"
                },
                "defaultValue": null
              }
            },
            "spacingBottom": {
              "control": {
                "type": "select",
                "options": [
                  "3xs",
                  "2xs",
                  "xs",
                  "md",
                  "lg",
                  "xl",
                  "2xl",
                  "3xl",
                  "4xl"
                ]
              },
              "name": "spacingBottom",
              "type": {
                "required": false,
                "name": "enum",
                "value": [
                  "3xs",
                  "2xs",
                  "xs",
                  "md",
                  "lg",
                  "xl",
                  "2xl",
                  "3xl",
                  "4xl"
                ]
              },
              "required": false,
              "description": "Override spacing on bottom",
              "defaultValue": null,
              "sbType": {
                "name": "enum",
                "value": [
                  "3xs",
                  "2xs",
                  "xs",
                  "md",
                  "lg",
                  "xl",
                  "2xl",
                  "3xl",
                  "4xl"
                ]
              },
              "table": {
                "type": {
                  "summary": "'3xs' | '2xs' | 'xs' | 'md' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl'"
                },
                "defaultValue": null
              }
            }
          },
          "__isArgsStory": true
        },
        "args": { "children": "Content", "kind": "h1" },
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "children",
            "required": false,
            "description": "The Text content",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "kind": {
            "control": {
              "type": "select",
              "options": [
                "h1",
                "h2",
                "h3",
                "h4",
                "h5",
                "h6",
                "title",
                "subtitle",
                "p",
                "i",
                "bold",
                "strong",
                "sup",
                "a",
                "code"
              ]
            },
            "type": {
              "name": "enum",
              "required": false,
              "value": [
                "h1",
                "h2",
                "h3",
                "h4",
                "h5",
                "h6",
                "title",
                "subtitle",
                "p",
                "i",
                "bold",
                "strong",
                "sup",
                "a",
                "code"
              ]
            },
            "name": "kind",
            "required": false,
            "description": "Additional className for Story",
            "defaultValue": null,
            "sbType": {
              "name": "enum",
              "value": [
                "h1",
                "h2",
                "h3",
                "h4",
                "h5",
                "h6",
                "title",
                "subtitle",
                "p",
                "i",
                "bold",
                "strong",
                "sup",
                "a",
                "code"
              ]
            },
            "table": {
              "type": {
                "summary": "'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'title' | 'subtitle' | 'p' | 'i' | 'bold' | 'strong' | 'sup' | 'a' | 'code'"
              },
              "defaultValue": null
            }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Additional className for Story",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "spacingTop": {
            "control": {
              "type": "select",
              "options": [
                "3xs",
                "2xs",
                "xs",
                "md",
                "lg",
                "xl",
                "2xl",
                "3xl",
                "4xl"
              ]
            },
            "name": "spacingTop",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "3xs",
                "2xs",
                "xs",
                "md",
                "lg",
                "xl",
                "2xl",
                "3xl",
                "4xl"
              ]
            },
            "required": false,
            "description": "Override spacing on top",
            "defaultValue": null,
            "sbType": {
              "name": "enum",
              "value": [
                "3xs",
                "2xs",
                "xs",
                "md",
                "lg",
                "xl",
                "2xl",
                "3xl",
                "4xl"
              ]
            },
            "table": {
              "type": {
                "summary": "'3xs' | '2xs' | 'xs' | 'md' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl'"
              },
              "defaultValue": null
            }
          },
          "spacingBottom": {
            "control": {
              "type": "select",
              "options": [
                "3xs",
                "2xs",
                "xs",
                "md",
                "lg",
                "xl",
                "2xl",
                "3xl",
                "4xl"
              ]
            },
            "name": "spacingBottom",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "3xs",
                "2xs",
                "xs",
                "md",
                "lg",
                "xl",
                "2xl",
                "3xl",
                "4xl"
              ]
            },
            "required": false,
            "description": "Override spacing on bottom",
            "defaultValue": null,
            "sbType": {
              "name": "enum",
              "value": [
                "3xs",
                "2xs",
                "xs",
                "md",
                "lg",
                "xl",
                "2xl",
                "3xl",
                "4xl"
              ]
            },
            "table": {
              "type": {
                "summary": "'3xs' | '2xs' | 'xs' | 'md' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl'"
              },
              "defaultValue": null
            }
          }
        },
        "initialArgs": { "children": "Content", "kind": "h1" }
      },
      "components-text--all-text": {
        "id": "components-text--all-text",
        "kind": "Components/Text",
        "name": "All Text",
        "story": "All Text",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": {
            "source": "(args) => (\n  <>\n    {Object.keys(textLookup).map((e) => (\n      <Text kind={e}>{e}</Text>\n    ))}\n  </>\n)"
          },
          "__id": "components-text--all-text",
          "args": {},
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "The Text content",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Additional className for Story",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "kind": {
              "control": {
                "type": "select",
                "options": [
                  "h1",
                  "h2",
                  "h3",
                  "h4",
                  "h5",
                  "h6",
                  "title",
                  "subtitle",
                  "p",
                  "i",
                  "bold",
                  "strong",
                  "sup",
                  "a",
                  "code"
                ]
              },
              "name": "kind",
              "type": {
                "required": false,
                "name": "enum",
                "value": [
                  "h1",
                  "h2",
                  "h3",
                  "h4",
                  "h5",
                  "h6",
                  "title",
                  "subtitle",
                  "p",
                  "i",
                  "bold",
                  "strong",
                  "sup",
                  "a",
                  "code"
                ]
              },
              "required": false,
              "description": "Additional className for Story",
              "defaultValue": null,
              "sbType": {
                "name": "enum",
                "value": [
                  "h1",
                  "h2",
                  "h3",
                  "h4",
                  "h5",
                  "h6",
                  "title",
                  "subtitle",
                  "p",
                  "i",
                  "bold",
                  "strong",
                  "sup",
                  "a",
                  "code"
                ]
              },
              "table": {
                "type": {
                  "summary": "'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'title' | 'subtitle' | 'p' | 'i' | 'bold' | 'strong' | 'sup' | 'a' | 'code'"
                },
                "defaultValue": null
              }
            },
            "spacingTop": {
              "control": {
                "type": "select",
                "options": [
                  "3xs",
                  "2xs",
                  "xs",
                  "md",
                  "lg",
                  "xl",
                  "2xl",
                  "3xl",
                  "4xl"
                ]
              },
              "name": "spacingTop",
              "type": {
                "required": false,
                "name": "enum",
                "value": [
                  "3xs",
                  "2xs",
                  "xs",
                  "md",
                  "lg",
                  "xl",
                  "2xl",
                  "3xl",
                  "4xl"
                ]
              },
              "required": false,
              "description": "Override spacing on top",
              "defaultValue": null,
              "sbType": {
                "name": "enum",
                "value": [
                  "3xs",
                  "2xs",
                  "xs",
                  "md",
                  "lg",
                  "xl",
                  "2xl",
                  "3xl",
                  "4xl"
                ]
              },
              "table": {
                "type": {
                  "summary": "'3xs' | '2xs' | 'xs' | 'md' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl'"
                },
                "defaultValue": null
              }
            },
            "spacingBottom": {
              "control": {
                "type": "select",
                "options": [
                  "3xs",
                  "2xs",
                  "xs",
                  "md",
                  "lg",
                  "xl",
                  "2xl",
                  "3xl",
                  "4xl"
                ]
              },
              "name": "spacingBottom",
              "type": {
                "required": false,
                "name": "enum",
                "value": [
                  "3xs",
                  "2xs",
                  "xs",
                  "md",
                  "lg",
                  "xl",
                  "2xl",
                  "3xl",
                  "4xl"
                ]
              },
              "required": false,
              "description": "Override spacing on bottom",
              "defaultValue": null,
              "sbType": {
                "name": "enum",
                "value": [
                  "3xs",
                  "2xs",
                  "xs",
                  "md",
                  "lg",
                  "xl",
                  "2xl",
                  "3xl",
                  "4xl"
                ]
              },
              "table": {
                "type": {
                  "summary": "'3xs' | '2xs' | 'xs' | 'md' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl'"
                },
                "defaultValue": null
              }
            }
          },
          "__isArgsStory": true
        },
        "args": {},
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "The Text content",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Additional className for Story",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "kind": {
            "control": {
              "type": "select",
              "options": [
                "h1",
                "h2",
                "h3",
                "h4",
                "h5",
                "h6",
                "title",
                "subtitle",
                "p",
                "i",
                "bold",
                "strong",
                "sup",
                "a",
                "code"
              ]
            },
            "name": "kind",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "h1",
                "h2",
                "h3",
                "h4",
                "h5",
                "h6",
                "title",
                "subtitle",
                "p",
                "i",
                "bold",
                "strong",
                "sup",
                "a",
                "code"
              ]
            },
            "required": false,
            "description": "Additional className for Story",
            "defaultValue": null,
            "sbType": {
              "name": "enum",
              "value": [
                "h1",
                "h2",
                "h3",
                "h4",
                "h5",
                "h6",
                "title",
                "subtitle",
                "p",
                "i",
                "bold",
                "strong",
                "sup",
                "a",
                "code"
              ]
            },
            "table": {
              "type": {
                "summary": "'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'title' | 'subtitle' | 'p' | 'i' | 'bold' | 'strong' | 'sup' | 'a' | 'code'"
              },
              "defaultValue": null
            }
          },
          "spacingTop": {
            "control": {
              "type": "select",
              "options": [
                "3xs",
                "2xs",
                "xs",
                "md",
                "lg",
                "xl",
                "2xl",
                "3xl",
                "4xl"
              ]
            },
            "name": "spacingTop",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "3xs",
                "2xs",
                "xs",
                "md",
                "lg",
                "xl",
                "2xl",
                "3xl",
                "4xl"
              ]
            },
            "required": false,
            "description": "Override spacing on top",
            "defaultValue": null,
            "sbType": {
              "name": "enum",
              "value": [
                "3xs",
                "2xs",
                "xs",
                "md",
                "lg",
                "xl",
                "2xl",
                "3xl",
                "4xl"
              ]
            },
            "table": {
              "type": {
                "summary": "'3xs' | '2xs' | 'xs' | 'md' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl'"
              },
              "defaultValue": null
            }
          },
          "spacingBottom": {
            "control": {
              "type": "select",
              "options": [
                "3xs",
                "2xs",
                "xs",
                "md",
                "lg",
                "xl",
                "2xl",
                "3xl",
                "4xl"
              ]
            },
            "name": "spacingBottom",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "3xs",
                "2xs",
                "xs",
                "md",
                "lg",
                "xl",
                "2xl",
                "3xl",
                "4xl"
              ]
            },
            "required": false,
            "description": "Override spacing on bottom",
            "defaultValue": null,
            "sbType": {
              "name": "enum",
              "value": [
                "3xs",
                "2xs",
                "xs",
                "md",
                "lg",
                "xl",
                "2xl",
                "3xl",
                "4xl"
              ]
            },
            "table": {
              "type": {
                "summary": "'3xs' | '2xs' | 'xs' | 'md' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl'"
              },
              "defaultValue": null
            }
          }
        },
        "initialArgs": {}
      },
      "forms-textarea--regular": {
        "id": "forms-textarea--regular",
        "kind": "Forms/TextArea",
        "name": "Regular",
        "story": "Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": { "source": "(args) => <TextArea {...args} />" },
          "__id": "forms-textarea--regular",
          "args": {
            "name": "inputname",
            "helperText": "Optional helperText",
            "labelText": "The labelText"
          },
          "argTypes": {
            "name": {
              "control": { "type": "text" },
              "type": { "name": "string" },
              "name": "name"
            },
            "helperText": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "helperText",
              "required": false,
              "description": "Provide text that is used alongside the control label for additional help",
              "defaultValue": "",
              "sbType": { "name": "other", "value": "node" },
              "table": {
                "type": { "summary": "node" },
                "defaultValue": { "summary": "''" }
              }
            },
            "labelText": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": true, "value": "node" },
              "name": "labelText",
              "required": true,
              "description": "Provide the text that will be read by a screen reader when visiting this\ncontrol",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Provide a custom className that is applied directly to the underlying\n&lt;textarea&gt; node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "cols": {
              "control": { "type": "number" },
              "name": "cols",
              "type": { "required": false, "name": "number" },
              "required": false,
              "description": "Specify the `cols` attribute for the underlying &lt;textarea&gt; node",
              "defaultValue": 50,
              "sbType": { "name": "number" },
              "table": {
                "type": { "summary": "number" },
                "defaultValue": { "summary": "50" }
              }
            },
            "defaultValue": {
              "control": { "type": "object" },
              "name": "defaultValue",
              "type": {
                "required": false,
                "name": "union",
                "value": [{ "name": "string" }, { "name": "number" }]
              },
              "required": false,
              "description": "Optionally provide the default value of the &lt;textarea&gt;",
              "defaultValue": null,
              "sbType": {
                "name": "union",
                "value": [{ "name": "string" }, { "name": "number" }]
              },
              "table": {
                "type": { "summary": "string | number" },
                "defaultValue": null
              }
            },
            "disabled": {
              "control": { "type": "boolean" },
              "name": "disabled",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the control is disabled",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "id": {
              "control": { "type": "text" },
              "name": "id",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Provide a unique identifier for the control",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "onChange": {
              "name": "onChange",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Optionally provide an `onChange` handler that is called whenever &lt;textarea&gt;\nis updated",
              "sbType": { "name": "function" },
              "table": {
                "type": { "summary": "func" },
                "defaultValue": { "summary": "() => {}" }
              }
            },
            "onClick": {
              "name": "onClick",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Optionally provide an `onClick` handler that is called whenever the\n&lt;textarea&gt; is clicked",
              "sbType": { "name": "function" },
              "table": {
                "type": { "summary": "func" },
                "defaultValue": { "summary": "() => {}" }
              }
            },
            "placeholder": {
              "control": { "type": "text" },
              "name": "placeholder",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify the placeholder attribute for the &lt;textarea&gt;",
              "defaultValue": "",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "''" }
              }
            },
            "rows": {
              "control": { "type": "number" },
              "name": "rows",
              "type": { "required": false, "name": "number" },
              "required": false,
              "description": "Specify the rows attribute for the &lt;textarea&gt;",
              "defaultValue": 4,
              "sbType": { "name": "number" },
              "table": {
                "type": { "summary": "number" },
                "defaultValue": { "summary": "4" }
              }
            },
            "value": {
              "control": { "type": "object" },
              "name": "value",
              "type": {
                "required": false,
                "name": "union",
                "value": [{ "name": "string" }, { "name": "number" }]
              },
              "required": false,
              "description": "Provide the current value of the &lt;textarea&gt;",
              "defaultValue": null,
              "sbType": {
                "name": "union",
                "value": [{ "name": "string" }, { "name": "number" }]
              },
              "table": {
                "type": { "summary": "string | number" },
                "defaultValue": null
              }
            },
            "invalid": {
              "control": { "type": "boolean" },
              "name": "invalid",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the control is currently invalid",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "invalidText": {
              "control": { "type": "text" },
              "name": "invalidText",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Provide the text that is displayed when the control is in an invalid state",
              "defaultValue": "",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "''" }
              }
            },
            "hideLabel": {
              "control": { "type": "boolean" },
              "name": "hideLabel",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether you want the underlying label to be visually hidden",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "light": {
              "control": { "type": "boolean" },
              "name": "light",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether you want the light version of this control",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "cols": 50,
          "rows": 4,
          "name": "inputname",
          "helperText": "Optional helperText",
          "labelText": "The labelText"
        },
        "argTypes": {
          "name": {
            "control": { "type": "text" },
            "type": { "name": "string" },
            "name": "name"
          },
          "helperText": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "helperText",
            "required": false,
            "description": "Provide text that is used alongside the control label for additional help",
            "defaultValue": "",
            "sbType": { "name": "other", "value": "node" },
            "table": {
              "type": { "summary": "node" },
              "defaultValue": { "summary": "''" }
            }
          },
          "labelText": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": true, "value": "node" },
            "name": "labelText",
            "required": true,
            "description": "Provide the text that will be read by a screen reader when visiting this\ncontrol",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Provide a custom className that is applied directly to the underlying\n&lt;textarea&gt; node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "cols": {
            "control": { "type": "number" },
            "name": "cols",
            "type": { "required": false, "name": "number" },
            "required": false,
            "description": "Specify the `cols` attribute for the underlying &lt;textarea&gt; node",
            "defaultValue": 50,
            "sbType": { "name": "number" },
            "table": {
              "type": { "summary": "number" },
              "defaultValue": { "summary": "50" }
            }
          },
          "defaultValue": {
            "control": { "type": "object" },
            "name": "defaultValue",
            "type": {
              "required": false,
              "name": "union",
              "value": [{ "name": "string" }, { "name": "number" }]
            },
            "required": false,
            "description": "Optionally provide the default value of the &lt;textarea&gt;",
            "defaultValue": null,
            "sbType": {
              "name": "union",
              "value": [{ "name": "string" }, { "name": "number" }]
            },
            "table": {
              "type": { "summary": "string | number" },
              "defaultValue": null
            }
          },
          "disabled": {
            "control": { "type": "boolean" },
            "name": "disabled",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the control is disabled",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "id": {
            "control": { "type": "text" },
            "name": "id",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Provide a unique identifier for the control",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "onChange": {
            "name": "onChange",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Optionally provide an `onChange` handler that is called whenever &lt;textarea&gt;\nis updated",
            "sbType": { "name": "function" },
            "table": {
              "type": { "summary": "func" },
              "defaultValue": { "summary": "() => {}" }
            }
          },
          "onClick": {
            "name": "onClick",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Optionally provide an `onClick` handler that is called whenever the\n&lt;textarea&gt; is clicked",
            "sbType": { "name": "function" },
            "table": {
              "type": { "summary": "func" },
              "defaultValue": { "summary": "() => {}" }
            }
          },
          "placeholder": {
            "control": { "type": "text" },
            "name": "placeholder",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify the placeholder attribute for the &lt;textarea&gt;",
            "defaultValue": "",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "''" }
            }
          },
          "rows": {
            "control": { "type": "number" },
            "name": "rows",
            "type": { "required": false, "name": "number" },
            "required": false,
            "description": "Specify the rows attribute for the &lt;textarea&gt;",
            "defaultValue": 4,
            "sbType": { "name": "number" },
            "table": {
              "type": { "summary": "number" },
              "defaultValue": { "summary": "4" }
            }
          },
          "value": {
            "control": { "type": "object" },
            "name": "value",
            "type": {
              "required": false,
              "name": "union",
              "value": [{ "name": "string" }, { "name": "number" }]
            },
            "required": false,
            "description": "Provide the current value of the &lt;textarea&gt;",
            "defaultValue": null,
            "sbType": {
              "name": "union",
              "value": [{ "name": "string" }, { "name": "number" }]
            },
            "table": {
              "type": { "summary": "string | number" },
              "defaultValue": null
            }
          },
          "invalid": {
            "control": { "type": "boolean" },
            "name": "invalid",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the control is currently invalid",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "invalidText": {
            "control": { "type": "text" },
            "name": "invalidText",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Provide the text that is displayed when the control is in an invalid state",
            "defaultValue": "",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "''" }
            }
          },
          "hideLabel": {
            "control": { "type": "boolean" },
            "name": "hideLabel",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether you want the underlying label to be visually hidden",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "light": {
            "control": { "type": "boolean" },
            "name": "light",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether you want the light version of this control",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          }
        },
        "initialArgs": {
          "cols": 50,
          "rows": 4,
          "name": "inputname",
          "helperText": "Optional helperText",
          "labelText": "The labelText"
        }
      },
      "forms-textarea--with-error": {
        "id": "forms-textarea--with-error",
        "kind": "Forms/TextArea",
        "name": "With Error",
        "story": "With Error",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\nYou can customize the content by using `BannerNavigation`.\n"
          },
          "storySource": { "source": "(args) => <TextArea {...args} />" },
          "__id": "forms-textarea--with-error",
          "args": {
            "name": "inputname",
            "helperText": "Optional helperText",
            "labelText": "The labelText",
            "invalid": { "message": "Please enter your first name" }
          },
          "argTypes": {
            "name": {
              "control": { "type": "text" },
              "type": { "name": "string" },
              "name": "name"
            },
            "helperText": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "helperText",
              "required": false,
              "description": "Provide text that is used alongside the control label for additional help",
              "defaultValue": "",
              "sbType": { "name": "other", "value": "node" },
              "table": {
                "type": { "summary": "node" },
                "defaultValue": { "summary": "''" }
              }
            },
            "labelText": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": true, "value": "node" },
              "name": "labelText",
              "required": true,
              "description": "Provide the text that will be read by a screen reader when visiting this\ncontrol",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "invalid": {
              "control": { "type": "boolean" },
              "type": {
                "name": "boolean",
                "value": { "message": { "name": "string" } },
                "required": false
              },
              "name": "invalid",
              "required": false,
              "description": "Specify whether the control is currently invalid",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Provide a custom className that is applied directly to the underlying\n&lt;textarea&gt; node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "cols": {
              "control": { "type": "number" },
              "name": "cols",
              "type": { "required": false, "name": "number" },
              "required": false,
              "description": "Specify the `cols` attribute for the underlying &lt;textarea&gt; node",
              "defaultValue": 50,
              "sbType": { "name": "number" },
              "table": {
                "type": { "summary": "number" },
                "defaultValue": { "summary": "50" }
              }
            },
            "defaultValue": {
              "control": { "type": "object" },
              "name": "defaultValue",
              "type": {
                "required": false,
                "name": "union",
                "value": [{ "name": "string" }, { "name": "number" }]
              },
              "required": false,
              "description": "Optionally provide the default value of the &lt;textarea&gt;",
              "defaultValue": null,
              "sbType": {
                "name": "union",
                "value": [{ "name": "string" }, { "name": "number" }]
              },
              "table": {
                "type": { "summary": "string | number" },
                "defaultValue": null
              }
            },
            "disabled": {
              "control": { "type": "boolean" },
              "name": "disabled",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the control is disabled",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "id": {
              "control": { "type": "text" },
              "name": "id",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Provide a unique identifier for the control",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "onChange": {
              "name": "onChange",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Optionally provide an `onChange` handler that is called whenever &lt;textarea&gt;\nis updated",
              "sbType": { "name": "function" },
              "table": {
                "type": { "summary": "func" },
                "defaultValue": { "summary": "() => {}" }
              }
            },
            "onClick": {
              "name": "onClick",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Optionally provide an `onClick` handler that is called whenever the\n&lt;textarea&gt; is clicked",
              "sbType": { "name": "function" },
              "table": {
                "type": { "summary": "func" },
                "defaultValue": { "summary": "() => {}" }
              }
            },
            "placeholder": {
              "control": { "type": "text" },
              "name": "placeholder",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify the placeholder attribute for the &lt;textarea&gt;",
              "defaultValue": "",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "''" }
              }
            },
            "rows": {
              "control": { "type": "number" },
              "name": "rows",
              "type": { "required": false, "name": "number" },
              "required": false,
              "description": "Specify the rows attribute for the &lt;textarea&gt;",
              "defaultValue": 4,
              "sbType": { "name": "number" },
              "table": {
                "type": { "summary": "number" },
                "defaultValue": { "summary": "4" }
              }
            },
            "value": {
              "control": { "type": "object" },
              "name": "value",
              "type": {
                "required": false,
                "name": "union",
                "value": [{ "name": "string" }, { "name": "number" }]
              },
              "required": false,
              "description": "Provide the current value of the &lt;textarea&gt;",
              "defaultValue": null,
              "sbType": {
                "name": "union",
                "value": [{ "name": "string" }, { "name": "number" }]
              },
              "table": {
                "type": { "summary": "string | number" },
                "defaultValue": null
              }
            },
            "invalidText": {
              "control": { "type": "text" },
              "name": "invalidText",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Provide the text that is displayed when the control is in an invalid state",
              "defaultValue": "",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "''" }
              }
            },
            "hideLabel": {
              "control": { "type": "boolean" },
              "name": "hideLabel",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether you want the underlying label to be visually hidden",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "light": {
              "control": { "type": "boolean" },
              "name": "light",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether you want the light version of this control",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "cols": 50,
          "rows": 4,
          "name": "inputname",
          "helperText": "Optional helperText",
          "labelText": "The labelText",
          "invalid": { "message": "Please enter your first name" }
        },
        "argTypes": {
          "name": {
            "control": { "type": "text" },
            "type": { "name": "string" },
            "name": "name"
          },
          "helperText": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "helperText",
            "required": false,
            "description": "Provide text that is used alongside the control label for additional help",
            "defaultValue": "",
            "sbType": { "name": "other", "value": "node" },
            "table": {
              "type": { "summary": "node" },
              "defaultValue": { "summary": "''" }
            }
          },
          "labelText": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": true, "value": "node" },
            "name": "labelText",
            "required": true,
            "description": "Provide the text that will be read by a screen reader when visiting this\ncontrol",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "invalid": {
            "control": { "type": "boolean" },
            "type": {
              "name": "boolean",
              "value": { "message": { "name": "string" } },
              "required": false
            },
            "name": "invalid",
            "required": false,
            "description": "Specify whether the control is currently invalid",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Provide a custom className that is applied directly to the underlying\n&lt;textarea&gt; node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "cols": {
            "control": { "type": "number" },
            "name": "cols",
            "type": { "required": false, "name": "number" },
            "required": false,
            "description": "Specify the `cols` attribute for the underlying &lt;textarea&gt; node",
            "defaultValue": 50,
            "sbType": { "name": "number" },
            "table": {
              "type": { "summary": "number" },
              "defaultValue": { "summary": "50" }
            }
          },
          "defaultValue": {
            "control": { "type": "object" },
            "name": "defaultValue",
            "type": {
              "required": false,
              "name": "union",
              "value": [{ "name": "string" }, { "name": "number" }]
            },
            "required": false,
            "description": "Optionally provide the default value of the &lt;textarea&gt;",
            "defaultValue": null,
            "sbType": {
              "name": "union",
              "value": [{ "name": "string" }, { "name": "number" }]
            },
            "table": {
              "type": { "summary": "string | number" },
              "defaultValue": null
            }
          },
          "disabled": {
            "control": { "type": "boolean" },
            "name": "disabled",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the control is disabled",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "id": {
            "control": { "type": "text" },
            "name": "id",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Provide a unique identifier for the control",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "onChange": {
            "name": "onChange",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Optionally provide an `onChange` handler that is called whenever &lt;textarea&gt;\nis updated",
            "sbType": { "name": "function" },
            "table": {
              "type": { "summary": "func" },
              "defaultValue": { "summary": "() => {}" }
            }
          },
          "onClick": {
            "name": "onClick",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Optionally provide an `onClick` handler that is called whenever the\n&lt;textarea&gt; is clicked",
            "sbType": { "name": "function" },
            "table": {
              "type": { "summary": "func" },
              "defaultValue": { "summary": "() => {}" }
            }
          },
          "placeholder": {
            "control": { "type": "text" },
            "name": "placeholder",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify the placeholder attribute for the &lt;textarea&gt;",
            "defaultValue": "",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "''" }
            }
          },
          "rows": {
            "control": { "type": "number" },
            "name": "rows",
            "type": { "required": false, "name": "number" },
            "required": false,
            "description": "Specify the rows attribute for the &lt;textarea&gt;",
            "defaultValue": 4,
            "sbType": { "name": "number" },
            "table": {
              "type": { "summary": "number" },
              "defaultValue": { "summary": "4" }
            }
          },
          "value": {
            "control": { "type": "object" },
            "name": "value",
            "type": {
              "required": false,
              "name": "union",
              "value": [{ "name": "string" }, { "name": "number" }]
            },
            "required": false,
            "description": "Provide the current value of the &lt;textarea&gt;",
            "defaultValue": null,
            "sbType": {
              "name": "union",
              "value": [{ "name": "string" }, { "name": "number" }]
            },
            "table": {
              "type": { "summary": "string | number" },
              "defaultValue": null
            }
          },
          "invalidText": {
            "control": { "type": "text" },
            "name": "invalidText",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Provide the text that is displayed when the control is in an invalid state",
            "defaultValue": "",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "''" }
            }
          },
          "hideLabel": {
            "control": { "type": "boolean" },
            "name": "hideLabel",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether you want the underlying label to be visually hidden",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "light": {
            "control": { "type": "boolean" },
            "name": "light",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether you want the light version of this control",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          }
        },
        "initialArgs": {
          "cols": 50,
          "rows": 4,
          "name": "inputname",
          "helperText": "Optional helperText",
          "labelText": "The labelText",
          "invalid": { "message": "Please enter your first name" }
        }
      },
      "forms-textinput--regular": {
        "id": "forms-textinput--regular",
        "kind": "Forms/TextInput",
        "name": "Regular",
        "story": "Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": { "source": "(args) => <TextInput {...args} />" },
          "__id": "forms-textinput--regular",
          "args": {
            "name": "inputname",
            "helperText": "Optional helperText",
            "labelText": "The labelText"
          },
          "argTypes": {
            "name": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": true },
              "name": "name",
              "required": true,
              "description": "Specify a custom `name` for the &lt;input&gt;",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "helperText": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "helperText",
              "required": false,
              "description": "Provide text that is used alongside the control label for additional help",
              "defaultValue": "",
              "sbType": { "name": "other", "value": "node" },
              "table": {
                "type": { "summary": "node" },
                "defaultValue": { "summary": "''" }
              }
            },
            "labelText": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "labelText",
              "required": false,
              "description": "Provide the text that will be read by a screen reader when visiting this\ncontrol",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify an optional className to be applied to the &lt;input&gt; node",
              "defaultValue": "wfp--text__input",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "'wfp--text__input'" }
              }
            },
            "defaultValue": {
              "control": { "type": "object" },
              "name": "defaultValue",
              "type": {
                "required": false,
                "name": "union",
                "value": [{ "name": "string" }, { "name": "number" }]
              },
              "required": false,
              "description": "Optionally provide the default value of the &lt;input&gt;",
              "defaultValue": null,
              "sbType": {
                "name": "union",
                "value": [{ "name": "string" }, { "name": "number" }]
              },
              "table": {
                "type": { "summary": "string | number" },
                "defaultValue": null
              }
            },
            "disabled": {
              "control": { "type": "boolean" },
              "name": "disabled",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the &lt;input&gt; should be disabled",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "formItemClassName": {
              "control": { "type": "text" },
              "name": "formItemClassName",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify an optional className to be applied to the form-item node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "id": {
              "control": { "type": "text" },
              "name": "id",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify a custom `id` for the &lt;input&gt;",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "onChange": {
              "name": "onChange",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Optionally provide an `onChange` handler that is called whenever &lt;input&gt;\nis updated",
              "sbType": { "name": "function" },
              "table": {
                "type": { "summary": "func" },
                "defaultValue": { "summary": "() => {}" }
              }
            },
            "onClick": {
              "name": "onClick",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Optionally provide an `onClick` handler that is called whenever the\n&lt;input&gt; is clicked",
              "sbType": { "name": "function" },
              "table": {
                "type": { "summary": "func" },
                "defaultValue": { "summary": "() => {}" }
              }
            },
            "placeholder": {
              "control": { "type": "text" },
              "name": "placeholder",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify the placeholder attribute for the &lt;input&gt;",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "type": {
              "control": { "type": "text" },
              "name": "type",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify the type of the &lt;input&gt;",
              "defaultValue": "text",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "'text'" }
              }
            },
            "value": {
              "control": { "type": "object" },
              "name": "value",
              "type": {
                "required": false,
                "name": "union",
                "value": [{ "name": "string" }, { "name": "number" }]
              },
              "required": false,
              "description": "Specify the value of the &lt;input&gt;",
              "defaultValue": null,
              "sbType": {
                "name": "union",
                "value": [{ "name": "string" }, { "name": "number" }]
              },
              "table": {
                "type": { "summary": "string | number" },
                "defaultValue": null
              }
            },
            "hideLabel": {
              "control": { "type": "boolean" },
              "name": "hideLabel",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether you want the underlying label to be visually hidden",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "invalid": {
              "control": { "type": "boolean" },
              "name": "invalid",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the control is currently invalid",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "invalidText": {
              "control": { "type": "text" },
              "name": "invalidText",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Provide the text that is displayed when the control is in an invalid state",
              "defaultValue": "",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "''" }
              }
            },
            "additional": {
              "control": { "type": "object" },
              "name": "additional",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Provide additional component that is used alongside the input for customization",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "light": {
              "control": { "type": "boolean" },
              "name": "light",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "`true` to use the light version.",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "className": "wfp--text__input",
          "type": "text",
          "name": "inputname",
          "helperText": "Optional helperText",
          "labelText": "The labelText"
        },
        "argTypes": {
          "name": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": true },
            "name": "name",
            "required": true,
            "description": "Specify a custom `name` for the &lt;input&gt;",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "helperText": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "helperText",
            "required": false,
            "description": "Provide text that is used alongside the control label for additional help",
            "defaultValue": "",
            "sbType": { "name": "other", "value": "node" },
            "table": {
              "type": { "summary": "node" },
              "defaultValue": { "summary": "''" }
            }
          },
          "labelText": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "labelText",
            "required": false,
            "description": "Provide the text that will be read by a screen reader when visiting this\ncontrol",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify an optional className to be applied to the &lt;input&gt; node",
            "defaultValue": "wfp--text__input",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "'wfp--text__input'" }
            }
          },
          "defaultValue": {
            "control": { "type": "object" },
            "name": "defaultValue",
            "type": {
              "required": false,
              "name": "union",
              "value": [{ "name": "string" }, { "name": "number" }]
            },
            "required": false,
            "description": "Optionally provide the default value of the &lt;input&gt;",
            "defaultValue": null,
            "sbType": {
              "name": "union",
              "value": [{ "name": "string" }, { "name": "number" }]
            },
            "table": {
              "type": { "summary": "string | number" },
              "defaultValue": null
            }
          },
          "disabled": {
            "control": { "type": "boolean" },
            "name": "disabled",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the &lt;input&gt; should be disabled",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "formItemClassName": {
            "control": { "type": "text" },
            "name": "formItemClassName",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify an optional className to be applied to the form-item node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "id": {
            "control": { "type": "text" },
            "name": "id",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify a custom `id` for the &lt;input&gt;",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "onChange": {
            "name": "onChange",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Optionally provide an `onChange` handler that is called whenever &lt;input&gt;\nis updated",
            "sbType": { "name": "function" },
            "table": {
              "type": { "summary": "func" },
              "defaultValue": { "summary": "() => {}" }
            }
          },
          "onClick": {
            "name": "onClick",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Optionally provide an `onClick` handler that is called whenever the\n&lt;input&gt; is clicked",
            "sbType": { "name": "function" },
            "table": {
              "type": { "summary": "func" },
              "defaultValue": { "summary": "() => {}" }
            }
          },
          "placeholder": {
            "control": { "type": "text" },
            "name": "placeholder",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify the placeholder attribute for the &lt;input&gt;",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "type": {
            "control": { "type": "text" },
            "name": "type",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify the type of the &lt;input&gt;",
            "defaultValue": "text",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "'text'" }
            }
          },
          "value": {
            "control": { "type": "object" },
            "name": "value",
            "type": {
              "required": false,
              "name": "union",
              "value": [{ "name": "string" }, { "name": "number" }]
            },
            "required": false,
            "description": "Specify the value of the &lt;input&gt;",
            "defaultValue": null,
            "sbType": {
              "name": "union",
              "value": [{ "name": "string" }, { "name": "number" }]
            },
            "table": {
              "type": { "summary": "string | number" },
              "defaultValue": null
            }
          },
          "hideLabel": {
            "control": { "type": "boolean" },
            "name": "hideLabel",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether you want the underlying label to be visually hidden",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "invalid": {
            "control": { "type": "boolean" },
            "name": "invalid",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the control is currently invalid",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "invalidText": {
            "control": { "type": "text" },
            "name": "invalidText",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Provide the text that is displayed when the control is in an invalid state",
            "defaultValue": "",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "''" }
            }
          },
          "additional": {
            "control": { "type": "object" },
            "name": "additional",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Provide additional component that is used alongside the input for customization",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "light": {
            "control": { "type": "boolean" },
            "name": "light",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "`true` to use the light version.",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          }
        },
        "initialArgs": {
          "className": "wfp--text__input",
          "type": "text",
          "name": "inputname",
          "helperText": "Optional helperText",
          "labelText": "The labelText"
        }
      },
      "forms-textinput--with-error": {
        "id": "forms-textinput--with-error",
        "kind": "Forms/TextInput",
        "name": "With Error",
        "story": "With Error",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\nYou can customize the content by using `BannerNavigation`.\n"
          },
          "storySource": { "source": "(args) => <TextInput {...args} />" },
          "__id": "forms-textinput--with-error",
          "args": {
            "name": "inputname",
            "helperText": "Optional helperText",
            "labelText": "The labelText",
            "invalid": { "message": "Please enter your first name" }
          },
          "argTypes": {
            "name": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": true },
              "name": "name",
              "required": true,
              "description": "Specify a custom `name` for the &lt;input&gt;",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "helperText": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "helperText",
              "required": false,
              "description": "Provide text that is used alongside the control label for additional help",
              "defaultValue": "",
              "sbType": { "name": "other", "value": "node" },
              "table": {
                "type": { "summary": "node" },
                "defaultValue": { "summary": "''" }
              }
            },
            "labelText": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "labelText",
              "required": false,
              "description": "Provide the text that will be read by a screen reader when visiting this\ncontrol",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "invalid": {
              "control": { "type": "boolean" },
              "type": {
                "name": "boolean",
                "value": { "message": { "name": "string" } },
                "required": false
              },
              "name": "invalid",
              "required": false,
              "description": "Specify whether the control is currently invalid",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify an optional className to be applied to the &lt;input&gt; node",
              "defaultValue": "wfp--text__input",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "'wfp--text__input'" }
              }
            },
            "defaultValue": {
              "control": { "type": "object" },
              "name": "defaultValue",
              "type": {
                "required": false,
                "name": "union",
                "value": [{ "name": "string" }, { "name": "number" }]
              },
              "required": false,
              "description": "Optionally provide the default value of the &lt;input&gt;",
              "defaultValue": null,
              "sbType": {
                "name": "union",
                "value": [{ "name": "string" }, { "name": "number" }]
              },
              "table": {
                "type": { "summary": "string | number" },
                "defaultValue": null
              }
            },
            "disabled": {
              "control": { "type": "boolean" },
              "name": "disabled",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the &lt;input&gt; should be disabled",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "formItemClassName": {
              "control": { "type": "text" },
              "name": "formItemClassName",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify an optional className to be applied to the form-item node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "id": {
              "control": { "type": "text" },
              "name": "id",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify a custom `id` for the &lt;input&gt;",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "onChange": {
              "name": "onChange",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Optionally provide an `onChange` handler that is called whenever &lt;input&gt;\nis updated",
              "sbType": { "name": "function" },
              "table": {
                "type": { "summary": "func" },
                "defaultValue": { "summary": "() => {}" }
              }
            },
            "onClick": {
              "name": "onClick",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Optionally provide an `onClick` handler that is called whenever the\n&lt;input&gt; is clicked",
              "sbType": { "name": "function" },
              "table": {
                "type": { "summary": "func" },
                "defaultValue": { "summary": "() => {}" }
              }
            },
            "placeholder": {
              "control": { "type": "text" },
              "name": "placeholder",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify the placeholder attribute for the &lt;input&gt;",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "type": {
              "control": { "type": "text" },
              "name": "type",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify the type of the &lt;input&gt;",
              "defaultValue": "text",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "'text'" }
              }
            },
            "value": {
              "control": { "type": "object" },
              "name": "value",
              "type": {
                "required": false,
                "name": "union",
                "value": [{ "name": "string" }, { "name": "number" }]
              },
              "required": false,
              "description": "Specify the value of the &lt;input&gt;",
              "defaultValue": null,
              "sbType": {
                "name": "union",
                "value": [{ "name": "string" }, { "name": "number" }]
              },
              "table": {
                "type": { "summary": "string | number" },
                "defaultValue": null
              }
            },
            "hideLabel": {
              "control": { "type": "boolean" },
              "name": "hideLabel",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether you want the underlying label to be visually hidden",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "invalidText": {
              "control": { "type": "text" },
              "name": "invalidText",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Provide the text that is displayed when the control is in an invalid state",
              "defaultValue": "",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "''" }
              }
            },
            "additional": {
              "control": { "type": "object" },
              "name": "additional",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Provide additional component that is used alongside the input for customization",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "light": {
              "control": { "type": "boolean" },
              "name": "light",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "`true` to use the light version.",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "className": "wfp--text__input",
          "type": "text",
          "name": "inputname",
          "helperText": "Optional helperText",
          "labelText": "The labelText",
          "invalid": { "message": "Please enter your first name" }
        },
        "argTypes": {
          "name": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": true },
            "name": "name",
            "required": true,
            "description": "Specify a custom `name` for the &lt;input&gt;",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "helperText": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "helperText",
            "required": false,
            "description": "Provide text that is used alongside the control label for additional help",
            "defaultValue": "",
            "sbType": { "name": "other", "value": "node" },
            "table": {
              "type": { "summary": "node" },
              "defaultValue": { "summary": "''" }
            }
          },
          "labelText": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "labelText",
            "required": false,
            "description": "Provide the text that will be read by a screen reader when visiting this\ncontrol",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "invalid": {
            "control": { "type": "boolean" },
            "type": {
              "name": "boolean",
              "value": { "message": { "name": "string" } },
              "required": false
            },
            "name": "invalid",
            "required": false,
            "description": "Specify whether the control is currently invalid",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify an optional className to be applied to the &lt;input&gt; node",
            "defaultValue": "wfp--text__input",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "'wfp--text__input'" }
            }
          },
          "defaultValue": {
            "control": { "type": "object" },
            "name": "defaultValue",
            "type": {
              "required": false,
              "name": "union",
              "value": [{ "name": "string" }, { "name": "number" }]
            },
            "required": false,
            "description": "Optionally provide the default value of the &lt;input&gt;",
            "defaultValue": null,
            "sbType": {
              "name": "union",
              "value": [{ "name": "string" }, { "name": "number" }]
            },
            "table": {
              "type": { "summary": "string | number" },
              "defaultValue": null
            }
          },
          "disabled": {
            "control": { "type": "boolean" },
            "name": "disabled",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the &lt;input&gt; should be disabled",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "formItemClassName": {
            "control": { "type": "text" },
            "name": "formItemClassName",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify an optional className to be applied to the form-item node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "id": {
            "control": { "type": "text" },
            "name": "id",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify a custom `id` for the &lt;input&gt;",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "onChange": {
            "name": "onChange",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Optionally provide an `onChange` handler that is called whenever &lt;input&gt;\nis updated",
            "sbType": { "name": "function" },
            "table": {
              "type": { "summary": "func" },
              "defaultValue": { "summary": "() => {}" }
            }
          },
          "onClick": {
            "name": "onClick",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Optionally provide an `onClick` handler that is called whenever the\n&lt;input&gt; is clicked",
            "sbType": { "name": "function" },
            "table": {
              "type": { "summary": "func" },
              "defaultValue": { "summary": "() => {}" }
            }
          },
          "placeholder": {
            "control": { "type": "text" },
            "name": "placeholder",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify the placeholder attribute for the &lt;input&gt;",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "type": {
            "control": { "type": "text" },
            "name": "type",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify the type of the &lt;input&gt;",
            "defaultValue": "text",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "'text'" }
            }
          },
          "value": {
            "control": { "type": "object" },
            "name": "value",
            "type": {
              "required": false,
              "name": "union",
              "value": [{ "name": "string" }, { "name": "number" }]
            },
            "required": false,
            "description": "Specify the value of the &lt;input&gt;",
            "defaultValue": null,
            "sbType": {
              "name": "union",
              "value": [{ "name": "string" }, { "name": "number" }]
            },
            "table": {
              "type": { "summary": "string | number" },
              "defaultValue": null
            }
          },
          "hideLabel": {
            "control": { "type": "boolean" },
            "name": "hideLabel",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether you want the underlying label to be visually hidden",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "invalidText": {
            "control": { "type": "text" },
            "name": "invalidText",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Provide the text that is displayed when the control is in an invalid state",
            "defaultValue": "",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "''" }
            }
          },
          "additional": {
            "control": { "type": "object" },
            "name": "additional",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Provide additional component that is used alongside the input for customization",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "light": {
            "control": { "type": "boolean" },
            "name": "light",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "`true` to use the light version.",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          }
        },
        "initialArgs": {
          "className": "wfp--text__input",
          "type": "text",
          "name": "inputname",
          "helperText": "Optional helperText",
          "labelText": "The labelText",
          "invalid": { "message": "Please enter your first name" }
        }
      },
      "forms-textinput--with-disabled": {
        "id": "forms-textinput--with-disabled",
        "kind": "Forms/TextInput",
        "name": "With Disabled",
        "story": "With Disabled",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\nYou can customize the content by using `BannerNavigation`.\n"
          },
          "storySource": { "source": "(args) => <TextInput {...args} />" },
          "__id": "forms-textinput--with-disabled",
          "args": {
            "name": "inputname",
            "helperText": "Optional helperText",
            "labelText": "Disabled labelText",
            "disabled": true
          },
          "argTypes": {
            "name": {
              "control": { "type": "text" },
              "type": { "name": "string", "required": true },
              "name": "name",
              "required": true,
              "description": "Specify a custom `name` for the &lt;input&gt;",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "helperText": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "helperText",
              "required": false,
              "description": "Provide text that is used alongside the control label for additional help",
              "defaultValue": "",
              "sbType": { "name": "other", "value": "node" },
              "table": {
                "type": { "summary": "node" },
                "defaultValue": { "summary": "''" }
              }
            },
            "labelText": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "labelText",
              "required": false,
              "description": "Provide the text that will be read by a screen reader when visiting this\ncontrol",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "disabled": {
              "control": { "type": "boolean" },
              "type": { "name": "boolean", "required": false },
              "name": "disabled",
              "required": false,
              "description": "Specify whether the &lt;input&gt; should be disabled",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify an optional className to be applied to the &lt;input&gt; node",
              "defaultValue": "wfp--text__input",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "'wfp--text__input'" }
              }
            },
            "defaultValue": {
              "control": { "type": "object" },
              "name": "defaultValue",
              "type": {
                "required": false,
                "name": "union",
                "value": [{ "name": "string" }, { "name": "number" }]
              },
              "required": false,
              "description": "Optionally provide the default value of the &lt;input&gt;",
              "defaultValue": null,
              "sbType": {
                "name": "union",
                "value": [{ "name": "string" }, { "name": "number" }]
              },
              "table": {
                "type": { "summary": "string | number" },
                "defaultValue": null
              }
            },
            "formItemClassName": {
              "control": { "type": "text" },
              "name": "formItemClassName",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify an optional className to be applied to the form-item node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "id": {
              "control": { "type": "text" },
              "name": "id",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify a custom `id` for the &lt;input&gt;",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "onChange": {
              "name": "onChange",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Optionally provide an `onChange` handler that is called whenever &lt;input&gt;\nis updated",
              "sbType": { "name": "function" },
              "table": {
                "type": { "summary": "func" },
                "defaultValue": { "summary": "() => {}" }
              }
            },
            "onClick": {
              "name": "onClick",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Optionally provide an `onClick` handler that is called whenever the\n&lt;input&gt; is clicked",
              "sbType": { "name": "function" },
              "table": {
                "type": { "summary": "func" },
                "defaultValue": { "summary": "() => {}" }
              }
            },
            "placeholder": {
              "control": { "type": "text" },
              "name": "placeholder",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify the placeholder attribute for the &lt;input&gt;",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "type": {
              "control": { "type": "text" },
              "name": "type",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify the type of the &lt;input&gt;",
              "defaultValue": "text",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "'text'" }
              }
            },
            "value": {
              "control": { "type": "object" },
              "name": "value",
              "type": {
                "required": false,
                "name": "union",
                "value": [{ "name": "string" }, { "name": "number" }]
              },
              "required": false,
              "description": "Specify the value of the &lt;input&gt;",
              "defaultValue": null,
              "sbType": {
                "name": "union",
                "value": [{ "name": "string" }, { "name": "number" }]
              },
              "table": {
                "type": { "summary": "string | number" },
                "defaultValue": null
              }
            },
            "hideLabel": {
              "control": { "type": "boolean" },
              "name": "hideLabel",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether you want the underlying label to be visually hidden",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "invalid": {
              "control": { "type": "boolean" },
              "name": "invalid",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the control is currently invalid",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "invalidText": {
              "control": { "type": "text" },
              "name": "invalidText",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Provide the text that is displayed when the control is in an invalid state",
              "defaultValue": "",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "''" }
              }
            },
            "additional": {
              "control": { "type": "object" },
              "name": "additional",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Provide additional component that is used alongside the input for customization",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "light": {
              "control": { "type": "boolean" },
              "name": "light",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "`true` to use the light version.",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "className": "wfp--text__input",
          "type": "text",
          "name": "inputname",
          "helperText": "Optional helperText",
          "labelText": "Disabled labelText",
          "disabled": true
        },
        "argTypes": {
          "name": {
            "control": { "type": "text" },
            "type": { "name": "string", "required": true },
            "name": "name",
            "required": true,
            "description": "Specify a custom `name` for the &lt;input&gt;",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "helperText": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "helperText",
            "required": false,
            "description": "Provide text that is used alongside the control label for additional help",
            "defaultValue": "",
            "sbType": { "name": "other", "value": "node" },
            "table": {
              "type": { "summary": "node" },
              "defaultValue": { "summary": "''" }
            }
          },
          "labelText": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "labelText",
            "required": false,
            "description": "Provide the text that will be read by a screen reader when visiting this\ncontrol",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "disabled": {
            "control": { "type": "boolean" },
            "type": { "name": "boolean", "required": false },
            "name": "disabled",
            "required": false,
            "description": "Specify whether the &lt;input&gt; should be disabled",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify an optional className to be applied to the &lt;input&gt; node",
            "defaultValue": "wfp--text__input",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "'wfp--text__input'" }
            }
          },
          "defaultValue": {
            "control": { "type": "object" },
            "name": "defaultValue",
            "type": {
              "required": false,
              "name": "union",
              "value": [{ "name": "string" }, { "name": "number" }]
            },
            "required": false,
            "description": "Optionally provide the default value of the &lt;input&gt;",
            "defaultValue": null,
            "sbType": {
              "name": "union",
              "value": [{ "name": "string" }, { "name": "number" }]
            },
            "table": {
              "type": { "summary": "string | number" },
              "defaultValue": null
            }
          },
          "formItemClassName": {
            "control": { "type": "text" },
            "name": "formItemClassName",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify an optional className to be applied to the form-item node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "id": {
            "control": { "type": "text" },
            "name": "id",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify a custom `id` for the &lt;input&gt;",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "onChange": {
            "name": "onChange",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Optionally provide an `onChange` handler that is called whenever &lt;input&gt;\nis updated",
            "sbType": { "name": "function" },
            "table": {
              "type": { "summary": "func" },
              "defaultValue": { "summary": "() => {}" }
            }
          },
          "onClick": {
            "name": "onClick",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Optionally provide an `onClick` handler that is called whenever the\n&lt;input&gt; is clicked",
            "sbType": { "name": "function" },
            "table": {
              "type": { "summary": "func" },
              "defaultValue": { "summary": "() => {}" }
            }
          },
          "placeholder": {
            "control": { "type": "text" },
            "name": "placeholder",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify the placeholder attribute for the &lt;input&gt;",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "type": {
            "control": { "type": "text" },
            "name": "type",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify the type of the &lt;input&gt;",
            "defaultValue": "text",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "'text'" }
            }
          },
          "value": {
            "control": { "type": "object" },
            "name": "value",
            "type": {
              "required": false,
              "name": "union",
              "value": [{ "name": "string" }, { "name": "number" }]
            },
            "required": false,
            "description": "Specify the value of the &lt;input&gt;",
            "defaultValue": null,
            "sbType": {
              "name": "union",
              "value": [{ "name": "string" }, { "name": "number" }]
            },
            "table": {
              "type": { "summary": "string | number" },
              "defaultValue": null
            }
          },
          "hideLabel": {
            "control": { "type": "boolean" },
            "name": "hideLabel",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether you want the underlying label to be visually hidden",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "invalid": {
            "control": { "type": "boolean" },
            "name": "invalid",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the control is currently invalid",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "invalidText": {
            "control": { "type": "text" },
            "name": "invalidText",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Provide the text that is displayed when the control is in an invalid state",
            "defaultValue": "",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "''" }
            }
          },
          "additional": {
            "control": { "type": "object" },
            "name": "additional",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Provide additional component that is used alongside the input for customization",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "light": {
            "control": { "type": "boolean" },
            "name": "light",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "`true` to use the light version.",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          }
        },
        "initialArgs": {
          "className": "wfp--text__input",
          "type": "text",
          "name": "inputname",
          "helperText": "Optional helperText",
          "labelText": "Disabled labelText",
          "disabled": true
        }
      },
      "forms-toggle--regular": {
        "id": "forms-toggle--regular",
        "kind": "Forms/Toggle",
        "name": "Regular",
        "story": "Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\nYou can customize the content by using `BannerNavigation`.\n"
          },
          "storySource": { "source": "(args) => <Toggle {...args} />" },
          "__id": "forms-toggle--regular",
          "args": {},
          "argTypes": {
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify a custom className to apply to the form-item node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "defaultToggled": {
              "control": { "type": "boolean" },
              "name": "defaultToggled",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the toggle should be on by default",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "onToggle": {
              "name": "onToggle",
              "type": { "required": false, "name": "function" },
              "required": false,
              "description": "Provide an optional hook that is called when the control is toggled",
              "sbType": { "name": "function" },
              "table": {
                "type": { "summary": "func" },
                "defaultValue": { "summary": "() => {}" }
              }
            },
            "id": {
              "control": { "type": "text" },
              "name": "id",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Provide an id that unique represents the underlying `input`",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "name": {
              "control": { "type": "text" },
              "name": "name",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Provide an name that unique represents the underlying `input`",
              "defaultValue": "toggle",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "'toggle'" }
              }
            },
            "toggled": {
              "control": { "type": "boolean" },
              "name": "toggled",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Specify whether the control is toggled",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "labelA": {
              "control": { "type": "text" },
              "name": "labelA",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify the label for the \"off\" position",
              "defaultValue": "Off",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "'Off'" }
              }
            },
            "labelB": {
              "control": { "type": "text" },
              "name": "labelB",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify the label for the \"on\" position",
              "defaultValue": "On",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "'On'" }
              }
            }
          },
          "__isArgsStory": true
        },
        "args": { "name": "toggle", "labelA": "Off", "labelB": "On" },
        "argTypes": {
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify a custom className to apply to the form-item node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "defaultToggled": {
            "control": { "type": "boolean" },
            "name": "defaultToggled",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the toggle should be on by default",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "onToggle": {
            "name": "onToggle",
            "type": { "required": false, "name": "function" },
            "required": false,
            "description": "Provide an optional hook that is called when the control is toggled",
            "sbType": { "name": "function" },
            "table": {
              "type": { "summary": "func" },
              "defaultValue": { "summary": "() => {}" }
            }
          },
          "id": {
            "control": { "type": "text" },
            "name": "id",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Provide an id that unique represents the underlying `input`",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "name": {
            "control": { "type": "text" },
            "name": "name",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Provide an name that unique represents the underlying `input`",
            "defaultValue": "toggle",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "'toggle'" }
            }
          },
          "toggled": {
            "control": { "type": "boolean" },
            "name": "toggled",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Specify whether the control is toggled",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "labelA": {
            "control": { "type": "text" },
            "name": "labelA",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify the label for the \"off\" position",
            "defaultValue": "Off",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "'Off'" }
            }
          },
          "labelB": {
            "control": { "type": "text" },
            "name": "labelB",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify the label for the \"on\" position",
            "defaultValue": "On",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "'On'" }
            }
          }
        },
        "initialArgs": { "name": "toggle", "labelA": "Off", "labelB": "On" }
      },
      "components-tooltip--regular": {
        "id": "components-tooltip--regular",
        "kind": "Components/Tooltip",
        "name": "Regular",
        "story": "Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": {
            "source": "(args) => (\n  <Tooltip\n    // options\n    {...args}>\n    <span>Click here to show tooltip</span>\n  </Tooltip>\n)"
          },
          "__id": "components-tooltip--regular",
          "args": {
            "content": "Label text",
            "children": "This is a helper text"
          },
          "argTypes": {
            "content": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "content",
              "required": false,
              "description": "Provide a custom className to be applied to the containing <a> node",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "children": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "children",
              "required": false,
              "description": "Provide the content for the Link",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "dark": {
              "control": { "type": "boolean" },
              "name": "dark",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Provide a dark styled tooltip",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "placement": {
              "control": {
                "type": "select",
                "options": [
                  "top",
                  "top-start",
                  "top-end",
                  "right",
                  "right-start",
                  "right-end",
                  "bottom",
                  "bottom-start",
                  "bottom-end",
                  "left",
                  "left-start",
                  "left-end"
                ]
              },
              "name": "placement",
              "type": {
                "required": false,
                "name": "enum",
                "value": [
                  "top",
                  "top-start",
                  "top-end",
                  "right",
                  "right-start",
                  "right-end",
                  "bottom",
                  "bottom-start",
                  "bottom-end",
                  "left",
                  "left-start",
                  "left-end"
                ]
              },
              "required": false,
              "description": "Provide the placement of the tooltip",
              "defaultValue": "top",
              "sbType": {
                "name": "enum",
                "value": [
                  "top",
                  "top-start",
                  "top-end",
                  "right",
                  "right-start",
                  "right-end",
                  "bottom",
                  "bottom-start",
                  "bottom-end",
                  "left",
                  "left-start",
                  "left-end"
                ]
              },
              "table": {
                "type": {
                  "summary": "'top' | 'top-start' | 'top-end' | 'right' | 'right-start' | 'right-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'left' | 'left-start' | 'left-end'"
                },
                "defaultValue": { "summary": "'top'" }
              }
            },
            "trigger": {
              "control": { "type": "radio", "options": ["click", "hover"] },
              "name": "trigger",
              "type": {
                "required": false,
                "name": "enum",
                "value": ["click", "hover"]
              },
              "required": false,
              "description": "Provide the placement of the tooltip",
              "defaultValue": "hover",
              "sbType": { "name": "enum", "value": ["click", "hover"] },
              "table": {
                "type": { "summary": "'click' | 'hover'" },
                "defaultValue": { "summary": "'hover'" }
              }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "placement": "top",
          "trigger": "hover",
          "content": "Label text",
          "children": "This is a helper text"
        },
        "argTypes": {
          "content": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "content",
            "required": false,
            "description": "Provide a custom className to be applied to the containing <a> node",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "children": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "children",
            "required": false,
            "description": "Provide the content for the Link",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "dark": {
            "control": { "type": "boolean" },
            "name": "dark",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Provide a dark styled tooltip",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "placement": {
            "control": {
              "type": "select",
              "options": [
                "top",
                "top-start",
                "top-end",
                "right",
                "right-start",
                "right-end",
                "bottom",
                "bottom-start",
                "bottom-end",
                "left",
                "left-start",
                "left-end"
              ]
            },
            "name": "placement",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "top",
                "top-start",
                "top-end",
                "right",
                "right-start",
                "right-end",
                "bottom",
                "bottom-start",
                "bottom-end",
                "left",
                "left-start",
                "left-end"
              ]
            },
            "required": false,
            "description": "Provide the placement of the tooltip",
            "defaultValue": "top",
            "sbType": {
              "name": "enum",
              "value": [
                "top",
                "top-start",
                "top-end",
                "right",
                "right-start",
                "right-end",
                "bottom",
                "bottom-start",
                "bottom-end",
                "left",
                "left-start",
                "left-end"
              ]
            },
            "table": {
              "type": {
                "summary": "'top' | 'top-start' | 'top-end' | 'right' | 'right-start' | 'right-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'left' | 'left-start' | 'left-end'"
              },
              "defaultValue": { "summary": "'top'" }
            }
          },
          "trigger": {
            "control": { "type": "radio", "options": ["click", "hover"] },
            "name": "trigger",
            "type": {
              "required": false,
              "name": "enum",
              "value": ["click", "hover"]
            },
            "required": false,
            "description": "Provide the placement of the tooltip",
            "defaultValue": "hover",
            "sbType": { "name": "enum", "value": ["click", "hover"] },
            "table": {
              "type": { "summary": "'click' | 'hover'" },
              "defaultValue": { "summary": "'hover'" }
            }
          }
        },
        "initialArgs": {
          "placement": "top",
          "trigger": "hover",
          "content": "Label text",
          "children": "This is a helper text"
        }
      },
      "components-tooltip--dark": {
        "id": "components-tooltip--dark",
        "kind": "Components/Tooltip",
        "name": "Dark",
        "story": "Dark",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": {
            "source": "(args) => (\n  <Tooltip\n    // options\n    {...args}>\n    <span>Click here to show tooltip</span>\n  </Tooltip>\n)"
          },
          "__id": "components-tooltip--dark",
          "args": {
            "content": "Label text",
            "children": "This is a helper text",
            "dark": true
          },
          "argTypes": {
            "content": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "content",
              "required": false,
              "description": "Provide a custom className to be applied to the containing <a> node",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "children": {
              "control": { "type": "object" },
              "type": { "name": "other", "required": false, "value": "node" },
              "name": "children",
              "required": false,
              "description": "Provide the content for the Link",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "dark": {
              "control": { "type": "boolean" },
              "type": { "name": "boolean", "required": false },
              "name": "dark",
              "required": false,
              "description": "Provide a dark styled tooltip",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "placement": {
              "control": {
                "type": "select",
                "options": [
                  "top",
                  "top-start",
                  "top-end",
                  "right",
                  "right-start",
                  "right-end",
                  "bottom",
                  "bottom-start",
                  "bottom-end",
                  "left",
                  "left-start",
                  "left-end"
                ]
              },
              "name": "placement",
              "type": {
                "required": false,
                "name": "enum",
                "value": [
                  "top",
                  "top-start",
                  "top-end",
                  "right",
                  "right-start",
                  "right-end",
                  "bottom",
                  "bottom-start",
                  "bottom-end",
                  "left",
                  "left-start",
                  "left-end"
                ]
              },
              "required": false,
              "description": "Provide the placement of the tooltip",
              "defaultValue": "top",
              "sbType": {
                "name": "enum",
                "value": [
                  "top",
                  "top-start",
                  "top-end",
                  "right",
                  "right-start",
                  "right-end",
                  "bottom",
                  "bottom-start",
                  "bottom-end",
                  "left",
                  "left-start",
                  "left-end"
                ]
              },
              "table": {
                "type": {
                  "summary": "'top' | 'top-start' | 'top-end' | 'right' | 'right-start' | 'right-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'left' | 'left-start' | 'left-end'"
                },
                "defaultValue": { "summary": "'top'" }
              }
            },
            "trigger": {
              "control": { "type": "radio", "options": ["click", "hover"] },
              "name": "trigger",
              "type": {
                "required": false,
                "name": "enum",
                "value": ["click", "hover"]
              },
              "required": false,
              "description": "Provide the placement of the tooltip",
              "defaultValue": "hover",
              "sbType": { "name": "enum", "value": ["click", "hover"] },
              "table": {
                "type": { "summary": "'click' | 'hover'" },
                "defaultValue": { "summary": "'hover'" }
              }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "placement": "top",
          "trigger": "hover",
          "content": "Label text",
          "children": "This is a helper text",
          "dark": true
        },
        "argTypes": {
          "content": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "content",
            "required": false,
            "description": "Provide a custom className to be applied to the containing <a> node",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "children": {
            "control": { "type": "object" },
            "type": { "name": "other", "required": false, "value": "node" },
            "name": "children",
            "required": false,
            "description": "Provide the content for the Link",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "dark": {
            "control": { "type": "boolean" },
            "type": { "name": "boolean", "required": false },
            "name": "dark",
            "required": false,
            "description": "Provide a dark styled tooltip",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "placement": {
            "control": {
              "type": "select",
              "options": [
                "top",
                "top-start",
                "top-end",
                "right",
                "right-start",
                "right-end",
                "bottom",
                "bottom-start",
                "bottom-end",
                "left",
                "left-start",
                "left-end"
              ]
            },
            "name": "placement",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "top",
                "top-start",
                "top-end",
                "right",
                "right-start",
                "right-end",
                "bottom",
                "bottom-start",
                "bottom-end",
                "left",
                "left-start",
                "left-end"
              ]
            },
            "required": false,
            "description": "Provide the placement of the tooltip",
            "defaultValue": "top",
            "sbType": {
              "name": "enum",
              "value": [
                "top",
                "top-start",
                "top-end",
                "right",
                "right-start",
                "right-end",
                "bottom",
                "bottom-start",
                "bottom-end",
                "left",
                "left-start",
                "left-end"
              ]
            },
            "table": {
              "type": {
                "summary": "'top' | 'top-start' | 'top-end' | 'right' | 'right-start' | 'right-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'left' | 'left-start' | 'left-end'"
              },
              "defaultValue": { "summary": "'top'" }
            }
          },
          "trigger": {
            "control": { "type": "radio", "options": ["click", "hover"] },
            "name": "trigger",
            "type": {
              "required": false,
              "name": "enum",
              "value": ["click", "hover"]
            },
            "required": false,
            "description": "Provide the placement of the tooltip",
            "defaultValue": "hover",
            "sbType": { "name": "enum", "value": ["click", "hover"] },
            "table": {
              "type": { "summary": "'click' | 'hover'" },
              "defaultValue": { "summary": "'hover'" }
            }
          }
        },
        "initialArgs": {
          "placement": "top",
          "trigger": "hover",
          "content": "Label text",
          "children": "This is a helper text",
          "dark": true
        }
      },
      "components-unit--regular": {
        "id": "components-unit--regular",
        "kind": "Components/Unit",
        "name": "Regular",
        "story": "Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\nYou can customize the content by using `BannerNavigation`.\n"
          },
          "storySource": { "source": "(args) => <Unit {...args} />" },
          "__id": "components-unit--regular",
          "args": { "children": "12345", "type": "usd" },
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "type": {
                "name": "union",
                "required": false,
                "value": [{ "name": "string" }, { "name": "number" }]
              },
              "name": "children",
              "required": false,
              "description": "The value which should be displayed",
              "defaultValue": null,
              "sbType": {
                "name": "union",
                "value": [{ "name": "string" }, { "name": "number" }]
              },
              "table": {
                "type": { "summary": "string | number" },
                "defaultValue": null
              }
            },
            "type": {
              "control": {
                "type": "select",
                "options": [
                  "undefined",
                  "none",
                  "narrow",
                  "usd",
                  "partners",
                  "beneficiaries",
                  "households",
                  "months",
                  "mt",
                  "metricTons",
                  "kg",
                  "num",
                  "yearMonth",
                  "level",
                  "people",
                  "countries",
                  "percentage"
                ]
              },
              "type": {
                "name": "enum",
                "required": false,
                "value": [
                  "undefined",
                  "none",
                  "narrow",
                  "usd",
                  "partners",
                  "beneficiaries",
                  "households",
                  "months",
                  "mt",
                  "metricTons",
                  "kg",
                  "num",
                  "yearMonth",
                  "level",
                  "people",
                  "countries",
                  "percentage"
                ]
              },
              "name": "type",
              "required": false,
              "description": "The unit type",
              "defaultValue": "none",
              "sbType": {
                "name": "enum",
                "value": [
                  "undefined",
                  "none",
                  "narrow",
                  "usd",
                  "partners",
                  "beneficiaries",
                  "households",
                  "months",
                  "mt",
                  "metricTons",
                  "kg",
                  "num",
                  "yearMonth",
                  "level",
                  "people",
                  "countries",
                  "percentage"
                ]
              },
              "table": {
                "type": {
                  "summary": "undefined | 'none' | 'narrow' | 'usd' | 'partners' | 'beneficiaries' | 'households' | 'months' | 'mt' | 'metricTons' | 'kg' | 'num' | 'yearMonth' | 'level' | 'people' | 'countries' | 'percentage'"
                },
                "defaultValue": { "summary": "'none'" }
              }
            },
            "from": {
              "control": { "type": "object" },
              "name": "from",
              "type": {
                "required": false,
                "name": "union",
                "value": [{ "name": "string" }, { "name": "number" }]
              },
              "required": false,
              "description": "Only used for type Percentage will divide value/from string, float",
              "defaultValue": null,
              "sbType": {
                "name": "union",
                "value": [{ "name": "string" }, { "name": "number" }]
              },
              "table": {
                "type": { "summary": "string | number" },
                "defaultValue": null
              }
            },
            "hideEmpty": {
              "control": { "type": "boolean" },
              "name": "hideEmpty",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Hide the Unit if it's value is zero.",
              "defaultValue": null,
              "sbType": { "name": "boolean" },
              "table": { "type": { "summary": "bool" }, "defaultValue": null }
            },
            "minimumFractionDigits": {
              "control": { "type": "number" },
              "name": "minimumFractionDigits",
              "type": { "required": false, "name": "number" },
              "required": false,
              "description": "The minimum number of fraction digits to use. Possible values are from 0 to 20. Only used on numeric types",
              "defaultValue": null,
              "sbType": { "name": "number" },
              "table": { "type": { "summary": "number" }, "defaultValue": null }
            },
            "maximumSignificantDigits": {
              "control": { "type": "number" },
              "name": "maximumSignificantDigits",
              "type": { "required": false, "name": "number" },
              "required": false,
              "description": "A value between 1-21, The maximum number of significant digits to use. Possible values are from 1 to 21; the default is minimumSignificantDigits.",
              "defaultValue": null,
              "sbType": { "name": "number" },
              "table": { "type": { "summary": "number" }, "defaultValue": null }
            },
            "maximumFractionDigits": {
              "control": { "type": "number" },
              "name": "maximumFractionDigits",
              "type": { "required": false, "name": "number" },
              "required": false,
              "description": "A value between 1-21, The minimum number of fraction digits to use. Possible values are from 0 to 20. Only used on numeric types",
              "defaultValue": null,
              "sbType": { "name": "number" },
              "table": { "type": { "summary": "number" }, "defaultValue": null }
            },
            "svg": {
              "control": { "type": "boolean" },
              "name": "svg",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Render output as svg text",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            }
          },
          "__isArgsStory": true
        },
        "args": { "type": "usd", "children": "12345" },
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "type": {
              "name": "union",
              "required": false,
              "value": [{ "name": "string" }, { "name": "number" }]
            },
            "name": "children",
            "required": false,
            "description": "The value which should be displayed",
            "defaultValue": null,
            "sbType": {
              "name": "union",
              "value": [{ "name": "string" }, { "name": "number" }]
            },
            "table": {
              "type": { "summary": "string | number" },
              "defaultValue": null
            }
          },
          "type": {
            "control": {
              "type": "select",
              "options": [
                "undefined",
                "none",
                "narrow",
                "usd",
                "partners",
                "beneficiaries",
                "households",
                "months",
                "mt",
                "metricTons",
                "kg",
                "num",
                "yearMonth",
                "level",
                "people",
                "countries",
                "percentage"
              ]
            },
            "type": {
              "name": "enum",
              "required": false,
              "value": [
                "undefined",
                "none",
                "narrow",
                "usd",
                "partners",
                "beneficiaries",
                "households",
                "months",
                "mt",
                "metricTons",
                "kg",
                "num",
                "yearMonth",
                "level",
                "people",
                "countries",
                "percentage"
              ]
            },
            "name": "type",
            "required": false,
            "description": "The unit type",
            "defaultValue": "none",
            "sbType": {
              "name": "enum",
              "value": [
                "undefined",
                "none",
                "narrow",
                "usd",
                "partners",
                "beneficiaries",
                "households",
                "months",
                "mt",
                "metricTons",
                "kg",
                "num",
                "yearMonth",
                "level",
                "people",
                "countries",
                "percentage"
              ]
            },
            "table": {
              "type": {
                "summary": "undefined | 'none' | 'narrow' | 'usd' | 'partners' | 'beneficiaries' | 'households' | 'months' | 'mt' | 'metricTons' | 'kg' | 'num' | 'yearMonth' | 'level' | 'people' | 'countries' | 'percentage'"
              },
              "defaultValue": { "summary": "'none'" }
            }
          },
          "from": {
            "control": { "type": "object" },
            "name": "from",
            "type": {
              "required": false,
              "name": "union",
              "value": [{ "name": "string" }, { "name": "number" }]
            },
            "required": false,
            "description": "Only used for type Percentage will divide value/from string, float",
            "defaultValue": null,
            "sbType": {
              "name": "union",
              "value": [{ "name": "string" }, { "name": "number" }]
            },
            "table": {
              "type": { "summary": "string | number" },
              "defaultValue": null
            }
          },
          "hideEmpty": {
            "control": { "type": "boolean" },
            "name": "hideEmpty",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Hide the Unit if it's value is zero.",
            "defaultValue": null,
            "sbType": { "name": "boolean" },
            "table": { "type": { "summary": "bool" }, "defaultValue": null }
          },
          "minimumFractionDigits": {
            "control": { "type": "number" },
            "name": "minimumFractionDigits",
            "type": { "required": false, "name": "number" },
            "required": false,
            "description": "The minimum number of fraction digits to use. Possible values are from 0 to 20. Only used on numeric types",
            "defaultValue": null,
            "sbType": { "name": "number" },
            "table": { "type": { "summary": "number" }, "defaultValue": null }
          },
          "maximumSignificantDigits": {
            "control": { "type": "number" },
            "name": "maximumSignificantDigits",
            "type": { "required": false, "name": "number" },
            "required": false,
            "description": "A value between 1-21, The maximum number of significant digits to use. Possible values are from 1 to 21; the default is minimumSignificantDigits.",
            "defaultValue": null,
            "sbType": { "name": "number" },
            "table": { "type": { "summary": "number" }, "defaultValue": null }
          },
          "maximumFractionDigits": {
            "control": { "type": "number" },
            "name": "maximumFractionDigits",
            "type": { "required": false, "name": "number" },
            "required": false,
            "description": "A value between 1-21, The minimum number of fraction digits to use. Possible values are from 0 to 20. Only used on numeric types",
            "defaultValue": null,
            "sbType": { "name": "number" },
            "table": { "type": { "summary": "number" }, "defaultValue": null }
          },
          "svg": {
            "control": { "type": "boolean" },
            "name": "svg",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Render output as svg text",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          }
        },
        "initialArgs": { "type": "usd", "children": "12345" }
      },
      "components-user--regular": {
        "id": "components-user--regular",
        "kind": "Components/User",
        "name": "Regular",
        "story": "Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": { "source": "(args) => <User {...args} />" },
          "__id": "components-user--regular",
          "args": { "children": "Max Mustermann" },
          "argTypes": {
            "children": {
              "control": { "type": "text" },
              "type": { "name": "string" },
              "name": "children"
            },
            "alt": {
              "control": { "type": "text" },
              "name": "alt",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The alt-text of the avatar",
              "defaultValue": "User Icon",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "'User Icon'" }
              }
            },
            "ellipsis": {
              "control": { "type": "boolean" },
              "name": "ellipsis",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Sets the max-width of the user name to 130px and shows an ellipsis",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Provide a custom className that is applied directly to the underlying\n&lt;textarea&gt; node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "description": {
              "control": { "type": "object" },
              "name": "description",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Additional description under the Name will also increase the size\nof the Avatar use &lt;List kind=\"simple\" small /&gt; as default content",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "missingImage": {
              "control": { "type": "radio", "options": ["avatar", "letter"] },
              "name": "missingImage",
              "type": {
                "required": false,
                "name": "enum",
                "value": ["avatar", "letter"]
              },
              "required": false,
              "description": "Selects the generated empty icon if no image is provided.\nCan be `avatar` or `letter`.",
              "defaultValue": "avatar",
              "sbType": { "name": "enum", "value": ["avatar", "letter"] },
              "table": {
                "type": { "summary": "'avatar' | 'letter'" },
                "defaultValue": { "summary": "'avatar'" }
              }
            },
            "extendedDescription": {
              "control": { "type": "object" },
              "name": "extendedDescription",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Extended Description column",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "image": {
              "control": { "type": "text" },
              "name": "image",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Url to an avatar image The size of the image is 25px * 25px.\nProvide at least 50px * 50px to support HiDPI displays.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "showName": {
              "control": { "type": "boolean" },
              "name": "showName",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Show the name next to the avatar",
              "defaultValue": true,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "true" }
              }
            },
            "name": {
              "control": { "type": "text" },
              "name": "name",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The username which will be displayed. Usually `Firstname Lastname`.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "alt": "User Icon",
          "missingImage": "avatar",
          "showName": true,
          "children": "Max Mustermann"
        },
        "argTypes": {
          "children": {
            "control": { "type": "text" },
            "type": { "name": "string" },
            "name": "children"
          },
          "alt": {
            "control": { "type": "text" },
            "name": "alt",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The alt-text of the avatar",
            "defaultValue": "User Icon",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "'User Icon'" }
            }
          },
          "ellipsis": {
            "control": { "type": "boolean" },
            "name": "ellipsis",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Sets the max-width of the user name to 130px and shows an ellipsis",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Provide a custom className that is applied directly to the underlying\n&lt;textarea&gt; node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "description": {
            "control": { "type": "object" },
            "name": "description",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Additional description under the Name will also increase the size\nof the Avatar use &lt;List kind=\"simple\" small /&gt; as default content",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "missingImage": {
            "control": { "type": "radio", "options": ["avatar", "letter"] },
            "name": "missingImage",
            "type": {
              "required": false,
              "name": "enum",
              "value": ["avatar", "letter"]
            },
            "required": false,
            "description": "Selects the generated empty icon if no image is provided.\nCan be `avatar` or `letter`.",
            "defaultValue": "avatar",
            "sbType": { "name": "enum", "value": ["avatar", "letter"] },
            "table": {
              "type": { "summary": "'avatar' | 'letter'" },
              "defaultValue": { "summary": "'avatar'" }
            }
          },
          "extendedDescription": {
            "control": { "type": "object" },
            "name": "extendedDescription",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Extended Description column",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "image": {
            "control": { "type": "text" },
            "name": "image",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Url to an avatar image The size of the image is 25px * 25px.\nProvide at least 50px * 50px to support HiDPI displays.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "showName": {
            "control": { "type": "boolean" },
            "name": "showName",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Show the name next to the avatar",
            "defaultValue": true,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "true" }
            }
          },
          "name": {
            "control": { "type": "text" },
            "name": "name",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The username which will be displayed. Usually `Firstname Lastname`.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          }
        },
        "initialArgs": {
          "alt": "User Icon",
          "missingImage": "avatar",
          "showName": true,
          "children": "Max Mustermann"
        }
      },
      "components-user--avatar-only": {
        "id": "components-user--avatar-only",
        "kind": "Components/User",
        "name": "Avatar Only",
        "story": "Avatar Only",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\nYou can show the avatar only without showing the username.\n"
          },
          "storySource": {
            "source": "(args) => (\n  <User\n    name=\"Max Mustermann\"\n    showName={false}\n    image=\"https://www.wfp.org/sites/default/files/styles/page_accordion/public/images/ourwork_humanitarian.jpg?itok=R0ymBwxH\"\n  />\n)"
          },
          "__id": "components-user--avatar-only",
          "args": {},
          "argTypes": {
            "alt": {
              "control": { "type": "text" },
              "name": "alt",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The alt-text of the avatar",
              "defaultValue": "User Icon",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "'User Icon'" }
              }
            },
            "ellipsis": {
              "control": { "type": "boolean" },
              "name": "ellipsis",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Sets the max-width of the user name to 130px and shows an ellipsis",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Provide a custom className that is applied directly to the underlying\n&lt;textarea&gt; node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "description": {
              "control": { "type": "object" },
              "name": "description",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Additional description under the Name will also increase the size\nof the Avatar use &lt;List kind=\"simple\" small /&gt; as default content",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "missingImage": {
              "control": { "type": "radio", "options": ["avatar", "letter"] },
              "name": "missingImage",
              "type": {
                "required": false,
                "name": "enum",
                "value": ["avatar", "letter"]
              },
              "required": false,
              "description": "Selects the generated empty icon if no image is provided.\nCan be `avatar` or `letter`.",
              "defaultValue": "avatar",
              "sbType": { "name": "enum", "value": ["avatar", "letter"] },
              "table": {
                "type": { "summary": "'avatar' | 'letter'" },
                "defaultValue": { "summary": "'avatar'" }
              }
            },
            "extendedDescription": {
              "control": { "type": "object" },
              "name": "extendedDescription",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Extended Description column",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "image": {
              "control": { "type": "text" },
              "name": "image",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Url to an avatar image The size of the image is 25px * 25px.\nProvide at least 50px * 50px to support HiDPI displays.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "showName": {
              "control": { "type": "boolean" },
              "name": "showName",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Show the name next to the avatar",
              "defaultValue": true,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "true" }
              }
            },
            "name": {
              "control": { "type": "text" },
              "name": "name",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The username which will be displayed. Usually `Firstname Lastname`.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "alt": "User Icon",
          "missingImage": "avatar",
          "showName": true
        },
        "argTypes": {
          "alt": {
            "control": { "type": "text" },
            "name": "alt",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The alt-text of the avatar",
            "defaultValue": "User Icon",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "'User Icon'" }
            }
          },
          "ellipsis": {
            "control": { "type": "boolean" },
            "name": "ellipsis",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Sets the max-width of the user name to 130px and shows an ellipsis",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Provide a custom className that is applied directly to the underlying\n&lt;textarea&gt; node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "description": {
            "control": { "type": "object" },
            "name": "description",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Additional description under the Name will also increase the size\nof the Avatar use &lt;List kind=\"simple\" small /&gt; as default content",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "missingImage": {
            "control": { "type": "radio", "options": ["avatar", "letter"] },
            "name": "missingImage",
            "type": {
              "required": false,
              "name": "enum",
              "value": ["avatar", "letter"]
            },
            "required": false,
            "description": "Selects the generated empty icon if no image is provided.\nCan be `avatar` or `letter`.",
            "defaultValue": "avatar",
            "sbType": { "name": "enum", "value": ["avatar", "letter"] },
            "table": {
              "type": { "summary": "'avatar' | 'letter'" },
              "defaultValue": { "summary": "'avatar'" }
            }
          },
          "extendedDescription": {
            "control": { "type": "object" },
            "name": "extendedDescription",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Extended Description column",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "image": {
            "control": { "type": "text" },
            "name": "image",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Url to an avatar image The size of the image is 25px * 25px.\nProvide at least 50px * 50px to support HiDPI displays.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "showName": {
            "control": { "type": "boolean" },
            "name": "showName",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Show the name next to the avatar",
            "defaultValue": true,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "true" }
            }
          },
          "name": {
            "control": { "type": "text" },
            "name": "name",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The username which will be displayed. Usually `Firstname Lastname`.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          }
        },
        "initialArgs": {
          "alt": "User Icon",
          "missingImage": "avatar",
          "showName": true
        }
      },
      "components-user--extended-user": {
        "id": "components-user--extended-user",
        "kind": "Components/User",
        "name": "Extended User",
        "story": "Extended User",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\nYou can show the avatar only without showing the username.\n"
          },
          "storySource": {
            "source": "(args) => (\n  <User\n    alt=\"Image Alt text\"\n    description={\n      <List kind=\"simple\" small>\n        <ListItem>Business Support Assistant G4</ListItem>\n        <ListItem>Fixed Term</ListItem>\n      </List>\n    }\n    extendedDescription={\n      <List kind=\"simple\" small>\n        <ListItem title=\"First level supervisor\">Marie Curie</ListItem>\n        <ListItem title=\"Mrc\">Tanzania Country Office</ListItem>\n        <ListItem title=\"Head of unit\">Max Planck</ListItem>\n      </List>\n    }\n    name=\"Albert Einstein\"\n    image=\"https://www.wfp.org/sites/default/files/styles/page_accordion/public/images/ourwork_humanitarian.jpg?itok=R0ymBwxH\"\n  />\n)"
          },
          "__id": "components-user--extended-user",
          "args": {},
          "argTypes": {
            "alt": {
              "control": { "type": "text" },
              "name": "alt",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The alt-text of the avatar",
              "defaultValue": "User Icon",
              "sbType": { "name": "string" },
              "table": {
                "type": { "summary": "string" },
                "defaultValue": { "summary": "'User Icon'" }
              }
            },
            "ellipsis": {
              "control": { "type": "boolean" },
              "name": "ellipsis",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Sets the max-width of the user name to 130px and shows an ellipsis",
              "defaultValue": false,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "false" }
              }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Provide a custom className that is applied directly to the underlying\n&lt;textarea&gt; node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "description": {
              "control": { "type": "object" },
              "name": "description",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Additional description under the Name will also increase the size\nof the Avatar use &lt;List kind=\"simple\" small /&gt; as default content",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "missingImage": {
              "control": { "type": "radio", "options": ["avatar", "letter"] },
              "name": "missingImage",
              "type": {
                "required": false,
                "name": "enum",
                "value": ["avatar", "letter"]
              },
              "required": false,
              "description": "Selects the generated empty icon if no image is provided.\nCan be `avatar` or `letter`.",
              "defaultValue": "avatar",
              "sbType": { "name": "enum", "value": ["avatar", "letter"] },
              "table": {
                "type": { "summary": "'avatar' | 'letter'" },
                "defaultValue": { "summary": "'avatar'" }
              }
            },
            "extendedDescription": {
              "control": { "type": "object" },
              "name": "extendedDescription",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Extended Description column",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "image": {
              "control": { "type": "text" },
              "name": "image",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Url to an avatar image The size of the image is 25px * 25px.\nProvide at least 50px * 50px to support HiDPI displays.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "showName": {
              "control": { "type": "boolean" },
              "name": "showName",
              "type": { "required": false, "name": "boolean" },
              "required": false,
              "description": "Show the name next to the avatar",
              "defaultValue": true,
              "sbType": { "name": "boolean" },
              "table": {
                "type": { "summary": "bool" },
                "defaultValue": { "summary": "true" }
              }
            },
            "name": {
              "control": { "type": "text" },
              "name": "name",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "The username which will be displayed. Usually `Firstname Lastname`.",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {
          "alt": "User Icon",
          "missingImage": "avatar",
          "showName": true
        },
        "argTypes": {
          "alt": {
            "control": { "type": "text" },
            "name": "alt",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The alt-text of the avatar",
            "defaultValue": "User Icon",
            "sbType": { "name": "string" },
            "table": {
              "type": { "summary": "string" },
              "defaultValue": { "summary": "'User Icon'" }
            }
          },
          "ellipsis": {
            "control": { "type": "boolean" },
            "name": "ellipsis",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Sets the max-width of the user name to 130px and shows an ellipsis",
            "defaultValue": false,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "false" }
            }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Provide a custom className that is applied directly to the underlying\n&lt;textarea&gt; node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "description": {
            "control": { "type": "object" },
            "name": "description",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Additional description under the Name will also increase the size\nof the Avatar use &lt;List kind=\"simple\" small /&gt; as default content",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "missingImage": {
            "control": { "type": "radio", "options": ["avatar", "letter"] },
            "name": "missingImage",
            "type": {
              "required": false,
              "name": "enum",
              "value": ["avatar", "letter"]
            },
            "required": false,
            "description": "Selects the generated empty icon if no image is provided.\nCan be `avatar` or `letter`.",
            "defaultValue": "avatar",
            "sbType": { "name": "enum", "value": ["avatar", "letter"] },
            "table": {
              "type": { "summary": "'avatar' | 'letter'" },
              "defaultValue": { "summary": "'avatar'" }
            }
          },
          "extendedDescription": {
            "control": { "type": "object" },
            "name": "extendedDescription",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Extended Description column",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "image": {
            "control": { "type": "text" },
            "name": "image",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Url to an avatar image The size of the image is 25px * 25px.\nProvide at least 50px * 50px to support HiDPI displays.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "showName": {
            "control": { "type": "boolean" },
            "name": "showName",
            "type": { "required": false, "name": "boolean" },
            "required": false,
            "description": "Show the name next to the avatar",
            "defaultValue": true,
            "sbType": { "name": "boolean" },
            "table": {
              "type": { "summary": "bool" },
              "defaultValue": { "summary": "true" }
            }
          },
          "name": {
            "control": { "type": "text" },
            "name": "name",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "The username which will be displayed. Usually `Firstname Lastname`.",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          }
        },
        "initialArgs": {
          "alt": "User Icon",
          "missingImage": "avatar",
          "showName": true
        }
      },
      "components-value--regular": {
        "id": "components-value--regular",
        "kind": "Components/Value",
        "name": "Regular",
        "story": "Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\nYou can customize the content by using `BannerNavigation`.\n"
          },
          "storySource": {
            "source": "(args) => (\n  <Value\n    {...args}\n    value={\n      <Unit type=\"Usd\" input=\"thousand\" output=\"million\" showZero hideEmpty>\n        1234567\n      </Unit>\n    }\n    secondaryValue={\n      <Unit type=\"Usd\" input=\"thousand\" output=\"million\" showZero hideEmpty>\n        1234567\n      </Unit>\n    }\n  />\n)"
          },
          "__id": "components-value--regular",
          "args": {},
          "argTypes": {
            "value": {
              "control": { "type": "object" },
              "name": "value",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Provide the content for the primary Value",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "secondaryValue": {
              "control": { "type": "object" },
              "name": "secondaryValue",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Provide the content for the secondary Value",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "title": {
              "control": { "type": "object" },
              "name": "title",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "Provide the content for the title",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Provide a custom className to be applied to the containing <a> node",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {},
        "argTypes": {
          "value": {
            "control": { "type": "object" },
            "name": "value",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Provide the content for the primary Value",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "secondaryValue": {
            "control": { "type": "object" },
            "name": "secondaryValue",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Provide the content for the secondary Value",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "title": {
            "control": { "type": "object" },
            "name": "title",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "Provide the content for the title",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Provide a custom className to be applied to the containing <a> node",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          }
        },
        "initialArgs": {}
      },
      "components-wrapper--regular": {
        "id": "components-wrapper--regular",
        "kind": "Components/Wrapper",
        "name": "Regular",
        "story": "Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "\nYou can customize the content by using `BannerNavigation`.\n"
          },
          "storySource": {
            "source": "(args) => (\n  <Wrapper {...args}>\n    Assisting 91.4 million people in around 83 countries each year, the World\n    Food Programme (WFP) is the leading humanitarian organization saving lives\n    and changing lives, delivering food assistance in emergencies and working\n    with communities to improve nutrition and build resilience. As the\n    international community has committed to end hunger, achieve food security\n    and improved nutrition by 2030, one in nine people worldwide still do not\n    have enough to eat. Food and food-related assistance lie at the heart of the\n    struggle to break the cycle of hunger and poverty. On any given day, WFP has\n    5,000 trucks, 20 ships and 92 planes on the move, delivering food and other\n    assistance to those in most need. Every year, we distribute more than 15\n    billion rations at an estimated average cost per ration of US$ 0.31. These\n    numbers lie at the roots of WFP’s unparalleled reputation as an emergency\n    responder, one that gets the job done quickly at scale in the most difficult\n    environments. WFP’s efforts focus on emergency assistance, relief and\n    rehabilitation, development aid and special operations. Two-thirds of our\n    work is in conflict-affected countries where people are three times more\n    likely to be undernourished than those living in countries without conflict.\n  </Wrapper>\n)"
          },
          "__id": "components-wrapper--regular",
          "args": {},
          "argTypes": {
            "children": {
              "control": { "type": "object" },
              "name": "children",
              "type": { "required": false, "name": "other", "value": "node" },
              "required": false,
              "description": "The content which should be displayed",
              "defaultValue": null,
              "sbType": { "name": "other", "value": "node" },
              "table": { "type": { "summary": "node" }, "defaultValue": null }
            },
            "className": {
              "control": { "type": "text" },
              "name": "className",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Specify additional className which will be added",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "pageWidth": {
              "control": {
                "type": "radio",
                "options": ["xs", "sm", "md", "lg", "full"]
              },
              "name": "pageWidth",
              "type": {
                "required": false,
                "name": "enum",
                "value": ["xs", "sm", "md", "lg", "full"]
              },
              "required": false,
              "description": "`xs` `sm` `md` `lg`:  Set the maximum width of the Wrapper content `xs`: `500px` `sm`: `700px` `md`:`1000px` `lg`: `1200px`",
              "defaultValue": null,
              "sbType": {
                "name": "enum",
                "value": ["xs", "sm", "md", "lg", "full"]
              },
              "table": {
                "type": { "summary": "'xs' | 'sm' | 'md' | 'lg' | 'full'" },
                "defaultValue": null
              }
            },
            "mobilePageWidth": {
              "control": { "type": "text" },
              "name": "mobilePageWidth",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "Width on mobile devices",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            },
            "spacing": {
              "control": { "type": "text" },
              "name": "spacing",
              "type": { "required": false, "name": "string" },
              "required": false,
              "description": "`full` `sm` `md` `lg`:  Width on mobile devices `full`: `100%`",
              "defaultValue": null,
              "sbType": { "name": "string" },
              "table": { "type": { "summary": "string" }, "defaultValue": null }
            }
          },
          "__isArgsStory": true
        },
        "args": {},
        "argTypes": {
          "children": {
            "control": { "type": "object" },
            "name": "children",
            "type": { "required": false, "name": "other", "value": "node" },
            "required": false,
            "description": "The content which should be displayed",
            "defaultValue": null,
            "sbType": { "name": "other", "value": "node" },
            "table": { "type": { "summary": "node" }, "defaultValue": null }
          },
          "className": {
            "control": { "type": "text" },
            "name": "className",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Specify additional className which will be added",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "pageWidth": {
            "control": {
              "type": "radio",
              "options": ["xs", "sm", "md", "lg", "full"]
            },
            "name": "pageWidth",
            "type": {
              "required": false,
              "name": "enum",
              "value": ["xs", "sm", "md", "lg", "full"]
            },
            "required": false,
            "description": "`xs` `sm` `md` `lg`:  Set the maximum width of the Wrapper content `xs`: `500px` `sm`: `700px` `md`:`1000px` `lg`: `1200px`",
            "defaultValue": null,
            "sbType": {
              "name": "enum",
              "value": ["xs", "sm", "md", "lg", "full"]
            },
            "table": {
              "type": { "summary": "'xs' | 'sm' | 'md' | 'lg' | 'full'" },
              "defaultValue": null
            }
          },
          "mobilePageWidth": {
            "control": { "type": "text" },
            "name": "mobilePageWidth",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "Width on mobile devices",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          },
          "spacing": {
            "control": { "type": "text" },
            "name": "spacing",
            "type": { "required": false, "name": "string" },
            "required": false,
            "description": "`full` `sm` `md` `lg`:  Width on mobile devices `full`: `100%`",
            "defaultValue": null,
            "sbType": { "name": "string" },
            "table": { "type": { "summary": "string" }, "defaultValue": null }
          }
        },
        "initialArgs": {}
      },
      "examples-application-page--default": {
        "id": "examples-application-page--default",
        "kind": "Examples/Application page",
        "name": "Default",
        "story": "Default",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": { "source": "(args) => <ApplicationPage />" },
          "__id": "examples-application-page--default",
          "args": {},
          "argTypes": {},
          "__isArgsStory": true
        },
        "args": {},
        "argTypes": {},
        "initialArgs": {}
      },
      "examples-application-page--dashboard": {
        "id": "examples-application-page--dashboard",
        "kind": "Examples/Application page",
        "name": "Dashboard",
        "story": "Dashboard",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "In cases the applications works with minor restrictions and you just want to inform the user you can show a <InfoBar />."
          },
          "storySource": { "source": "(args) => <DashboardPage />" },
          "__id": "examples-application-page--dashboard",
          "args": {},
          "argTypes": {},
          "__isArgsStory": true
        },
        "args": {},
        "argTypes": {},
        "initialArgs": {}
      },
      "documentation-browser-outdated-warning--error-dialog": {
        "id": "documentation-browser-outdated-warning--error-dialog",
        "kind": "Documentation/Browser outdated warning",
        "name": "Error Dialog",
        "story": "Error Dialog",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": {
            "source": "(args) => {\n  const [open, setOpen] = useState(true);\n\n  const isIE = () => {\n    var ua = window.navigator.userAgent; //Check the userAgent property of the window.navigator object\n    var msie = ua.indexOf('MSIE '); // IE 10 or older\n    var trident = ua.indexOf('Trident/'); //IE 11\n    //Remove this line in production and use second line\n    return true;\n    //return msie > 0 || trident > 0;\n  };\n\n  const toggleModal = () => {\n    setOpen(!open);\n  };\n\n  const submitAndClose = () => {\n    setOpen(false);\n  };\n\n  if (isIE())\n    return (\n      <>\n        <button onClick={toggleModal}>Manually open warning modal</button>\n        <Modal\n          open={open}\n          primaryButtonText=\"Continue with current browser\"\n          onRequestSubmit={submitAndClose}\n          modalHeading=\"Outdated browser\"\n          onRequestClose={toggleModal}\n          danger>\n          <p className=\"wfp--modal-content__text\">\n            It looks like you are using Internet Explorer 11 or older as your\n            favourite browser. We recommend that you switch to a more modern\n            browser to ensure that you get the best experience out of this\n            application. <Link href=\"#\">Learn more on go.wfp.org.</Link>\n          </p>\n        </Modal>\n      </>\n    );\n  return null;\n}"
          },
          "__id": "documentation-browser-outdated-warning--error-dialog",
          "args": {},
          "argTypes": {},
          "__isArgsStory": true
        },
        "args": {},
        "argTypes": {},
        "initialArgs": {}
      },
      "documentation-browser-outdated-warning--warning": {
        "id": "documentation-browser-outdated-warning--warning",
        "kind": "Documentation/Browser outdated warning",
        "name": "Warning",
        "story": "Warning",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docs": {
            "storyDescription": "In cases the applications works with minor restrictions and you just want to inform the user you can show a <InfoBar />."
          },
          "storySource": {
            "source": "(args) => (\n  <InfoBar>\n    Your browser version is outdated. <Link href=\"#\">Please upgrade</Link>\n  </InfoBar>\n)"
          },
          "__id": "documentation-browser-outdated-warning--warning",
          "args": {},
          "argTypes": {},
          "__isArgsStory": true
        },
        "args": {},
        "argTypes": {},
        "initialArgs": {}
      },
      "documentation-capitalization--page": {
        "id": "documentation-capitalization--page",
        "kind": "Documentation/Capitalization",
        "name": "Page",
        "story": "Page",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docsOnly": true,
          "__id": "documentation-capitalization--page",
          "args": {},
          "argTypes": {},
          "__isArgsStory": false
        },
        "args": {},
        "argTypes": {},
        "initialArgs": {}
      },
      "documentation-colours--page": {
        "id": "documentation-colours--page",
        "kind": "Documentation/Colours",
        "name": "Page",
        "story": "Page",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docsOnly": true,
          "__id": "documentation-colours--page",
          "args": {},
          "argTypes": {},
          "__isArgsStory": false
        },
        "args": {},
        "argTypes": {},
        "initialArgs": {}
      },
      "examples-complex-form--page": {
        "id": "examples-complex-form--page",
        "kind": "Examples/Complex Form",
        "name": "Page",
        "story": "Page",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docsOnly": true,
          "__id": "examples-complex-form--page",
          "args": {},
          "argTypes": {},
          "__isArgsStory": false
        },
        "args": {},
        "argTypes": {},
        "initialArgs": {}
      },
      "documentation-credits--page": {
        "id": "documentation-credits--page",
        "kind": "Documentation/Credits",
        "name": "Page",
        "story": "Page",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docsOnly": true,
          "__id": "documentation-credits--page",
          "args": {},
          "argTypes": {},
          "__isArgsStory": false
        },
        "args": {},
        "argTypes": {},
        "initialArgs": {}
      },
      "documentations-charts--page": {
        "id": "documentations-charts--page",
        "kind": "Documentations/Charts",
        "name": "Page",
        "story": "Page",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docsOnly": true,
          "__id": "documentations-charts--page",
          "args": {},
          "argTypes": {},
          "__isArgsStory": false
        },
        "args": {},
        "argTypes": {},
        "initialArgs": {}
      },
      "components-chart--mix-bar-chart-chart": {
        "id": "components-chart--mix-bar-chart-chart",
        "kind": "Components/Chart",
        "name": "Mix Bar Chart Chart",
        "story": "Mix Bar Chart Chart",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": {
            "source": "function MixBarChartChart() {\n  return (\n    <BarChart\n      width={500}\n      height={300}\n      data={data}\n      margin={{\n        top: 20,\n        right: 30,\n        left: 20,\n        bottom: 5,\n      }}>\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"name\" />\n      <YAxis />\n      <Tooltip />\n      <Legend />\n      <Bar dataKey=\"pv\" stackId=\"a\" fill=\"#8884d8\" />\n      <Bar dataKey=\"amt\" stackId=\"a\" fill=\"#82ca9d\" />\n      <Bar dataKey=\"uv\" fill=\"#ffc658\" />\n    </BarChart>\n  );\n}"
          },
          "__id": "components-chart--mix-bar-chart-chart",
          "args": {},
          "argTypes": {},
          "__isArgsStory": false
        },
        "args": {},
        "argTypes": {},
        "initialArgs": {}
      },
      "documentation-email-template--page": {
        "id": "documentation-email-template--page",
        "kind": "Documentation/Email template",
        "name": "Page",
        "story": "Page",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docsOnly": true,
          "__id": "documentation-email-template--page",
          "args": {},
          "argTypes": {},
          "__isArgsStory": false
        },
        "args": {},
        "argTypes": {},
        "initialArgs": {}
      },
      "documentation-favicons--page": {
        "id": "documentation-favicons--page",
        "kind": "Documentation/Favicons",
        "name": "Page",
        "story": "Page",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docsOnly": true,
          "__id": "documentation-favicons--page",
          "args": {},
          "argTypes": {},
          "__isArgsStory": false
        },
        "args": {},
        "argTypes": {},
        "initialArgs": {}
      },
      "documentation-intro--page": {
        "id": "documentation-intro--page",
        "kind": "Documentation/Intro",
        "name": "Page",
        "story": "Page",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docsOnly": true,
          "__id": "documentation-intro--page",
          "args": {},
          "argTypes": {},
          "__isArgsStory": false
        },
        "args": {},
        "argTypes": {},
        "initialArgs": {}
      },
      "examples-login--regular": {
        "id": "examples-login--regular",
        "kind": "Examples/Login",
        "name": "Regular",
        "story": "Regular",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "storySource": {
            "source": "(args) => (\n  <Modal\n    open\n    hideClose\n    modalHeading=\"Login\"\n    inPortal={false}\n    modalLabel=\"Sample Application\"\n    primaryButtonText=\"Login\"\n    secondaryButtonText=\"Forgot password?\"\n    modalSecondaryAction={\n      <Button kind=\"secondary\">Sign in with WFP SSO</Button>\n    }\n    modalFooter={({ primaryButtonText, secondaryButtonText }) => (\n      <div className=\"wfp--modal__buttons-container\">\n        <Link>{secondaryButtonText}</Link>\n        <Button>{primaryButtonText}</Button>\n      </div>\n    )}\n    backgroundImage=\"https://password.go.wfp.org/images/MAU_20150202_WFP-Agron_Dragaj_0018.jpg\">\n    <p className=\"wfp--modal-content__text wfp--form-long\">\n      <TextInput\n        id=\"emailinput\"\n        labelText=\"Your email adress\"\n        placeholder=\"yourname@wfp.org\"\n        helperText={`Enter the email adress you've used when you've registred`}\n      />\n      <TextInput\n        id=\"passportinput\"\n        labelText=\"Your password\"\n        type=\"password\"\n        placeholder=\"\"\n        helperText=\"\"\n      />\n    </p>\n  </Modal>\n)"
          },
          "__id": "examples-login--regular",
          "args": {},
          "argTypes": {},
          "__isArgsStory": true
        },
        "args": {},
        "argTypes": {},
        "initialArgs": {}
      },
      "documentation-logo--page": {
        "id": "documentation-logo--page",
        "kind": "Documentation/Logo",
        "name": "Page",
        "story": "Page",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docsOnly": true,
          "__id": "documentation-logo--page",
          "args": {},
          "argTypes": {},
          "__isArgsStory": false
        },
        "args": {},
        "argTypes": {},
        "initialArgs": {}
      },
      "documentation-naming-convention--page": {
        "id": "documentation-naming-convention--page",
        "kind": "Documentation/Naming convention",
        "name": "Page",
        "story": "Page",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docsOnly": true,
          "__id": "documentation-naming-convention--page",
          "args": {},
          "argTypes": {},
          "__isArgsStory": false
        },
        "args": {},
        "argTypes": {},
        "initialArgs": {}
      },
      "documentation-page-speed--page": {
        "id": "documentation-page-speed--page",
        "kind": "Documentation/Page Speed",
        "name": "Page",
        "story": "Page",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docsOnly": true,
          "__id": "documentation-page-speed--page",
          "args": {},
          "argTypes": {},
          "__isArgsStory": false
        },
        "args": {},
        "argTypes": {},
        "initialArgs": {}
      },
      "getting-started-getting-started-designers--page": {
        "id": "getting-started-getting-started-designers--page",
        "kind": "Getting started/Getting started/Designers",
        "name": "Page",
        "story": "Page",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docsOnly": true,
          "__id": "getting-started-getting-started-designers--page",
          "args": {},
          "argTypes": {},
          "__isArgsStory": false
        },
        "args": {},
        "argTypes": {},
        "initialArgs": {}
      },
      "getting-started-getting-started-recommended-tools--page": {
        "id": "getting-started-getting-started-recommended-tools--page",
        "kind": "Getting started/Getting started/Recommended tools",
        "name": "Page",
        "story": "Page",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docsOnly": true,
          "__id": "getting-started-getting-started-recommended-tools--page",
          "args": {},
          "argTypes": {},
          "__isArgsStory": false
        },
        "args": {},
        "argTypes": {},
        "initialArgs": {}
      },
      "getting-started-getting-started-usage-for-developers--page": {
        "id": "getting-started-getting-started-usage-for-developers--page",
        "kind": "Getting started/Getting started/Usage for Developers",
        "name": "Page",
        "story": "Page",
        "hooks": {
          "hookListsMap": {},
          "mountedDecorators": {},
          "prevMountedDecorators": {},
          "currentHooks": [],
          "nextHookIndex": 0,
          "currentPhase": "NONE",
          "currentEffects": [],
          "prevEffects": [],
          "currentDecoratorName": null,
          "hasUpdates": false,
          "currentContext": null
        },
        "parameters": {
          "docsOnly": true,
          "__id": "getting-started-getting-started-usage-for-developers--page",
          "args": {},
          "argTypes": {},
          "__isArgsStory": false
        },
        "args": {},
        "argTypes": {},
        "initialArgs": {}
      }
    },
    "_argTypesEnhancers": [
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null
    ],
    "_selectionSpecifier": {
      "storySpecifier": "components-button--button-regular",
      "viewMode": "docs"
    },
    "_selection": {
      "storyId": "components-button--button-regular",
      "viewMode": "docs"
    }
  },
  "id": "components-button--button-regular",
  "kind": "Components/Button",
  "name": "Button Regular",
  "story": "Button Regular",
  "hooks": {
    "hookListsMap": {},
    "mountedDecorators": {},
    "prevMountedDecorators": {},
    "currentHooks": [],
    "nextHookIndex": 0,
    "currentPhase": "NONE",
    "currentEffects": [],
    "prevEffects": [],
    "currentDecoratorName": null,
    "hasUpdates": false,
    "currentContext": null
  },
  "parameters": {
    "docs": {
      "inlineStories": true,
      "iframeHeight": 100,
      "theme": {
        "base": "light",
        "colorPrimary": "#FF4785",
        "colorSecondary": "#1EA7FD",
        "appBg": "#F6F9FC",
        "appContentBg": "#FFFFFF",
        "appBorderColor": "rgba(0,0,0,.1)",
        "appBorderRadius": 4,
        "fontBase": "\"Open Sans\", sans-serif",
        "fontCode": "monospace",
        "textColor": "#031c2d",
        "textInverseColor": "#FFFFFF",
        "barTextColor": "#999999",
        "barSelectedColor": "#1EA7FD",
        "barBg": "#FFFFFF",
        "inputBg": "#FFFFFF",
        "inputBorder": "rgba(0,0,0,.1)",
        "inputTextColor": "#333333",
        "inputBorderRadius": 4,
        "headerCommon": { "color": "red" }
      }
    },
    "viewMode": "docs",
    "controls": { "expanded": true },
    "previewTabs": {
      "storybook/docs/panel": { "index": -1, "title": "Documentation" },
      "canvas": { "title": "Code" }
    },
    "framework": "react",
    "fileName": "./src/components/Button/Button.stories.js",
    "componentSubtitle": "Component",
    "status": "released",
    "args": { "children": "Button", "href": "#" },
    "argTypes": {
      "children": {
        "control": { "type": "object" },
        "type": { "name": "other", "required": false, "value": "node" },
        "name": "children",
        "required": false,
        "description": "Specify the content of your Button",
        "defaultValue": null,
        "sbType": { "name": "other", "value": "node" },
        "table": { "type": { "summary": "node" }, "defaultValue": null }
      },
      "href": {
        "control": { "type": "text" },
        "type": { "name": "string", "required": false },
        "name": "href",
        "required": false,
        "description": "Optionally specify an href for your Button to become an <a> element",
        "defaultValue": null,
        "sbType": { "name": "string" },
        "table": { "type": { "summary": "string" }, "defaultValue": null }
      },
      "className": {
        "control": { "type": "text" },
        "name": "className",
        "type": { "required": false, "name": "string" },
        "required": false,
        "description": "Specify an optional className to be added to your Button",
        "defaultValue": null,
        "sbType": { "name": "string" },
        "table": { "type": { "summary": "string" }, "defaultValue": null }
      },
      "disabled": {
        "control": { "type": "boolean" },
        "name": "disabled",
        "type": { "required": false, "name": "boolean" },
        "required": false,
        "description": "Specify whether the Button should be disabled, or not",
        "defaultValue": false,
        "sbType": { "name": "boolean" },
        "table": {
          "type": { "summary": "bool" },
          "defaultValue": { "summary": "false" }
        }
      },
      "small": {
        "control": { "type": "boolean" },
        "name": "small",
        "type": { "required": false, "name": "boolean" },
        "required": false,
        "description": "Specify whether the Button should be a small variant",
        "defaultValue": false,
        "sbType": { "name": "boolean" },
        "table": {
          "type": { "summary": "bool" },
          "defaultValue": { "summary": "false" }
        }
      },
      "kind": {
        "control": {
          "type": "select",
          "options": [
            "primary",
            "secondary",
            "accent",
            "danger",
            "ghost",
            "inverse--primary",
            "inverse",
            "danger--primary",
            "tertiary",
            "navigation"
          ]
        },
        "name": "kind",
        "type": {
          "required": false,
          "name": "enum",
          "value": [
            "primary",
            "secondary",
            "accent",
            "danger",
            "ghost",
            "inverse--primary",
            "inverse",
            "danger--primary",
            "tertiary",
            "navigation"
          ]
        },
        "required": false,
        "description": "Specify the kind of Button you want to create",
        "defaultValue": "primary",
        "sbType": {
          "name": "enum",
          "value": [
            "primary",
            "secondary",
            "accent",
            "danger",
            "ghost",
            "inverse--primary",
            "inverse",
            "danger--primary",
            "tertiary",
            "navigation"
          ]
        },
        "table": {
          "type": {
            "summary": "'primary' | 'secondary' | 'accent' | 'danger' | 'ghost' | 'inverse--primary' | 'inverse' | 'danger--primary' | 'tertiary' | 'navigation'"
          },
          "defaultValue": { "summary": "'primary'" }
        }
      },
      "tabIndex": {
        "control": { "type": "number" },
        "name": "tabIndex",
        "type": { "required": false, "name": "number" },
        "required": false,
        "description": "Optional prop to specify the tabIndex of the Button",
        "defaultValue": 0,
        "sbType": { "name": "number" },
        "table": {
          "type": { "summary": "number" },
          "defaultValue": { "summary": "0" }
        }
      },
      "type": {
        "control": {
          "type": "radio",
          "options": ["button", "reset", "submit"]
        },
        "name": "type",
        "type": {
          "required": false,
          "name": "enum",
          "value": ["button", "reset", "submit"]
        },
        "required": false,
        "description": "Optional prop to specify the type of the Button",
        "defaultValue": "button",
        "sbType": { "name": "enum", "value": ["button", "reset", "submit"] },
        "table": {
          "type": { "summary": "'button' | 'reset' | 'submit'" },
          "defaultValue": { "summary": "'button'" }
        }
      },
      "role": {
        "control": { "type": "text" },
        "name": "role",
        "type": { "required": false, "name": "string" },
        "required": false,
        "description": "Optional prop to specify the role of the Button",
        "defaultValue": null,
        "sbType": { "name": "string" },
        "table": { "type": { "summary": "string" }, "defaultValue": null }
      },
      "icon": {
        "control": { "type": "object" },
        "name": "icon",
        "type": {
          "required": false,
          "name": "object",
          "value": {
            "width": { "name": "string" },
            "height": { "name": "string" },
            "viewBox": { "name": "string" },
            "svgData": { "name": "object" }
          }
        },
        "required": false,
        "description": "Specify an `icon` to include in the Button through an object representing the SVG data of the icon, similar to the `Icon` component",
        "defaultValue": null,
        "sbType": {
          "name": "object",
          "value": {
            "width": { "name": "string" },
            "height": { "name": "string" },
            "viewBox": { "name": "string" },
            "svgData": { "name": "object" }
          }
        },
        "table": {
          "type": {
            "summary": "{    width: string,    height: string,    viewBox: string,    svgData: object }"
          },
          "defaultValue": null
        }
      },
      "iconDescription": {
        "control": { "type": "object" },
        "name": "iconDescription",
        "type": {
          "required": false,
          "raw": "(props) => {\n  if (props.icon && !props.iconDescription) {\n    return new Error(\n      'icon property specified without also providing an iconDescription property.'\n    );\n  }\n  return undefined;\n}",
          "name": "other",
          "value": "custom"
        },
        "required": false,
        "description": "If specifying the `icon` prop, provide a description for that icon that can\nbe read by screen readers",
        "defaultValue": "Provide icon description if icon is used",
        "sbType": {
          "raw": "(props) => {\n  if (props.icon && !props.iconDescription) {\n    return new Error(\n      'icon property specified without also providing an iconDescription property.'\n    );\n  }\n  return undefined;\n}",
          "name": "other",
          "value": "custom"
        },
        "table": {
          "type": {
            "summary": "func",
            "detail": "(props) => {\n  if (props.icon && !props.iconDescription) {\n    return new Error(\n      'icon property specified without also providing an iconDescription property.'\n    );\n  }\n  return undefined;\n}"
          },
          "defaultValue": {
            "summary": "'Provide icon description if icon is used'"
          }
        }
      },
      "iconReverse": {
        "control": { "type": "boolean" },
        "name": "iconReverse",
        "type": { "required": false, "name": "boolean" },
        "required": false,
        "description": "Optionally specify an href for your Button to become an <a> element",
        "defaultValue": false,
        "sbType": { "name": "boolean" },
        "table": {
          "type": { "summary": "bool" },
          "defaultValue": { "summary": "false" }
        }
      }
    },
    "storySource": { "source": "(args) => <Button {...args} />" },
    "__id": "components-button--button-regular",
    "__isArgsStory": true
  },
  "args": {
    "kind": "primary",
    "type": "button",
    "iconDescription": "Provide icon description if icon is used",
    "children": "Button",
    "href": "#"
  },
  "argTypes": {
    "children": {
      "control": { "type": "object" },
      "type": { "name": "other", "required": false, "value": "node" },
      "name": "children",
      "required": false,
      "description": "Specify the content of your Button",
      "defaultValue": null,
      "sbType": { "name": "other", "value": "node" },
      "table": { "type": { "summary": "node" }, "defaultValue": null }
    },
    "href": {
      "control": { "type": "text" },
      "type": { "name": "string", "required": false },
      "name": "href",
      "required": false,
      "description": "Optionally specify an href for your Button to become an <a> element",
      "defaultValue": null,
      "sbType": { "name": "string" },
      "table": { "type": { "summary": "string" }, "defaultValue": null }
    },
    "className": {
      "control": { "type": "text" },
      "name": "className",
      "type": { "required": false, "name": "string" },
      "required": false,
      "description": "Specify an optional className to be added to your Button",
      "defaultValue": null,
      "sbType": { "name": "string" },
      "table": { "type": { "summary": "string" }, "defaultValue": null }
    },
    "disabled": {
      "control": { "type": "boolean" },
      "name": "disabled",
      "type": { "required": false, "name": "boolean" },
      "required": false,
      "description": "Specify whether the Button should be disabled, or not",
      "defaultValue": false,
      "sbType": { "name": "boolean" },
      "table": {
        "type": { "summary": "bool" },
        "defaultValue": { "summary": "false" }
      }
    },
    "small": {
      "control": { "type": "boolean" },
      "name": "small",
      "type": { "required": false, "name": "boolean" },
      "required": false,
      "description": "Specify whether the Button should be a small variant",
      "defaultValue": false,
      "sbType": { "name": "boolean" },
      "table": {
        "type": { "summary": "bool" },
        "defaultValue": { "summary": "false" }
      }
    },
    "kind": {
      "control": {
        "type": "select",
        "options": [
          "primary",
          "secondary",
          "accent",
          "danger",
          "ghost",
          "inverse--primary",
          "inverse",
          "danger--primary",
          "tertiary",
          "navigation"
        ]
      },
      "name": "kind",
      "type": {
        "required": false,
        "name": "enum",
        "value": [
          "primary",
          "secondary",
          "accent",
          "danger",
          "ghost",
          "inverse--primary",
          "inverse",
          "danger--primary",
          "tertiary",
          "navigation"
        ]
      },
      "required": false,
      "description": "Specify the kind of Button you want to create",
      "defaultValue": "primary",
      "sbType": {
        "name": "enum",
        "value": [
          "primary",
          "secondary",
          "accent",
          "danger",
          "ghost",
          "inverse--primary",
          "inverse",
          "danger--primary",
          "tertiary",
          "navigation"
        ]
      },
      "table": {
        "type": {
          "summary": "'primary' | 'secondary' | 'accent' | 'danger' | 'ghost' | 'inverse--primary' | 'inverse' | 'danger--primary' | 'tertiary' | 'navigation'"
        },
        "defaultValue": { "summary": "'primary'" }
      }
    },
    "tabIndex": {
      "control": { "type": "number" },
      "name": "tabIndex",
      "type": { "required": false, "name": "number" },
      "required": false,
      "description": "Optional prop to specify the tabIndex of the Button",
      "defaultValue": 0,
      "sbType": { "name": "number" },
      "table": {
        "type": { "summary": "number" },
        "defaultValue": { "summary": "0" }
      }
    },
    "type": {
      "control": { "type": "radio", "options": ["button", "reset", "submit"] },
      "name": "type",
      "type": {
        "required": false,
        "name": "enum",
        "value": ["button", "reset", "submit"]
      },
      "required": false,
      "description": "Optional prop to specify the type of the Button",
      "defaultValue": "button",
      "sbType": { "name": "enum", "value": ["button", "reset", "submit"] },
      "table": {
        "type": { "summary": "'button' | 'reset' | 'submit'" },
        "defaultValue": { "summary": "'button'" }
      }
    },
    "role": {
      "control": { "type": "text" },
      "name": "role",
      "type": { "required": false, "name": "string" },
      "required": false,
      "description": "Optional prop to specify the role of the Button",
      "defaultValue": null,
      "sbType": { "name": "string" },
      "table": { "type": { "summary": "string" }, "defaultValue": null }
    },
    "icon": {
      "control": { "type": "object" },
      "name": "icon",
      "type": {
        "required": false,
        "name": "object",
        "value": {
          "width": { "name": "string" },
          "height": { "name": "string" },
          "viewBox": { "name": "string" },
          "svgData": { "name": "object" }
        }
      },
      "required": false,
      "description": "Specify an `icon` to include in the Button through an object representing the SVG data of the icon, similar to the `Icon` component",
      "defaultValue": null,
      "sbType": {
        "name": "object",
        "value": {
          "width": { "name": "string" },
          "height": { "name": "string" },
          "viewBox": { "name": "string" },
          "svgData": { "name": "object" }
        }
      },
      "table": {
        "type": {
          "summary": "{    width: string,    height: string,    viewBox: string,    svgData: object }"
        },
        "defaultValue": null
      }
    },
    "iconDescription": {
      "control": { "type": "object" },
      "name": "iconDescription",
      "type": {
        "required": false,
        "raw": "(props) => {\n  if (props.icon && !props.iconDescription) {\n    return new Error(\n      'icon property specified without also providing an iconDescription property.'\n    );\n  }\n  return undefined;\n}",
        "name": "other",
        "value": "custom"
      },
      "required": false,
      "description": "If specifying the `icon` prop, provide a description for that icon that can\nbe read by screen readers",
      "defaultValue": "Provide icon description if icon is used",
      "sbType": {
        "raw": "(props) => {\n  if (props.icon && !props.iconDescription) {\n    return new Error(\n      'icon property specified without also providing an iconDescription property.'\n    );\n  }\n  return undefined;\n}",
        "name": "other",
        "value": "custom"
      },
      "table": {
        "type": {
          "summary": "func",
          "detail": "(props) => {\n  if (props.icon && !props.iconDescription) {\n    return new Error(\n      'icon property specified without also providing an iconDescription property.'\n    );\n  }\n  return undefined;\n}"
        },
        "defaultValue": {
          "summary": "'Provide icon description if icon is used'"
        }
      }
    },
    "iconReverse": {
      "control": { "type": "boolean" },
      "name": "iconReverse",
      "type": { "required": false, "name": "boolean" },
      "required": false,
      "description": "Optionally specify an href for your Button to become an <a> element",
      "defaultValue": false,
      "sbType": { "name": "boolean" },
      "table": {
        "type": { "summary": "bool" },
        "defaultValue": { "summary": "false" }
      }
    }
  },
  "initialArgs": {
    "kind": "primary",
    "type": "button",
    "iconDescription": "Provide icon description if icon is used",
    "children": "Button",
    "href": "#"
  },
  "globals": {},
  "forceRender": false
}
